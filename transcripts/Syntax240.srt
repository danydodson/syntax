1
00:00:01,320 --> 00:00:10,530
Announcer: You're listening to syntax, the podcast with the tastiest web development treats out there, strap yourself in and get ready to live ski and Wes Bos.

2
00:00:10,590 --> 00:01:46,950
Wes Bos: Welcome to syntax. This is the podcast with the tastiest web development treats out there. Today, we got a good one for you. We're gonna be talking about like emergency UI when building a website. And this is sort of like come up in the last little while. And I like to call this snow day UI is when something happens to a business or a school or organization. And they need to quickly get information across to their website visitors via a pop up or a banner or a special page on their website is your website set up for something like that. And this is sort of bugging me, because I've been going to all of these websites for schools and businesses and whatnot. And they all have these just awful. Like, clearly just threw in a div and type some content or they like have one editable little block. And they do massive Times New Roman font with the like green background. Because like when there's an emergency, we don't necessarily have time to wait for the web developer to build something. And I think that there is something to talk about here in terms of like, what should you do for your websites to be prepared for putting across UI and being able to communicate effectively for anyone that that visits the websites and needs to get that information? Interesting, let alone like I'm saying snow day here because like we're all stressed out here. And that's sort of the basic thing if a school is closed, because there's too much snow, you need to get that information across to to everybody. But what obviously we're talking about what else is going on in the world right now?

3
00:01:47,160 --> 00:01:59,610
Scott Tolinski: Yeah, I felt like you're just like you're coining a term here with the snow day UI. Like that's, that's a pretty cool idea. You could get like a book apart book about snow day UI snow day UI. Yeah. I think that's interesting.

4
00:01:59,760 --> 00:02:02,340
Wes Bos: What do they have in the south where they don't have snow days?

5
00:02:03,840 --> 00:02:11,370
Scott Tolinski: Well, I suppose if there is this, like if the snow hits the ground, everybody screeches to a halt over there. So you can still call it a snow day.

6
00:02:11,580 --> 00:02:25,560
Wes Bos: That's true. Yeah, Atlanta gets like one centimeter. And it's just out of order. Yeah. All right. Today, we're sponsored by two awesome comp companies Sanity and Sentry. We'll talk about them partway through the episode.

7
00:02:26,130 --> 00:02:34,890
Scott Tolinski: Cool. So my name is Scott Tolinksi. I don't know if Wes you introduced me or not? No, No, you didn't. You didn't introduce your co host.

8
00:02:35,070 --> 00:02:35,940
Wes Bos: Sorry about that.

9
00:02:36,360 --> 00:04:44,610
Scott Tolinski: We're all out of sorts here. I can't even see Wes, because of the bandwidth. So we're like, the first time ever, we don't have headphone latency. But we're still talking over each other because we can see when we're about to talk. So it's, it's a super fun. We're switching it up. It's getting getting kind of wild. I did the the most interesting thing on Saturday night that I kind of wanted to share on this that would be some fun little quarantine thing. So you know, all the the kids are using zoom. Nowadays, all the kids, all the kids are in zoom. Kids are in zoom. Well, my parents are my dad's using zoom for his work. My brother is using zoom for his work. We set up I don't know if you've ever played these games. They're called the jackbox party pack. No, they're games that you play either on the computer or on a Nintendo Switch or whatever. But everybody uses their phone as a controller. And you hit a you website, you enter a four digit code, and then your phone becomes the controller where you insert the questions or you draw the things or you do that it's a fascinating I and we maybe we should talk about it and look into it, like what their execution of it is because it's web tech meets video game tech meets, you know, all the stuff we're doing here. It's so cool. But guess what we did, because there's no online play or anything like that. We used my cam link that I use. It's the little USB thing that is HDMI for my camera. Yeah, I plugged my nintendo switch into the cam link via HDMI, and then plug that into my computer. Then using zoom, I shared the screen with everybody. So we played jackbox party pack with my entire family via zoom on my own personal Nintendo Switch. It was the coolest thing ever. That's amazing. I felt like a wizard of this tech because everybody's using your own phone. It's all just hitting the web. You know that the latency was like non existent. It was so cool, because you could answer the questions in real time or whatever. And everybody's worked it like without a hitch. There was like no issues with it whatsoever. Wow. Yeah, this is really cool. That's next level. I like that a lot.

10
00:04:44,700 --> 00:09:42,750
Wes Bos: Yeah, yeah. I thought that that was a lot of fun. Oh, man. All right. So let's jump on into it. So it's a snow day or it's a global pandemic or whatever and your client needs to relay information to its website visitor as quickly and as efficient as possible, how do they do that? What do you need in place on your website. So, first of all, at the very least, the customer should be able to easily update their website. And to reflect this info, not to mention all of the stuff we're going to talk about today, they shouldn't have to contact you, as a web developer to add something to the website. So I've previously done this, where it's just a banner at the top of the website. And in the back end, you can there's a little checkbox show the snow day banner, turn it on, or turn it off. And then you can type something into there, like a link or, or an image or something like that. So let's just go through what are the the sort of pieces that you need on this at the very basic, you need some sort of banner or a pop up that shows when when the user visits your the homepage? So this is something it may seem super simple, but you start to think about Okay, well, does that banner interfere with anything else that is currently on the page? Is it fixed? Or is it a static? Does it scroll with the website? Is it fixed on desktop? Is it not on on mobile, you sort of have to, to think about all of those things, something that I saw quite a bit was pop ups on websites that were not properly styled for mobile. So whether the images were stretched, somebody threw an image in there where the developer was not, not thinking that they would put an image in there, horizontally scrolled, things like that. So just at the very basic, and this probably will take you an extra hour to code into every website that you now make. But the ability to have a banner and or a pop up on the homepage that will obviously show to the user when there is an emergency situation. So I'm curious about this, because we have some of these in our site, and I'm interested to hear some of your thoughts on this. So if these things, whether it's a pop up, or I mean, if it's a pop up, it's obviously dismissible. But a banner can also be dismissible, too, with like an X just to get it out of there. Yeah. How do you personally store that information as to whether or not that user has clicked that banner? Do you throw it in a cookie? Yeah, that's a really good question. Because like, you want to be able to dismiss it. And for it not to come back every single time that the user visits a website, especially a pop up, that's super annoying. Yeah, that would be really, and I've certainly seen some of those in the situation that we're in right now. So I either use a cookie or local storage, I was going to recommend local storage. And basically, you just have like a setting either in the cookie or in local storage. And it can just be a totally client side cookie, that doesn't need to be a like a secure cookie or server side cookie. And you just say like, has it been opened? Or has it been closed? And you can set that thing to true? And then before you show that thing, you you go ahead and check if that thing has been set, and I was gonna say local storage, but you sent me this thing other day that local storage now only sticks around for seven days. Yeah. So this is one of the part of the reason why I'm asking this question because I keep things like that in local storage. Personally, I like all sorts of little user settings and local storage, including like whether or not they clicked on a pop up. But it got me thinking about like, should I like if the user has a user object? Should I store some of those in the DB? Or should I store some of those in cookies, because there is some like, we'll link to this in the show notes. There was this post about local storage being removed after seven days, but there was a lot of caveats to that. And it's only in Safari, by the way, which of course, Safari Come on. And their their idea is that it's like going to prevent trackers and things like that, which I get and it's very important. But the caveats around it are that I think you have to be coming from or the request has to be coming from a known tracker, like Facebook or something like that. And as well, you have to not visit the site. If you're visiting the site that like seven days, changes, seven days regardless seems like too little to me. But I don't know, there was a lot of discussion and caveats about this. There's a I'll see if I can find it. There was a really great, really great Hacker News comments section, or people who really dove into the specifics about it. We're talking about the specifics. And obviously, it's something you want to familiarize yourself with a little bit. Yeah, so does it have to come from from unknown tracker? Because like, I'm thinking myself, I store volume and playback rate and a few other user settings, the right likewise, I store that in local storage.

11
00:09:42,919 --> 00:14:17,610
So I wasn't able to correctly identify exactly like all of the caveats here. Somebody was saying that that was the case. And then they're like, well, what if, like, what what's the step there like this Google like if your site includes Google Analytics, does that put you on a target of known tracks? You know, yeah, how do you make sure that you're clear from whatever's going on here? And I do think it I don't know, maybe the team behind this has thought about this more than I have. But it does seem a little over the top. Yeah, it's frustrating when we all this happens often, where we get these new API's that are amazing. And then the marketers find a way to abuse it to track you. And then then we sort of have to claw back, like a battery status API that happened to that. There's a couple other it's all just called fingerprinting. These API's can be used to track you across the web, and we sort of have to take them back, which sucks. But I think for a pop up once every seven days, if you haven't visited the website, that's not the end of the world, I would probably do it in local storage, just because the API for setting and getting stuff in local storage is much nicer than the cookie API. So yeah, I would I would probably do that. Or if you use react hooks, just drop one of those use local storage or use cookie hooks. And I have one of those for each where I can just do set get cookie or set get local storage for my Oh, yeah. Just with the use local storage. Yeah, it's very nice. Basically, the use state API. And one other thing I was going to say about this, like dismissing things is that how do you know to show it again, because like things are changing very quickly right now. And that information may be updated several times a week. So I was thinking like, what I would probably do is like, you can't just dismiss it for like four days, because like what if they dismiss it right before new information needs to be shown? So thinking like, you need some sort of like, unique identifier, based on the content that is in that thing. So yeah, I was thinking maybe maybe you could instead like you your dismiss cookie, or dismiss local storage could be based on a hash of the content in the alert. Or maybe you could just use the length, like the number of characters that are in there. Like that's not totally unique, but it's likely that if you update that pop up, then the length of the the alert will change. And then then then that's then it will then it will show again, because it has changed since then, there's a whole bunch as long as it is unique, and you can then re show it when that information has changed. Yeah, that's a problem I have not had to think about. Because now Me neither Yeah, none of my alerts or pop ups for those kind of things, or anything that would stick around more than, like, here's an event that happened, or my my banner isn't dismissible? Yeah. So there's a lot of little problems here that you don't really think about until you really start to dive into it. And I guess that's a nice little microcosm of our entire industry is everything is a much larger problem, when you really start to dive into the specifics of, alright, how does this thing need to work? I mean, I mean, we've all experienced that where your boss is like just throwing an alert on the site. And then when you start yapping about it, you're like, Huh, okay, well, what are the parameters here that this needs to abide by? Yeah, I've done it actually, once years ago, on my own website, where I was like, showing random pop ups for different products are not pop ups, banners. And then if someone dismissed a certain product, and they came in visited again, it would make sure that that product wouldn't be shown again, but like maybe another product would would be shown. So in that case, I had to use the product code in the dismiss cookie, because there was multiple banners showing. And he had to dismiss each of them, depending on when it showed up. Did you get feedback on that? Because I feel like that's the kind of thing people might get angry at? Uh, no, it was, I had a lot more logic in it in terms of like, when it showed up. And it also wasn't like a super obnoxious one. I think it was a little banner at the bottom of a blog post or something like that. I'm very aware that this stuff is very obnoxious to developers, especially when you're using it for marketing and not for, like emergency information. Oh, totally. Yeah, right. Yeah. There were there is like nothing that will make me want to leave a site faster than like, Oh, I just want to read this article, and then pop up with a newsletter. And then like, shame. Yeah. They'd be like, No, I don't want 10 great tips on how to, you know, clean a marker. Wash your hands.

12
00:14:17,639 --> 00:14:18,419
Unknown: Yeah, right.

13
00:14:20,010 --> 00:16:26,010
Wes Bos: That's a really good point. Other things you should be aware of is good styling. This can go a long way. When you give your your user a like a wiziwig. To add in text. Most people just give them the wiziwig. And they can go nuts on it. And what happens is that they get the default colors that come in the palette. And then they get like a default sand, Sarah and Sarah font, which is really frustrating for your users to see. And I've seen this over and over again. So go a little bit further and figure out how do you customize that wiziwig and give them the fonts and the colors that they need or just take them out entirely and use your CSS to start All those things, because when people are panicking, they're not thinking about brand. But some company, you're looking at everything right now the brand of the company really shows through in terms of how do they present themselves when they're getting across emergency information. And it's not just like, it doesn't look like a Microsoft Word, Doc. Yeah. And let's be entirely honest here, you should be not giving the marketers or the content editors the ability to produce something that looks bad on the site. Absolutely. I always really thought about that when I was doing sites for customers, clients, whatever, not only limiting the tools that they see, like in Drupal and WordPress, or whatever, hide the things that they shouldn't be touching, you know, in that aspect. But also just don't give them the opportunity to have a look bad if you just throw a basic paragraph and a div or whatever, whatever, you know, through the wiziwig. It should look like the rest of your site, it should fit the design system. So don't get too specific with everything everything all the time, or at least provide some sort of really good default style, so they can't mess it up. They can't get this in a way that is going to look bad for the for the brand overall. Speaking of not messing it up, Scott. Oh, yeah. What should you use to not mess up your bug reporting? Your bug reporting? Oh, sorry, not.

14
00:16:28,020 --> 00:16:28,529
Unknown: today.

15
00:16:29,279 --> 00:20:48,110
Wes Bos: Yeah. So Sanity, Scott, not Sentry? Yes. Let's try that. Again. See, I'm not messing it up. If you want it to like maybe give your user some input fields for a title and a little wiziwig. editor? How would you use that? Scott? How would I use that? Or why would you you Okay, this is awful. Can you please transition us to sanity? Sponsor? Yes, yes, yes. You know, so along that same lines is we really want to give our content editors a perfect place to just enter something not mess it up have exactly what they need there. And that's actually one of the places where Sanity shines. And I'm talking about sanity.io. Now, Sanity is the backend CMS that your your front end data needs. And one of the coolest things about Sanity is they allow you to customize their admin interface, and it's all built with react, it's really fantastic. Which means that you can do what I'm talking about here, you can exactly your content editors edit the source in a way that gives them no opportunities to mess it up, you give them exactly what they need, they can visualize it, they can see it, it's all react, it's all customizable, you can get started in just minutes. It's unbelievable. So you're gonna check out sanity@sanity.io. And there's so much more here, there is so much more, there's this awesome graph qL aspect of the whole thing. But basically, all you got to know before you head over to sanity.io right away, is that it's an awesome place to host your back end data, we get questions about these kinds of services all the time, and Sanity is a fantastic option. So you're gonna want to head to sanity.io forward slash syntax. And you will get an awesome supercharged free developer plan, which is a double usage. So check it out. sanity.io, forward slash cindex. All right. Next little thing we've got here is what I like to call page alerts. So you know, you visit a website and you get that little bubble of information, your contact was updated successfully, or there was an error doing X, Y, and Z, yep, or a warning, whatever. Generally, when I'm building a website, I will it whether it's like a toaster that pops up from the bottom right hand corner, or whether it's just a little alert that goes on top of an existing page. This is different than like a site wide bar, or banner, because generally, sometimes pages on your website need the ability to just have a little like, hey, heads up, this is still a valid page. But please take into consideration xy and z. So giving your user the ability to insert and what do you even call that like an alert, not like a pop up alert? We call it an alert on level up. Our component is an alert component component. But the common way that I hear it is a toast message. Yeah, in the in the Android specifically and only Android development. They call those a toast in the official SDK. But I'm not exactly positive what their official official name is, but I fact it's funny because I've had people correct me when I've called mine on alert and meant like it's a toast message. And so yeah, you know what it is? What is it their flash messages which I like that all flash was like when you did everything server side? Yeah. You could just, you could flash something and then on the next load of a page, then the user would see general you code something green, yellow and red for the different situations. So also, just like giving the user the ability to insert a div, with the class of what I'm just looking bootstrap calls them alerts. So that's fine. Yeah, it's fine. Yeah, it's such a common UI paradigm that everybody has just how to give your user the ability to insert those in, because like, maybe, maybe someone's viewing the Hours of operation. And you might have a little pop up, say, hey, heads up. These hours are currently modified, please call ahead to the store to make sure we're open. And that's just a good thing to have in general, for things like holidays and whatnot, as well.

16
00:20:48,390 --> 00:25:39,540
Yeah, totally. We have those for all sorts of things. And I keep talking about like custom hooks in our react set up, right, I would recommend making these super easy to use, like we just have a single function, whether this is Redux, or whatever this just send alert, send air or whatever you pass in a string, make it nice and easy. Next is going to be creating new pages. I know a lot of people right now I have a lot of information to share. Specifically, I know our daycare sound like a tome of stuff, here's what you need to know, here's what we're doing, here's what you like, anything that's pertinent. And it was gigantic. It was it was just like an basically like a, one of those pop up messages. And it should have been a page really, they should have just sent you to a blog post. And so just like you should, with any website, you do like across the board, you should never put out a product that doesn't have the opportunity to have a single page with text information on it. Because your clients are going to want that just about at any given point or anything at any time. And if they go to create a new page in let's say, WordPress, or Drupal, and it looks like total garbage, well, that's not a great look for you. So you want any sort of generic page to be a single page, nice text, nice defaults, you need to think about that. And often times that these things, they're just sent out via like an alert, like, click here to read more or whatever. But you need to think about, well, if if this is some sort of long time important thing, how do they link it? How do they add it to the nav? What do they do with this page? What did they do with this content? So you need to have a single pages ready to go, you need to have nice slugs. A slug is a English sort of way of having the URL. So it's not just whatever.com forward slash an ID, you want to have it be the page name, kebab case, store something pertinent, something relevant. So what do you do? You got to have these things? Again, nice defaults. Nice work. So they can just add it easy peasy. Because you mentioned very specifically that people aren't going to be thinking about the brand or whatever, at this point. They're just going to how can we get this information up as fast as possible? Totally. Business owners have enough and I say business, but I mean, like, it could be a school could be a local organization, these people have enough on their plate. They're trying to figure out what's going on right now. The least of their worries is does this look good for our users, and I would say that's on you, as a web developer to make sure that whatever it is that they put out there looks good to the user as well as things like like Scott said, the slug, because he like you might have like a radio announcement, make sure you go to whatever comm forward slash note a for all the updates on on what's going on right now. Or you might post that out to Facebook, it's just a link. What about Google to you Google, you know, level up toward tutorials, COVID-19, or whatever, just to see what their status or whatever is, and you want it to be able to be found easily? Totally, totally, you're right. Speaking of Google, one thing I was wondering is, how do you tell Google that the hours of operations have changed? Because you go to Google Maps or Google Places or something like that, and they show the hours, and sometimes they will even show you the hours on holidays? Which I love? Totally, you don't have to call them to see if they're open or not. And I was like, how does Google know that? And I've dug into it and there is a meta tags for specifying hours of operation for your business, which is pretty cool. Do you know about this? I didn't. But it's funny because I would imagine most of the people who use those in some capacity might not even know about them, either. Maybe they're just like adding a plugin that's like hours of operation plugin. And let me add them here. You know, I think Google does a pretty good job at scraping just markup. And if you use like a ul or something like that, it's it's, I think, like good is just cleaned markup better is using the time tag. With date time in it I use. I've been using the time tag a lot on my own website that I've been working on recently because I Want to show Google when things have been updated and when things were written. And then like I think best is just stick that data right into a meta tag. And we've linked here just to the spec for the meta tag. And you can you can list all the days you're open all the times that you open, what times you've clothes, things like that, which is pretty nifty. And I'm assuming Google will slip those up. And I'm not sure how quickly they will change them on your business profile. I'd be interested to see how that works. Yeah, that's a nice little good, better best coupon together. Thank you. Yeah, it's just yeah, looking man, just tearing things out all day long.

17
00:25:41,940 --> 00:28:00,270
So the next is going to be how can we do this with things that we've already like, you already have a hook into your audience that somehow right, for instance, you have their email address, or they have an account on your site, we actually have the little user dashboard on level up tutorials. And I do like little alert pop ups there for things like the newsletter or things like that, or the latest series. And that could be a good way because they already have an account, they've already said that they want to hear from you in some sort of way. And along the same lines is probably the way that I've received most of the alerts so far from different companies, and that be via email newsletters. I've gotten just about a COVID-19 or snow day email, I'll say snow day from now on, I got a snow day email from just about every single company I ever signed up from a newsletter for letting me know what their plans and thoughts on it were, you know, the ones I appreciated were the ones that I actually cared about it and the ones that I didn't appreciate, were the ones that were just like, Hey, we're just thinking about it. It's like, okay, but there's no important information. I'm already learning about this thing from everywhere else. Like, I don't need you to tell me what it is. Yeah. Like my bank sent me out. We're here for you. Yeah, right. Okay. Yeah, you are sure you'll be here for me? Yeah, we bought a custom door for our bathroom like six years ago, from a company. And they emailed us like they've never emailed us before. And they're like, we're here for you like, your door is here for me. Out here, you're not here for me. Yeah, don't do that. Honestly, I, I'm just looking at all of the stuff that's going on right now. And I'm like, man, I see people scrambling to get a website up scrambling to get more of a online ordering setup. I see people scrambling and posting out to Facebook, because that's the only way they can possibly reach their audience. And I think like, man, like, this thing is going to cause people to sort of reevaluate and say like, how do we, when things go awry, especially our business that could be potentially closing down if we don't get enough sales? How do we access our audience much more easily? And I think email newsletter is probably number one for that, that type of thing. Don't lean on your, your Facebook page in order to get information out, especially when it's super important.

18
00:28:00,719 --> 00:28:01,800
Unknown: Yeah, totally.

19
00:28:01,800 --> 00:33:00,030
Wes Bos: Um, what else my dad, some of my relatives own a, what's it called a huge greenhouse. And my dad does a website for them, and they had to close. And they have the thousands of dollars worth of flowers that are just sitting there. And they were allowed to do a online pickup where you can schedule, like a time. And he just reached out for some real quick, like scheduling software for meetings, people were able to book themselves in for a spot and note what they wanted, and then they got to show up. So that's probably not something that you need to code ahead of time. But just know that that is a possibility. And you could probably reach for some off the shelf scheduling software if you need to do it. Yeah, this was, I don't know what things have been like for you. We talked about this before. But before we started recording, but in the snow day over here, they they started said okay, anybody who, you know, you can now do delivery, for alcohol via bars and stuff, or I know some of the liquor stores around here, were really scrambling to get their online pickup or ordering online process going. And I think it's important to maybe at least if you are in the type of business or anything where you're shipping or dealing with actual goods or creating a site like that might be a good idea for you, as a developer, to have some idea about the general landscape of things like that, because they could email you and say, we need online ordering right now, what are you going to do? And you're not going to have a lot of time to think about that. I was just, I was thinking about this, specifically because the one that we ordered from has some software and I had never heard of it before. And I'm trying to find it right now. But it was basically just like an iframe that popped in from the left and everything I framed in you added your catalog in there, and they took care of everything and it was able to be dropped into an already existing website. And it honestly just looked like they took any of their given pages and dropped an iframe into the main Section. And then the cart was sort of like a iframe and over on the side, and it worked really super well. I know there's like snip cart does this, there's a bunch of little solutions for this. But there's some that are way more managed. And it would be a good idea for you to at least have the idea of some sort of the landscape of different services that could augment your service in the time of emergency. Yeah, absolutely. I had this with my church, they said, obviously, all all churches closed down. And they said, We need to live stream. We've never done this before. Right, I build the website, OBS. And I was just like, oh, like I'm, I'm the tech guy. So I figured this out now. And I was like, like OBS you had that like that. Like, also, I couldn't like derive it from my cottage. Because, yeah, it's awful. I can't run OBS from my cottage, and upload all this, like 4k, whatever. And so like, we got zoom piping into YouTube. But then YouTube needed 24 hours before you could live stream. So I wait for that. And then like, you can't embed a live stream unless you have 1000. No mic, drivers and a link ads. And I was like, oh man like this took us like probably like a week and a half. Just to get all this stuff set up properly. You think like, Oh, yeah, just go whip up a YouTube account. And you're good to go. But because of like measures against people abusing the system, some of this stuff takes days or weeks before you're allowed to fully use all of the things, all of the features. So even if you want to create a YouTube and Vimeo account and have them empty, or just upload a couple small things, just having an account that has some age to it will probably help you in the future. So like letting a client know you're building a website for them. Hey, I know that you don't might not necessarily need this. But should you need to do something really quickly. It's worth having this thing set up properly. I saw that also with restaurants as well. They're scrambling to get their Uber Eats up and running. They never had Uber Eats but now they need it. So it took them at least a week to get online with Ober eats when they probably lost a whole week's worth of takeout. Yeah, totally. I mean, that's a whole big bushel of work right there, the personal word. But I I think this is an important key piece that you touched on is really that, like, when you're creating a project for something, it might be worthwhile to create all the accounts around that YouTube, Twitter, you know, all of those things, not only just so they're locked up, and you have them, but you have them in case you need them. They just exist. You don't have to use it just because it exists. So I think it is important to at least own the accounts that you might need, not just the accounts that you do need. Yeah, absolutely. And let's talk about a service that you absolutely do need. And that is sentry@sentry.io. Hey, I usually do the Sentry AD West, do you want to take a shot at it? Since I did the Sanity ad? I do.

20
00:33:02,040 --> 00:37:30,090
Yeah, Sentry is all the error and exception tracking that you need for your project. So the way that works, you install this little snippet on your website, and then it will log any errors that happen. You can put them all in one place. So you have your back end, you have your front end. It's kind of cool. They the one of the examples they have is serverless. I specifically was looking at what is it CloudFlare workers about like, like, how did they don't have logs? So if something goes wrong on your CloudFlare worker, like how do you know what happened? And their solution is I'm not kidding, just use Sentry so you can integrate your Sentry into your serverless functions. So whatever goes wrong in serverless function, you'd be able to get some more context as to what happened. It's not necessarily a user went to the website, and something happened, it could be there wasn't there was a 404 error when you're expecting JSON to come back. And in order to get some more information about what happened there. Sentry will log all of that even in your serverless functions, which is pretty cool. Tons and tons of different features they have here you can assign it different people. You can look at the breadcrumbs as to what happened leading up to that specific error. And you can integrate it with pretty much any language imaginable. Go check it out. Sentry.io use the coupon code. tasty treat for two months free again, that's tasty treat all lowercase. All one word. Thanks so much to Sentry for sponsoring. Nice. We did a little ad swap today. That was fine. Yeah. switching it up. Yeah. So lastly is a deployment which is a big thing. Because if you are running a site that is 100% front end code, maybe you know you built a Gatsby site and there's no back end and everything's modified through this or that or whatever. Your clients are not going to know how to head to GitHub to edit the posts. They're not going to know how to read up lay the thing. They're not going to know how to update anything. So you have to make sure that if there is a process in case your users, your clients that need to add or update the site in any sort of way, without your help, you need to make sure that's in place, whether that is a CMS based solution, which is obviously the easiest one of those. And even if it's, I don't know, what like, what kind of tips do you have for redeploying or having your clients deploy things that needed to be added? I think that the the kind of the scary thing is, is that sometimes you build a website, and you just don't touch it for three or four years, because it's working fine. Especially with something like WordPress, the updates happen on the server, and the clients continuing to update content on it. But if you need to quick panic, add a banner or something like that, then like, you have to remember, okay, how do I deploy this thing? Where is it locally on my machine? How do I recompile all my CSS? So make good notes as to like, how, what's the deploy process for this? What are the credentials, all that good stuff, because like, when people are panicking, that they need to update the website, that's not the time to figure out that you're This is actually this probably is the time that you'll figure it out is that your CSS doesn't compile anymore, because it's not like I specifically I've got a gulp three website, and it doesn't, it just doesn't work with anything past node 12, or no 10, something like that. And every time I need to work on it, I have to revert back to an old version of node in order to make it work. And it's frustrating when you want to just get something up really quickly. So maybe just making sure that you still know how to compile and deploy that thing nice and smoothly. And maybe you have someplace where you have some sort of encrypted record of law. I mean, I guess, like a good option for that would be like one password, right? Like we talked about in our password security things. One password allows you to store more than just like passwords, they allow to store notes and things like that. So maybe need to add DB credentials, db locations, different things that you need to access quickly, like, let's say you pop up into my sequel, and all of a sudden, you're like, shoot, I have no idea what the username and password for this specific database was. And then you have to go try to figure it out, whatever, make sure you have all that stuff. I used to keep it in an encrypted table. But I think one password might be a better place if I needed to store any of that data long term. Yeah, yeah, I agree. Just having that because that's a bad day, if you forget how to how to deploy that thing that day.

21
00:37:30,300 --> 00:42:25,730
Yeah. Other things you need to know about do any caches need needs to be cleared. So if you are using something like a CloudFlare, and you you deploy a new banner on a website, you might have to log into CloudFlare and clear the cache, because that information needs to be seen immediately. And not in three hours when that cache clear. So just knowing how to clear the cache, any CSS that needs to be cached busted as well. So if you if you deploy a bunch of new CSS, and that's why all of this information, all of the stuff we're talking about today, it's way better to think ahead for it. Because when it does happen, you don't have to worry about busting your cache and CSS or any of that, busting your ass to bust your cache. You could just do you can just deploy the thing or you don't even have to deploy it, you just have to type in the box in your in your editor in that content will show up. So obviously do this stuff way ahead of time, if you can. I think that everything that's gone down now, it will make us start to think about how do we add this stuff to our website, even if it costs your client a little bit of extra money, you can very clearly explained to them like, Look, if something goes down, we need to be ready. And we can't, you can't just call me up on the phone. And we'll deploy it right away. Right, because we've sort of talked about the availability of companies and people scrambling. But if every other company is scrambling to get these things up at this point, the developers who worked on these projects might be totally swamped as well, again, giving you an argument for why you should be worrying about this now rather than you know, well, actually, right now when we have a snow day. Yes, absolutely. Yeah. So that's all I got here. What do you anything additional? No, I think that's good. It's a probably one of our shorter episodes, but pretty important stuff. I would say. Yeah, maybe once all this blows over. Go ahead and start talking to your clients about like, how do we integrate the stuff into the website, so we're a little bit better prepared for the next day? Yeah, totally. So next section of the show is the part where we talk about things that we like sick, fix things that are sick pics that we have of things that we like, do you have any sick pics Ready to go? I do actually. Um, this is more of a sick tip or something like that. Oh, sick tip. So when we realized that our vacation was canceled, this is by the time you're listening, it's probably a month ago. We said oh shoot. We are headed up to our cottage and we don't have like a TV or anything up here. And we're going to be spending some serious time we want to be able to watch him TV. So I jumped on marketplace and figured out that like five, six year old projectors are very, very affordable. For 100 bucks. We grabbed this like five year old, two Hd 1080 p projector. And it looks awesome. It just projects onto our wall. And I thought like wow, that that was that was a way better call then then going and buying like a cheap TV or something like that. We had to buy a little set of computer speakers for it and whatnot as well. But what about the bulbs? Did you buy a fresh ball? But what's the bulb life on it? Yeah, that was that's the kind of the scary thing is that like a bulb can last about 2500 hours or 2000 hours. So I asked the seller, can you look up how many hours are on the on the ball? And so he did and he said 500 500 hours, which leaves me with tons of time on this one. So I think like if you want if you're looking for a little project or something like that, maybe go look on the US classifieds. Once all of this blows over don't go Now don't be meeting random people in parking lots. Yeah, don't do that. Because I was I was so surprised that like the the value you get for your money. I remember projectors were thousands of dollars when I was a kid or even just when I was doing teaching in person like 510 years ago, they were pretty expensive. But they've come down quite a bit. My first job was a projection. Oh, yeah, sure. Yeah. So we used to have to replace the bulbs all the time because they were used like eight hours a day, you know? Yeah. So we were always replacing the bulbs and these projectors, I went to a projector conference. I went to a conference in in Las Vegas for projectors. And I learned a lot about projectors. It was probably the lamest conference I've attended. Not because projectors aren't cool, but because I really had no one to be there. My boss was like, you need to produce one blog post a day, and you need to do video blogging back before that was really even a thing. So I don't it was it was fun. It's kind of unknown world to me. I dipped into a real quick I just like went online to see how much is a bulb in case it does burn out and it's about 150 bucks. So more than the projector cost itself if you have to replace the bulb, which can be a bit of a bummer. The bulbs are expensive.

22
00:42:26,150 --> 00:42:32,130
And you have to be very careful when you install them. FYI. Oh, he can't get the oils on your hands or

23
00:42:32,130 --> 00:42:37,920
Unknown: why? Yeah, you can't get handles on the ball because the ball gets super hot and then that will destroy the bulb. So yeah,

24
00:42:38,040 --> 00:45:34,740
Wes Bos: pro tip. Ah, that's like those old halogen work lights just like that. Yeah, you can't touch them otherwise they explode. Exactly right. You know what that so my sick pick is going to be a another YouTube channel full of music for these snow day times. We've been putting this on the TV and these things are just amazing. Not always the most essentially. I don't know, there's never any like I don't want to say nudity or anything because it's definitely not but there's definitely a lot of like, you know, shirtless dudes surfing on the beach, or you know, people getting a, you know, tan or something. But these things are basically like, they're basically like a screensaver that changes this. This guy has a YouTube channel here, mellow groovy sounds where he mixes together various funk, soul and mellow music mixes from the 80s and 90s and 70s. And let me tell you, you've probably heard none of this music before because even the artists that they do feature that you've heard of are fairly deep cuts. And they are overlaid on essentially GIF length HD video of various beach scenes for a couple hours. Some of these are two and a half hours long. And they have various different ones even like some Japanese city pop ones, but we've been listening very specifically to the mellow groove a or West Coast mix number three. And all the time we put this thing on now and it's gotten to the point where we recognize and know the songs and the songs are sort of goofy, but it really transforms you into another place. You see these beach scenes, you see these whatever and it's so good. Like they're they're just some of them when I like I had a hard time shutting this off the other night because Oh man, I was like, I was about to shut it off. And then midnight rondae food came on and I was like, Oh no, it's midnight rendezvous. I can't shut this off. So it's so good. They're goofy but we've just been living on it and we had to cancel our beach vacation. So when you get this like beach scene going on in the background or something like that, it really does help a little bit transform you move you to another place and ah been relying on it so much and absolutely really love it. So check this YouTube channel out. We've been again living on this Awesome, shameless plugs, go to Wes Bos comm forward slash courses to see a list of all of my JavaScript CSS courses you want to learn react or something like that, check it out. Use the code syntax for 10 bucks off. Yeah, cool. Head over to level up tutorials.com and if you are not already a subscriber, you can sign up to become a pro for 50% off also everything in the store right now is 50% off as well. Beautiful. Alright, thanks so much for tuning in. And we will catch you on Monday. These is

25
00:45:36,540 --> 00:45:37,350
Unknown: head on over to syntax.fm

26
00:45:37,350 --> 00:45:46,290
for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you liked this show.

