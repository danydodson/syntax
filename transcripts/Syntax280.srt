1
00:00:01,319 --> 00:00:02,820
Unknown: You're listening to syntax

2
00:00:02,849 --> 00:00:04,590
the podcast with the tastiest web

3
00:00:04,590 --> 00:00:07,980
development treats out there. strap yourself in and get ready

4
00:00:08,009 --> 00:00:49,590
Wes Bos: here is got to live ski and Wes Bos. Welcome to syntax. This is the podcast with the tastiest web development treats. Today, we have got another potluck for you. This is actually we're kind of like in between seasons right now the last episode you listen to was Scott and I saying the next episode will be a new season. But then we also realized we forgot to record an extra episode or two. So we're in between seasons right now. And we've got another potluck for you because we took like what like a month off and the the Pollak questions have just been coming in. So we'll get to it just a sec. today. We are sponsored by Sentry and Freshbooks will talk about them partway through the episode. How you doing today, Scott?

5
00:00:49,949 --> 00:01:14,870
Scott Tolinski: e I'm doing good in betweens in between seasons here. Season 1.5 whatever you want to call it. Yeah, I'm doing I'm doing good. I'm gonna it's gonna take a little bit to get back into the podcasting. But I've been doing a lot of recording. So it's not like I haven't haven't been talking into a microphone. I'm excited to get into some of these pilot questions. It seemed like there was a lot of great stuff in here. So yeah. Do you want to kick it off with number one?

6
00:01:15,119 --> 00:02:47,520
Wes Bos: Yes, a question. And this is something I've got a lot of questions about from Loki is what are your guys thoughts on the Mozilla layoffs and how it will affect developer. So if you didn't hear Mozilla, because they said because of Coronavirus, their, their income has dramatically dropped. And they had to lay off what like 25% of their workforce, which was something like 250 devs, it looked like all of the people that were laid off, they worked in dev tools, they worked on the browser, like the entire team that works on Firefox Dev Tools was just laid off. And all the folks that work on MDN, the docs were laid off. A lot of the developer advocates, the people that work in CSS working group and and all that they were all laid off, which is a huge blow to I think just a web development in general. And I just kind of have this like sick to my stomach feeling about it. So thoughts about that. I think that's a major bummer. That sort of the one company that we always sort of relied on to to keep it real, and like sort of keep that flame alive. Because there's really the only company against Google, I guess, like Apple has their own browser as well. So maybe that's that's not entirely true. But I was kind of bummed to see that especially because like the entire Dev Tools team was laid off. And I've been a Firefox user for maybe nine months. And I've been loving the dev tools. But like, I like At what point is just going to start to decay and that I'm going to have to switch back right?

7
00:02:47,639 --> 00:03:33,600
Scott Tolinski: Well, yeah, no, I mean, I don't think Firefox is going away. I don't know, the whole thing is just very hard to hard to tell what's like what the long term effects of this are going to be considering that it is such a big hit to the web. Overall, as we know it, especially the web, as many of us would like to know, it's, you know, without being consistently tracked by, you know, Mark Zuckerberg and whoever, right? So I don't know, the whole the whole business is not good. I don't I don't know what to say other than man, whoo, we'll just have to, I don't know be tracking the repercussions of this for a long time, the amount of talent they let go. I don't know what you you know, about rust West, you know, a whole lot about rust. Um,

8
00:03:33,629 --> 00:03:38,160
Wes Bos: not a whole lot. Now. I know that like Firefox was built in that, but that's about it.

9
00:03:38,729 --> 00:04:52,760
Scott Tolinski: I think parts of Firefox are built in it rust. It's like a language a systems language. That is I've been using it for a little bit now just to learn a new language. And it's, it has enough stuff in line with TypeScript to feel at home. But in the same regard, it is a much more difficult language than anything I've written before. In the past either way, rust is largely developed out of Mozilla. So there was obviously a big concern over that considering the wasm stuff. There's like a lot of very web, essentially dire consequences of potentially removing some of these people. However, it does seem like the majority of the core team of rust is still there. So that that at least is good, but man, you can't feel like like, I don't know, there's just so many facets of the web overall that this touches, whether it is the web stuff, or it is the documentation, the MD and sort of the dev tools themselves, which are always getting better, man, I don't know what to tell you. I've been using brave for a little bit here. So I haven't exactly been on the Firefox train super hard. But man, do love those dev tools. And hopefully they figure something out to regain some of that talent.

10
00:04:53,069 --> 00:05:54,720
Wes Bos: Yeah, we should say that like like MDN is not going anywhere. MDM for a long time has been a joint partnership. between Google and a couple other companies as well, they've even put out a blog post saying like, Don't worry, we're not going anywhere. But like Mozilla did employ people just to work on the docks full time. So certainly the the effort of those people probably won't be full time anymore, unless a sort of another company can scoop them up. I did see I'm not sure if this was related or not to what we're talking about. But I did see Jen Simmons who part of CSS Working Group, huge advocate for all of the new layout stuff. And she works a lot on all of the new layout stuff that we get Flexbox grid, I think container queries, a lot of stuff like that. She's working at Safari now, which that made me feel so good. I'm like, oh, Safari cares, like they hired. They hired her. And she's asking all kinds of stuff on Twitter about like, what you want to see in Safari, and maybe Safari will now get a sort of catch up to where the other browsers are.

11
00:05:54,960 --> 00:07:17,250
Scott Tolinski: Yeah, I've been actually using Safari a bit more than usual. Because since I got the iPhone, you know, the good thing about the Apple phone is that like, if you use all of Apple's software, then like, then the phone works very, very well. And if you start trying to use the other people's software, it doesn't work as well, because of Apple's gardens that they put in a software, right? Whether it is the browser, things where it's like not true chrome that you're running on the iPhone, compared to the Android, like, I've been using Safari, and it's not terrible. There are a lot of things I like it. In fact, in the latest level of tutorials course that I'm recording, right now, I'm using Safari as the browser nice, but for no reason. Because the dev tools aren't as good. But I'm using I'm using Safari specifically, just because the tab bar is smaller at the top and it takes up less. But I've been I've been sprinkling it in here and there. And it's it's good. I'm glad that the safari team is open to growing the browser and the sort of ways the same regard, I wish it wasn't so hard to publish an extension on the safari web extension store, if you have to pay money and good Apple developers account and have it all those things. So I don't know, we'll see Safari is still good. But there's a lot of like, critical, like, I don't know, deficiencies with it. Like the fact that it doesn't update outside of a actual operating system update those, like

12
00:07:17,250 --> 00:07:30,990
Wes Bos: remind me tomorrow, that's, that's really frustrating. Because like, what we're talking about is that, you know, if you have a Mac, you get this pop up every single day that says there's updates, and every single person presses remind me tomorrow, right for the eternity,

13
00:07:31,020 --> 00:07:34,890
Scott Tolinski: because it's never, never the right time. It's not the right time, I got stuff to do.

14
00:07:35,429 --> 00:07:45,150
Wes Bos: And if you want to update your browser, that's the only way you can update your browser. And that's exactly like, when did that ever happen before? Remember, ie six?

15
00:07:46,020 --> 00:08:07,890
Scott Tolinski: You know, do you remember we had a, I don't know if you were involved. I had a thing on Twitter, I was tweeting about this thing that didn't work in Safari. And they were like, somebody from the safari team was just like, make sure your browsers on this version, and you have to update your iOS. I update my iOS and it worked. It's like, I never I never thought like that. You know, until Yeah, no. Well, I guess I did in the past, but not recently.

16
00:08:08,340 --> 00:08:16,380
Wes Bos: Yeah. And that's not to say, I hate when people say Safari is the new IE because there there are lots of good people working on it that are genuinely concerned with this

17
00:08:16,380 --> 00:11:01,950
Scott Tolinski: stuff. But I say that so i don't i don't mean to put anybody down. And I actually I feel like the browser is very good. There's just like, there whenever I have a bug, it's always because of Safari, not because of Mozilla or chrome, a you know, whatever it again, it's not the new IE by any means. But I get where you're coming from. That was a long answer to low keys. A banger of a first question. The next question is from Brian M. He asks, first of all, love listening to your show. Thank you, Brian. It has definitely motivated to get my career started. Right now. I'm a math teacher. I've married with two kids. And so finding time to code is difficult. Our kids are the same age. So yes, it is difficult. My current situation includes waking up at 4:30am on time, and before the kids wake up, do you either if you have any tips about finding the balance between raising kids getting stuff done around the house having a full time job and trying to teach yourself web development to transition into a different career? Yeah, so I don't know what your wife's schedule is like, because my wife is home. She's currently working, we're both working full time. And even though I get to code for a living, there is a lot of stuff, maybe after hours that I would like to do as well, the coding wise, or even just hobbies or projects or those kind of things time to learn something. And I found it's been very difficult to find that time. Now. I do not have the dedication to wake up at 4:30am to do that, and that's awesome. But really that is the answer. The answer is find some time. Just find some time when you are have any inkling of energy and there is no one to distract you to build in that time. I really don't know my wife and I have gotten Really, really hardcore with our schedules lately. And it's definitely helped make sure everybody knows what's going on when and where and how. But to be honest, unless it's before the kids wake up or after the kids go to bed, unless your partner has the ability to step in and hang out with the kids for, you know, a couple hours here and there on some sort of agreement, and you, you pick up the tab at a later time, man, I don't know that that is a tough time to raise or to like, find that time. One thing I might suggest is if you can listen to you know, whether it's video tutorials, or have something on the TV or, or podcasts like syntax, like listen to this stuff in the time that you're doing your day to day job. So maybe you can double dip a little bit in terms of like learning if you are able to learn while you're all your math teacher. I don't know if you're like grading papers, and you can do that on a robot mode or something like that. I really honestly don't know, I'm not a teacher. But if you can find some time to at least get a little bit of double dipping in I guess that's the only other solution. It's a tough one, Brian.

18
00:11:02,580 --> 00:12:49,500
Wes Bos: Yeah, that's I think you're on the right track is you got it, Something's got to give at some point. And we've talked about this before, but I think it's fine for there to be times in your life where like, you'd probably sit down with your significant other and say, like, Look, like I'm trying to make a career change here, this is gonna be tough for the next year or two, or however long, you think that it's going to take you before you can make that jump to either doing freelance projects, or to getting an entry level job in that type of thing. And really, it's just, it's just about being on the same page with your significant other and being like, I need, like right now. My because of COVID, all of our kids are home. And my wife is still trying to work her job, but she just has to like take care of them Monday to Friday. So like, like, what do we have to do in that case? Well, I'm taking them every single morning, while she goes and works out. And then I give her half an hour an hour every single day where I jump in, and she goes, does a little bit of work here there. And then she tries to squeeze some in when one of the kids is sleeping, and you throw the iPads in front of the kid. And then every single Saturday, I take the kids of myself and I just like take them out of the house somewhere. So she has quiet and is able to do some filming. So like it's by, it's not even close to like the best possible situation or it compared to what we used to have when kids will go to school and things like that. But we're sort of just making it work. And that's not the most fun thing, because obviously we'd like to hang out a little bit more. But these are the times and she's trying to keep her thing going. Because while while these kids are home, so you just got to like eat away little chunks of time here and there and have understanding what their significant other.

19
00:12:49,830 --> 00:13:13,860
Scott Tolinski: Yeah, that's really what's important. And in Courtney, and I've been like I said, we've been really scheduling stuff lately. And I think it's it's helped quite a bit. So just so everybody's on the same page, we're utilizing the calendar more. These are your times because now that she's fully back at work, it's like, oh, we both have like 40 hours a week to put in plus, so it's trying to find those times is especially difficult right now.

20
00:13:14,370 --> 00:13:19,169
Wes Bos: Yeah, I can't wait till these kids back to school, or hopefully school zone calls again.

21
00:13:19,440 --> 00:13:21,570
Scott Tolinski: Yeah, right. Good luck, Brian, you can do it.

22
00:13:21,720 --> 00:13:35,429
Wes Bos: Yes. Good job. Next question we have here is from Diana Garcia, if you have used a drag and drop framework using react to which one would you choose? I have never used this dude. Nor do I know of any actually. Scott, have you done this?

23
00:13:35,820 --> 00:15:48,630
Scott Tolinski: Yeah, I have. There's a whole bunch of I've used a whole bunch of them because, you know, they like to try out stuff like this. What's the biggest one the most popular one is react D and D not react Dungeons and Dragons. This is react D and D is probably the most popular one. And this is a very, very good book full full service solution here. It has let's see 14,000 stars on GitHub. So it's got a big community lots of people using it. I don't know how small this thing is the fact that they're not advertising it size means it's probably a little bit heftier. Then there's also reactive beautiful DND from lecien at Atlassian. Is that how you pronounce that company's name? Yeah, okay. And I have to say it out loud. And this one's nice. It's definitely like they try to say hey, this is very electro like this is got this stuff, the kind of experiences that you'd want. And again, they are not offering the size. super easily here. They're not showing exactly how big in most of these libraries seem like they are a little hefty. So so this is my recommendation. If you need a lot of drag and drop stuff, like a lot of flexibility, a lot of drag and drop stuff, go with the React beautiful DND or react DND either one of those is going to be just fine. That said if you are potentially Using animations there at your site, and maybe you just need a draggable list, then I would take a look at just using something like framer motion or react spring. Because either one of those framer emotion or react spring allows you to do some really nice beautiful drag and drop stuff fairly easily itself without having to introduce another library just to do drag and drop. So that's what we do on level of tutorials, all of our drag and drop is done through framer motion. And it's not too too bad. In fact, we'll be doing that video tutorial that I'm working on this month. But that's beyond the point. I think if you have an animation solution already in place, use an animation solution. If you don't use a dedicated library, I wouldn't I wouldn't code your own from scratch without either of those two things, I think

24
00:15:49,140 --> 00:16:06,240
Wes Bos: next question is from alley end to end testing versus visual regression testing. Which web app development cycle should you implement each of these the best tools versus open source? So I'm gonna pass this one off to Scott, because I know you have a lot of opinions on this as well.

25
00:16:06,799 --> 00:19:22,550
Scott Tolinski: Yeah, so eavers visual regression testing. ETP stands for end to end at testing. First visual regression testing. Typically, in end to end testing situations, what you're doing is loading up the application as it is. And as it's being used by the users. Some frameworks for this would be like Cypress, and with Cypress, it physically shows you a browser window of an actual Chrome browser or Mozilla Firefox browser using the application. And then you use any sort of jQuery or whatever the like syntax is, for actually manipulating the site, okay, you find this element, make sure it exists. Okay, now you find this element, you click on it, and now it should take you to this page. So end to end testing is largely making sure that the application works and shows up as expected, as it is like rendered in a real browser, where visual regression testing is, as the name might suggest, is straight up visual testing. Like let's say you have thousands of pages, you take a screenshot of those pages and say, this is how these pages should look, then maybe you change the CSS and another page, and you update that visual test. But that CSS change had unexpected consequences. on another page, what visual regression testing is going to do is let you know that hey, something that you didn't expect to change visually changed visually by a change that you made. So well end to end testing is largely focused on like the actual user interactions and the functionality of this site. Visual regression testing is the straight up like visual testing, or like the testing of visual elements on your site. The thing is, is that I think you can do visual regression testing in Cypress as well, I really done so there are I saw, I went to was the conference, it was developed Denver, Denver develop a couple years ago when I was speaking at it, and there was a really neat talk on like, Cyprus superpowers or something like that. And it was like a paid extension. So I didn't get to try it, because you had to sign up for some sort of service. But yeah, they were they were doing straight up visual regression testing. And it seemed very cool. I was super into the with general way that they were doing it. But obviously, it was a little bit overkill for something like me, at which stage in app development cycle, do you implement them, I implement, etc. as, as we let go as we complete a feature. I'm not doing test driven development with end to end testing. But when, when a feature is done, one thing that we we do is we have like an E t test that all it does is just hit every single view on the site, like every single page or type of page. That way we can see if there's just like any generic loading bugs on an individual page. So like the moment I create a page or a route or something will always add it to the IE testing. And so I add tests as you go, we do not do any visual regression testing, I can imagine if you would, you would probably do that at the very end of a production application. Because man, things are gonna change visual a lot when you're working on it, that's for sure. So I wouldn't do that until the very end of like, or only a production. I

26
00:19:22,550 --> 00:20:35,250
Wes Bos: do the Cypress as I finish a piece of functionality. And I haven't done visual regression testing and probably five years. And when I did use it, it was awesome, because it would literally show you the depths of the pages that changed. But it was at the time it was like sometimes it wouldn't work or sometimes the font one load in time. And sometimes it was a little bit different. And it was annoying enough that you'd be like, Ah, it failed. It's probably just another thing and you have to go force it through and be like it's fine, but I bet it's better now because it's like we've had major leaps and bounds In in headless Chrome, which can to just take screenshots for you, there's, there's this thing called Percy IO. I've never tried it, but I've heard a lot about it. I want to try it out at some point, because that's usually like, that's not necessarily a huge problem that I have. But it's nice to know that if you're adding a little bit of CSS, you're not accidentally nuking something else on the website, or even even with with JavaScript, if you were to, if you're writing a server rendered react application, and you goof up some JavaScript, then, of course, you're gonna see something different spit out on the page. So that's key as well.

27
00:20:35,300 --> 00:22:28,860
Scott Tolinski: Yeah, totally. Next question is from Rob Dominguez. He says, I teach a high school course in web development, for a group of students who have a solid knowledge of HTML and CSS and a decent understanding of JavaScript would spelt be a good framework entering into component based development for the first time. Love the show. Thanks for the tips. Thank you, Rob. So my thoughts on this are Yes, I think so would be a good option for that. Because it's not too lot. Like when you're learning react, there's so many little react gotchas, right. There's so many little react things, even though there is like the quote, unquote, just JavaScript aspect of react, you do get better at JavaScript from react. I think there are a lot of little things that are gonna throw people off, especially if you have an HTML and CSS background. When I when I like to think about spelt, yes, spelt is different than HTML and CSS. But it reminds me a lot of in Angular one, how it was really easy to say, Oh, you know, here is some HTML. And guess what we just, we just sprinkle in some like interesting little additional attributes on this. And all of a sudden, it's a loop. That is probably a little bit easier to to learn. First and foremost, I remember really finding it easy to learn Angular one, specifically, when it wasn't all about having to work around to the angular or the framework or directives knows all about, all right, you just throw something on scope. And now you get a loop and whatever, and you get to really understand in a way that is a little easier. To me, it seems like spelt is even like a nice little stepping stone into working in dynamic HTML and JavaScript overall. But so yeah, I would think spelt is a great option for that, especially just because again, it is it is mirroring the HTML so nicely, and it makes the interactivity parts of it fairly simple, comparatively to react.

28
00:22:29,250 --> 00:23:28,530
Wes Bos: I was gonna say all of those things. So ditto, because a question from Eric is, what is a good good let Google Analytics alternative in 2020, I have a site on Netlify. But the nine bucks a month seems a bit steep for what the site is. So just a quick, rundown Netlify tracks analytics based on server side data. So there's no JavaScript library that gets that gets put in. And that's really cool, because the analytics are better than client side, because almost all developers are blocking most of these analytic tools anyway. And it's just very basic analytics, probably enough that you need, but you have to pay the nine bucks. And for some websites, that's a lot to pay over $100 a year just to add analytics to something. So it's flipping through the flipping the domain through CloudFlare, just for the analytics seems crazy, but is it worth it? I'm gonna go ahead and say yes, it's our Sorry, no, it's not crazy.

29
00:23:28,740 --> 00:23:30,000
Scott Tolinski: Yes, it is worth it.

30
00:23:30,030 --> 00:24:30,570
Wes Bos: Yes, it totally is worth it. By putting CloudFlare you put your DNS on CloudFlare, all your traffic goes through CloudFlare. And they actually give you really good analytics for free. So that is not crazy. That is totally worth it. Alternatives to be awesome. I'd love to get off the Google overlord. So we see we're starting to see this a lot more is that like, all of these cool tools from Google are cool. But a lot of people don't like the fact that they're injecting Google's little tentacles into every single website that we build. And we're starting to see that. What was the other one h capture? Yeah, normally talked about that one that was like an alternative to reCAPTCHA. Quite honestly, I still use Google Analytics. I just don't trust it that much, because of the fact that everyone blocks those Google scripts on all of it. So I usually will go for my cloud for analytics, because regardless of the type of site that I have, that is giving me the best stats that I have there. You have some other ones here.

31
00:24:31,140 --> 00:25:26,580
Scott Tolinski: Yeah, I have two, two side options, one for a little bit more basic security, focused analytics, and then one for a little bit more hefty analytics. Now the heftier one in terms of like being able to track way more things is heap heap that i o allows you to track a whole ton of stuff without having Google's grubby fingers on it. You get all sorts of cool stuff from this, you get a lot of great UI out of this application. You can Track user flows. To me, this is like a little bit more, it's a little bit more interesting than Google Analytics overall anyways, so I think keeps a great choice. That said, if you were concerned about the pricing, let's say heap is free for limited session volume, three months of data history and one user license on one product. And then let's see, the very next platform is contact us. So I don't think it's cheap. So if you want to try get started for free,

32
00:25:26,640 --> 00:25:30,210
Wes Bos: I have used it before contact us is always the most expensive

33
00:25:30,210 --> 00:26:27,120
Scott Tolinski: option. It is either what we used to design or not design a developer site for the first agency I worked at. And it was for these trainers. And the trainers, they weren't really that expensive, like they were expensive. But it compared to other exercise equipment, they weren't that expensive. And in no part in the store, did they allow us to put the price of the thing anywhere, they just had like a contact us for all of the prices. It's like, we built this whole ecommerce store, it had no buy buttons, just contact us. And we were just like, come on, put the price on. And then they did a survey about like, you know, what do you like about the site? What do you don't like what, you know, that kind of thing. They had a third party company, not even as do a survey for them. And there was like, 90% of the responses were like, why can't I just get the price. And their whole reasoning was because they wanted to keep their whole sales team that been used to like cold calling people, but they let Yeah, be used. And I was just like, come on your shoulder. Brian hates it.

34
00:26:29,250 --> 00:26:43,290
Wes Bos: On SpaceX, his website, they give you the price to buy a rocket ship. And everyone's like, oh, if they can give you a price on their website to buy a rocket ship, you can tell us how much your SAS is gonna cost me. All right,

35
00:26:43,320 --> 00:27:19,710
Scott Tolinski: please. Yeah, please contact us. Okay, yeah, the next option is an analytics service that I actually use called fathom used fathom. It's pretty neat. It looks nice. It is a very simple, like in terms of UI interface. It's not intense at all. This is a paid product, though, as well. However, it's 14 bucks a month for the lowest tier. So it's not exactly cheap. We were paying for the year. So if you're not looking for that $9 one either way. They're like a very privacy focused analytics company. And I feel good about supporting a small business like this. So

36
00:27:20,070 --> 00:27:35,670
Wes Bos: is this some Paul Jarvis's company? It is? Yeah. Oh, yeah. Yeah. Paul Jarvis is the the guy behind company of one. I think that's a pretty good book, if you want to run the company have one? So yes, cool. I like this, I should check this out.

37
00:27:35,910 --> 00:29:56,910
Scott Tolinski: Yeah, I've been using it now for several months, maybe four or five months. And I like it. I like the UI. I like that. It's simple, looks nice, overall, big fan. And I'm also a big fan of another service that I use every single month, and that is sentry@sentry.io. Sentry is the best place to track all of your errors and exceptions in one easy to use interface. And let me tell you, I've been talking about some of their features, one of their features that I absolutely love that I've mentioned before, and here is the performance metrics, because hey, why new, isn't it? Yeah, it's brand new. And I've been loving it, the interface is really nice. It basically just shows you a table of all of your your routes that people had, since Sentry is already sort of tracking these errors and exceptions, they can also track the speed at which a took a given route to load. And that even gives you a user misery score. And the cool thing is, is you could say, Okay, I want to look at which page of mine has the highest failure rate. And okay, I click that. And now I see a page that has a high failure rate. In fact, this page, I've never seen this because this just came in. But this page has a 100% failure rate, which means that I have a page somewhere that's being linked, that is a page that no longer exists, it's a good opportunity for me to write a redirect to prevent somebody from hitting a 404. Either way, this thing is awesome. I absolutely love it. I'm on here all the time looking at these various routes and seeing which are the slowest routes on my page for real users. So if you want to try this out, head on over to Sentry a Sentry.io use the coupon code at tasty treat all lowercase all one word and you will get two months for free Oh Sentry today. So thank you very much for Sentry for sponsoring. All right, next question is from a non. I have noticed about a dozen to 100 unique clones of my Git repos after each push. It doesn't matter if the repo is initialized. The picture is added or updated. The repos are still cloned. That traffic section shows the views to my repos at one sometimes two. Is this how interested employers keep tabs on you? Are there some malicious get users What is happening? Wes, do you want to take a stab at this one? I hope this was curious.

38
00:29:57,150 --> 00:30:05,250
Wes Bos: Yeah. Oh, so it's so the guy Makes a Git repo and then all sudden there's 100 clones of that Git repo immediately.

39
00:30:05,640 --> 00:30:11,850
Scott Tolinski: Yeah, that's, that's what I'm getting out of it. How did he find that out? Is there like a like, if you click on a repo, let's click on one of mine. Yeah,

40
00:30:11,850 --> 00:30:22,890
Wes Bos: you can see how who's cloned that repo? Because if you go to a repo, it says in the top right hand corner, how many forks of it? Yeah. Which I assume that's what he means.

41
00:30:23,070 --> 00:30:39,990
Scott Tolinski: So at my moat, what like, you know, my site level, Scott Tolinksi, calm, has had eight forks of it. So I have not seen 100 forks of of anything that I've done that I wouldn't have expected out of? I don't know, this seems very odd to me.

42
00:30:40,410 --> 00:31:28,770
Wes Bos: Yeah, I wish that they gave an example of the revokes, I'd love to dig into the type of people that are, are doing it. And I would think that the reason people are doing this is that like, first of all, it's free to clone a repo. And then you also keep the history of something. So if, if you accidentally push like, like AWS credential, so something a lot of bots will do on GitHub is those scan for anytime somebody accidentally publishes credentials to AWS or Google Cloud or something like that? And then they'll go wild and start mining Bitcoin or sending spam or something like that? Do you think that this is like basically a new version of remember when you used to be able to search code on GitHub and people just search for API keys via the search functionality?

43
00:31:28,770 --> 00:31:32,250
Scott Tolinski: Do you think this is just like the more advanced version of that?

44
00:31:32,670 --> 00:32:25,200
Wes Bos: Yeah, well, I'm wondering if, if that's what's happening, or like, even, I'm just trying to think of like, how nefarious Could you be is like somebody is trying to use Git repos as a way to store spam websites or something like that. And Google's maybe GitHub is flagging them if they all sudden create hundreds of, of new Git repos. But if you like, if you fork somebody else's Git repo, and then just blow out whatever they had, and put your own stuff in an option, because I've noticed a lot lately in, in my GitHub searches, I search on GitHub a lot. Anytime I have a problem with me to how to use an API or anything like that, I'll just search it on GitHub and see other people have implemented it. And I've been finding a lot of like spam in there of people being like, just trying to do SEOs stuff with GitHub Pages. So I bet there's something shady going on around here, or you just extremely popular developer.

45
00:32:26,070 --> 00:32:29,340
Scott Tolinski: Yeah, those are the two options. It's either shady or you're cool.

46
00:32:30,000 --> 00:33:04,170
Wes Bos: All right. Next question we have here is from Mark prime. I really like this question. with Apple like marks name, Mark. Fine. That's like, yeah, that's, that's pretty, pretty sick, with Apple switching to their own processors. So if you didn't hear Apple announced that they are no longer going to be building on Intel, or over, I think it's over the next like three or four, four years. And they are going to be releasing their own Apple silicon, which at the end of the day, it's ARM processors and arm ARM processors are what are in phones, is

47
00:33:04,170 --> 00:33:09,660
Scott Tolinski: that right? It's within Apple phones. Is that what's in Android phones, no,

48
00:33:09,690 --> 00:35:38,070
Wes Bos: no, no, I will mix their own. I will mix their own chips for the iPhones. So when they came out, I researched it. And they are indeed just arm based processors and, and those are the processes that are often found in Chromebooks or things like that. And the downside to that is that it doesn't run all of your software, because the apps need to be specifically compiled and built for those types of processors. But the upside to it is that they are cheaper, they're faster, they don't use as much heat, things like that, like I know a lot of the super computers out there. Now instead of using super expensive Xeon processors, they're just using 400 ARM processors, and distributing the load amongst each other. So that's kind of interesting that they're switching over to that. And I bet that means that we're going to get a mac book with wicked battery life. Because they've they've sort of pinched and squeezed everything they can to get better battery life out of these things. But at a certain point, you need to address the thing that it's all of your battery, and that's your, your processor. So is it silly for anyone to buy a Mac that is released? Before that they release those to do development? Do you guys have experienced with windows in which you would still prefer which would you still prefer today if you need to violin so I don't think that you need to wait for these things to come out. Because when they do initially come out, not all of the apps that we know and love are going to immediately work on the new ARM processors or sorry, Apple silicone, let's call it Apple silicone. So, okay, I'm gonna call Apple silicone. So it's gonna be I bet it will be a good five years or so before everybody has totally transitioned over and there's going to be a lot of bridge time where you'll have to check if your apps are working on it. At a certain point, you're not going to get updates for older apps, because they'll only work on the on the new arm. But I was thinking about that as like, I'm like, Okay, well, let's just look at the apps that we developers use. We've got a terminal, we have our text editor, like vs. code, you have some sort of design software, you have a browser. Like what are also the apps that we're using next screen recorder is a big one for me. And everything terminal that will work on ARM processor, no problem and editor that's vs. Code is built on on Chrome. So that's no sweat there. That's that's gonna work. Nope, no problem, because these these browsers already work on on ARM processors. So I bet

49
00:35:38,070 --> 00:35:47,520
Scott Tolinski: that well, they mentioned that they had somebody to port electron already really electron stuff. So Apple, like did it themselves. As far as I know,

50
00:35:47,520 --> 00:36:02,520
Wes Bos: that's good. That means like, a lot of a lot. All the apps that I use are based on electron, so I will or that will work already, if especially if the browser's over design software. So if you start using figma, I bet I bet that will work because you can use it in the browser, right?

51
00:36:03,330 --> 00:36:26,690
Scott Tolinski: Yeah, I think figma is maybe built on rust. Either way. It's It's It's done through B, it's not well, is it done through electron? I believe it is. Yeah, at least they have the desktop app is. But yeah, I think as long as, as long as it runs in the browser, that stuff should work fine. I think that's the some of the joys of writing browser based applications for us, you know?

52
00:36:27,090 --> 00:37:07,940
Wes Bos: Yeah, it's, it's gonna be good. I don't think you should wait or stress out about something coming out or not just because most of you are just sitting at your desk with this thing plugged into a power source. Anyway. So at some point, you will probably get one of these if you decide to go stay with the Mac. But but don't sweat about it. I think this is a long term. sort of move. I might be wrong about this. I'm seeing in Windows, would you? Do you have experienced this windows? Yes. You go with it? No, it's just, it feels weird. And that's partly because I've I've been on Mac for so long. And partly because every single time we talk about Windows, there's an equivalent of whatever, but it's not as good.

53
00:37:08,210 --> 00:37:36,570
Scott Tolinski: Yeah, None. None of it is as good Yes, it's it's cheaper. You have more options for the hardware, whatever. The OS is still just, you know, cobbled together in like patch on patch on patch. It feels very weird to us. In fact, like they're like beautification aspects of it, like really worked. But it's like they seems like they only like worked on, like the Start screen. And like the first couple of screens, the moment you get into any, like menus in Windows at all looks like Windows 95 still looks terrible.

54
00:37:36,600 --> 00:37:59,210
Wes Bos: Yeah, yeah, it's it's funny, because we just got finished saying, well, all this stuff is browser based. So it shouldn't matter. But there is a certain aspect. And I know there's a lot of windows, people screaming at us right now. I mean, like, you're dumb, but that's just how I feel about every time every time I'm on it, and I've given it like good like a couple of weeks on Windows just trying to make it work and just just can't make it work.

55
00:37:59,360 --> 00:39:05,940
Scott Tolinski: Yeah, I have a Windows partition on this desk or on this laptop. I've had a Windows machine for a long time I've used it enough to know exactly how I feel about it. In terms of like, should you wait, in my opinion, I think at least if you're looking to get a MacBook Pro if you're spending that kind of dinero on a machine I would wait for the next MacBook Pro. Why? Because I don't think it's that far away. And I think that given the option to be on the apple silicon or not, I would take it if you don't need me need it right now. But if you do need it right now, I think everything that we said is going to be fine. I think it would be absolutely more than fine if you were to buy it right now. But let's see the 16 inch MacBook Pro according to macrumors.com is listed as do not buy because it is past or around their average day since release and I'm pretty sure the next one that's released is going to have the apple silikon so even if it's if it's a matter of waiting you know 50 days man I would wait if it's if it's not Oh

56
00:39:06,110 --> 00:39:15,690
Wes Bos: yeah, I didn't realize that they said late 2020 they're coming man maybe I'm wrong about this I thought there would be a lot more a lot more time oh that's pretty

57
00:39:15,980 --> 00:39:19,020
Scott Tolinski: cool. Time has been an odd thing lately.

58
00:39:19,080 --> 00:39:24,980
Wes Bos: Yeah, it's just been like the this whole 2020 has just been a fever dream where we wake up with arm base Max,

59
00:39:25,080 --> 00:39:25,770
Scott Tolinski: you bet

60
00:39:27,710 --> 00:39:30,110
Wes Bos: you know it hasn't been a fever dreams.

61
00:39:30,110 --> 00:39:48,480
Scott Tolinski: No, no, no, no, that's you You missed the perfect you missed the perfect condition. Show me away you got a perfect transition. You say well maybe you just want to wait till these Mac books are refreshed and you will be certainly refresh. The services that we've ever advertised here on set text and that's fresh books.

62
00:39:48,959 --> 00:40:03,710
Wes Bos: Yes, fresh books is your cloud accounting that you need for your independent freelance small business big messes whatever it is, if you need to keep track of it. invoices, expenses, time tracking all of that good stuff.

63
00:40:03,780 --> 00:40:05,010
Scott Tolinski: Maybe you bought a laptop,

64
00:40:05,280 --> 00:40:27,710
Wes Bos: maybe you bought a laptop and need to put that thing in? Or maybe you need to, what's it called depreciate it over four years, because it was a large expense. You can do that with fresh books. So check it out@freshbooks.com forward slash syntax. I'll get you 30 day unrestricted free trial. Make sure you use syntax and how did you hear about us box? And thanks so much to Freshbooks for sponsoring. Nice.

65
00:40:27,840 --> 00:41:18,660
Scott Tolinski: All right. Next question is from Paige neutering house, she says hi, hey, Wes. And Scott, big fan of the podcast. Thank You page. My question is, have you ever been approached by or heard of get ads? the.io. They're trying to pay developers to put ads under popular open source libraries on GitHub. They approached me recently, I wasn't sure what to think about them. It just seems fishy. And I thought there was a little chatter about it on Twitter. What do you think I know the sponsorship ads help pay the bills, but I don't know if it conflicts with GitHub Terms of Service, or how developers would react not react as since typically, we're more suspicious of things that seem sponsored or disingenuous. Thanks for any thoughts or advice you have page. Yes, I have not heard of this company that seems kind of iffy to me.

66
00:41:18,660 --> 00:41:19,590
Unknown: Um,

67
00:41:19,590 --> 00:41:56,280
Scott Tolinski: you know, what I, personally, if we're talking about personally, and somebody wants to throw in a one liner, will you know, if if you want to help support this repo, here's like, watch this ad. Like I honestly, for the amount of software that I use that other people have written, I can overlook that in my GitHub blogs, or my NPM installs. I really do not care personally, if people want to do this kind of thing. But I don't know a company approaching you independently and being like, Hey, yo, can we throw some ads on your stuff? Like that, to me? Seems kind of rough? I don't know. It seems shady to me.

68
00:41:56,480 --> 00:43:32,630
Wes Bos: Yeah, I actually have a lot of experience with this. Just because, like back when I first did my affiliate thing, there was another like startup, I forget who it was, I'm just searching my emails, it was probably four or five years ago. And they did this exact same thing where they implemented an SVG file, and then that SVG file would dynamically change on their server and serve up just text. It that would be an ad. And they approached me and said, Hey, do you want to buy a bunch of inventory? I said, No, but we can try. We can try it with like affiliate. And he put me in a bunch of his unused inventory. And none really nothing came of it. So it didn't really work that well. And then I also had sinned a sore house as I say it. He's the Yeah, behind. Yeah, it that behind like millions, all these awesome lists a lot of tons of different plugins and JavaScript things and whatnot, and just did a horizontal rule. And then did a little ad it says improve your JavaScript skills with the CSS course from Wes Bos try is free JavaScript quarters, JavaScript 30 course for a taste of what to expect, you might also like is react and sublime courses, and then another horizontal rule, and that did super well for him. I paid out a couple thousand dollars to him, just from those little clean little ads that he's put in the readme of his repo. And every couple of months, somebody would screenshot and be like, hey, what the hell is this? And then and then we would reply, be like, Oh, the guy's given his entire life open source.

69
00:43:33,440 --> 00:43:47,070
Scott Tolinski: Sorry, you read all this free stuff in somebody's one line or something that's not free. And we lose? Yeah, I had a lot of variance with that on YouTube. I, you know, I did 2000 free videos, and I asked people to pay for one. And they were like, What? What's the deal here?

70
00:43:47,100 --> 00:44:18,210
Wes Bos: Yeah. So and then that way, when it when we said that a lot of people sort of came to him be like, Wow, that's really cool that you're able to, like I'm able to teach people, he's able to get a little extra money from the stuff that he's been building. And that allows that like, sort of funds him to keep working on on this stuff. So it was a pretty good arrangement. I did hear that that first one I talked about was against GitHub terms, and they got shut down for that. I've never had any, any issues with mine. So I think as long as it's like,

71
00:44:18,300 --> 00:44:21,120
Scott Tolinski: like, organic, you doing yourself?

72
00:44:21,150 --> 00:45:03,000
Wes Bos: Yeah. As long as it feels cool. It is kind of weird when a company comes in and starts trying to drop ads into to read me's and things like that. But there's probably some sort of, there's a problem here. And that is that open source authors need to make money somehow. And I think people are trying to figure out, how does that work right now. And this is just one of those things. So you probably won't make a whole lot of money off of it unless you have like, like Syndra has. He's probably one of the most popular developers on all of GitHub. And it's not like unreal how much money he's made. But if you just have like a couple of popular repos, you probably won't Make a whole lot of money for it. I would say it's probably not worth it.

73
00:45:03,090 --> 00:45:15,570
Scott Tolinski: Yeah, right. Yeah, that's a tough call. I've not heard of this company, though. I don't know, I would prefer if it was me to do it on like, a more personal basis, then like three totally, that's gonna throw some stuff on there.

74
00:45:16,080 --> 00:46:06,240
Wes Bos: Next question from Colby. Ah, I just listened to your TLD game. And it made me wonder what are your opinions on personal site? domains? Should you always try to be your name dot dev? What about.me or other domain names this is this is really interesting. So like, like, what are the popular ones? For for developers, we have.io dot Dev, which is pretty new. It only came on what like six months ago.me. There's dot tech, which is a sponsor of our podcast. He is a popular one calm. So what she always got to know you don't have to get a dot Dev. Everyone used to always try to go for the IO. Those are mostly taken up now. And then also anytime you mention it, somebody comes at you and talks about how awful IO czar. Apparently they're sinking the ocean or not. What was the problem with IO?

75
00:46:06,510 --> 00:46:13,710
Scott Tolinski: I thought it was foreign country. that accurate? I thought it was there was like some weirdness around SEO or something. No, it's

76
00:46:13,710 --> 00:46:46,920
Wes Bos: not because like it those country level domains. Google has a list of these are country level domains, but we don't treat them as country level domains. like.tv is for Tuvalu, but they don't treat as like, Oh, this website must be originating in Tuvalu. Somebody is abusing the country. I think I we can look into Oh, maybe we'll put a link in the show notes. If I find it. I don't forget what it is offhand. Dev is cool. They seem to be very expensive, especially if you want to short one.me I've never liked.me what do you think about me's don't like it? No image of Apple for some reason,

77
00:46:47,580 --> 00:47:01,020
Scott Tolinski: does it? Yeah, yeah. It reminds me of like, I think there was like some service that was like your homepage. It was like around, you know, trying to be fancy. This is your landing page. This is your business card for the web. And that's what it reminds me of for some reason.

78
00:47:01,800 --> 00:47:05,160
Wes Bos: Oh, yeah. and.sh is pretty cool.com

79
00:47:05,310 --> 00:47:06,960
Scott Tolinski: i use.com. Yeah,

80
00:47:06,990 --> 00:47:21,600
Wes Bos: yeah, I think my favorite is if you don't have if you can't get the.com because your name is like Joe Smith. I would try go for the.sh or try to make some like really cool domain name off of it. Otherwise, nothing wrong with with the dot dev or something like that.

81
00:47:21,990 --> 00:50:21,240
Scott Tolinski: Yeah, I use.com I've just had Scott Tolinksi calm forever. Although I do have s Tolan ski dot Dev, which isn't as like, you know, fun as God. Calm but it is like, I don't know, my Twitter handle. All my handles are stilinski everywhere. So maybe s hilinski. dot dev should be my main URL just to fall in line with everything else. I have never thought about that too much. But yeah, I would go Comtech dev before i o me or sh but that's just me. Last question here is from cam cam says what's the best way to introduce new technology or process to a team. I have a lot of ideas about this. But that said, I think these are going to be it's going to be different based on how big your team is big, big, big, big teams. It's a little bit more interesting or difficult. small teams, these get a little bit more intimate and one on one, you can do a lunch and learn where everybody brings their lunch. One person is presenting everybody eats their lunch because they're in the same room and everybody has lunch the same time you eat your lunch, and one person gives a little presentation about a specific topic. That's one, two, in an internal mini conference. That'd be fun. You take a day and every single person on your Deaf team prepares a miniature talk about something that they found interesting. That way it gets people really used to sharing things that they know and love. So a little mini conference or a miniature meetup is the same as a lunch learn except for it's an all day and everybody would take take a turn Demo Day. And I don't mean like a full day. But maybe you've prepared a code demo. And you could pass along this demo and say, hey, look at this thing. Maybe it's a problem that your team has typically or whatever I'm looking at elegantly, I solved it using this technology, maybe we should look into using this technology for things. That way people can really get a first hand view of just what this what problem this thing is solving and how eloquently it's solving it. Another one would be to get everybody in the room and watch the talk on YouTube. I think this is fun. I know I know, people who have done Wess courses like this, that where they're all sit, and they'll do like a lunch and learn with are all put on what this course is together in the conference. The thing, well, maybe you're not good at speaking and you don't care about speaking but somebody else has already done a really awesome talk or tutorial or whatever. Well, you could say, Hey, everybody, I have this really great lunch and learn idea. Let's go ahead and do this. Now. I think all of these approaches require buy in from the whole team. And I think this is the type of thing where you would really want to have your boss the blessings of your boss to say like, yes, this is what we're going to do. And we're maybe going to make it a regular thing. That way people can get used to constantly sharing what they're learning and passing along information and that sort of way. And that way you'll have a stronger development team. In my experience teams that work more like this, they're more communicative. They're more like, let's, let's, let's learn from each other. Like, that's our biggest strength is that we have all these brains. So we might as well use these brains to help the other brains, you know. So for me, these kind of things really would be a good, good solution for something like this.

82
00:50:21,690 --> 00:51:12,240
Wes Bos: Yeah, I agree. I love seeing teams, or I've even seen just friends like a couple times. Now I've seen people get together with people in their city, and they rent a conference room or go in somebody's work has a conference room. And they all do like three or four, or five parts of one of my courses, JavaScript 30, or something like that. And they do it all together. And it's really cool, because you can pause and talk through it together and say, like, Oh, this is how we might approach that on our team instead. And sometimes you have a more senior developer who already knows what they're doing, and they can talk to the junior one. So just like, not everyone has time to create mini talks and things like that. Those are awesome. But if you don't have time to do that, like Scott said, just grab some pre made content, even just grabbing a conference talk that's on YouTube, and watching it together while you're lunch is an awesome way to go forward with that.

83
00:51:12,360 --> 00:51:21,090
Scott Tolinski: Cool well that's it for this potluck. Now we're gonna get into the part of the show called sick pics where we pick something that we think is sick, man, I

84
00:51:21,090 --> 00:51:32,100
Wes Bos: got the best sick pic of my I'm gonna say this is the best sick pic of my life. pre cut parchment paper. Oh, I don't even know is this borders on pre cut parchment paper

85
00:51:32,160 --> 00:51:38,880
Scott Tolinski: is thick that you're going to have or I'm going to ask you like six months later, like, Hey, where'd you buy that? You're like, it was a sick pick man.

86
00:51:39,870 --> 00:51:46,080
Wes Bos: All the time. But you can't i can't expect you to remember every pick that is sick.

87
00:51:46,200 --> 00:51:47,040
Scott Tolinski: I got a bad memory.

88
00:51:47,070 --> 00:53:21,270
Wes Bos: But here it is. It is rollerblade wheels for your office chair. Boom. Okay, so I did not know about this until about two months ago somebody on Twitter was like this picture of my office and they said Hey, watch that laminate with your with your your Herman Miller Aeron chair. It'll cut that up. Yeah. And I was like, Oh, he's like, he's a go getter. Like, I'm like, I don't want those stupid little mats that you have to put underneath. He said, Get rollerblade wheels. So I was like what, so you can get these like really nice wheels with like a back 40s in them, they think these things are fast. And you turn your chair over, you pull your old wheels out, you slot slap these things in, it's like 30 bucks or 20 bucks American. For a set, they have 11 millimeters fit almost every chair and then 10 millimeter, one will fit IKEA chairs. And it makes your chair like so much smoother to glide around on. And I feel like the chair is just more comfortable in general because like sometimes he can't get your chair over like just an inch if you just need to, like just shift your weight around. And this just rolls everywhere with you. And that sounds like a bad thing. But this is like a life changer. I tweeted it out. And like it had like 1200 retweets and I had like hundreds of people being like, like a couple weeks later being like, this is the best thing ever. So major upgrade, I always talk to people like what's the best upgrade you can get in your life for under 100 bucks. And this is up there with with one of the best upgrades so rollerblade wheels, you can get them on Amazon, and they fit pretty much any chair.

89
00:53:21,600 --> 00:54:58,110
Scott Tolinski: Yeah, that is very sick I I have like a remarkable rug underneath my desk, I'm constantly hitting the edge of that is a very sick pick, that is one that I will be purchasing. So thank you very much for that. I have a I have a wealth of sick pics that I've been collecting here and let me pick a really sick one. Now this one is going to be sick for any of you who have the 16 inch MacBook Air. So I'm sorry, that is going to be a small segment of this audience. But this is sick enough that I will I will make an exception here. This isn't my greatest trick of all time. But this is one for 16 inch MacBook Pro people that you will find useful. So this is called disable turbo boost. This is an application for the Mac. And so with these new Macs, I don't know if you've noticed this Wes, but the fans come on way sooner, the fans come on very soon. And that's because of turbo boost. Now turbo boost has a whole bunch of different effects. And if you're sitting there, you know with your computer plugged in and whatever recording the last thing you want is your microphone to pick up some of that that noise coming off of your fans. You don't want your fans to be going nuts. So either way there is a neat little app that allows you to one click to disable turbo boost until you want to turn it back on. And I found this to be just a really really nice application to have on my computer. I'll put a link in the show notes. But again, if you have a turbo boost Mac This allows you to control your fans a little bit better in a way that just as is the way it probably should have been working but I think Apple's doing it the fans on very early for specific reasons.

90
00:54:58,260 --> 00:55:13,500
Wes Bos: Does this stop that Your processor from working too hard or does this just turn the fans off? Because I always people are always like use this app to turn your fans off. I'm like, well, they're on for a reason, aren't they? Like it needs to be cooled? Like, I don't want to like fry this thing.

91
00:55:13,800 --> 00:55:43,680
Scott Tolinski: So, okay, so it did all it does is disable the turbo boost your fans will stay on. It doesn't just shut off your fans. It's basically let's see, the MacBook runs noticeably cooler and gains 25% in battery life. So this person says it's running cooler and against more battery life. I don't necessarily understand it. All I know is that I click button and buy fans a little bit I click button button says okay, fans cool down and my recordings sound better.

92
00:55:44,010 --> 00:55:58,830
Wes Bos: Beautiful. Yeah, that's that's interesting. I never ever and always asked me Hey, do you is your fans on a lot? And I'm like, I don't know. Because I have my noise cancelling headphones on all day. Let me hold on. Let me see. Oh, yeah, mine's like a rocket ship right now.

93
00:55:58,859 --> 00:56:08,880
Scott Tolinski: Yeah, that gets picked up in the recording for me at least so Oh, like when I started to talk in the gates down. I don't know if it's maybe my my microphones too close to the computer comparatively. I

94
00:56:08,880 --> 00:56:19,860
Wes Bos: think I've had it before where it was. And I just when I put it on, like I have mine off to the side beside my monitor. So that might be the difference of how far it is from the mic.

95
00:56:20,160 --> 00:56:20,670
Unknown: Yeah.

96
00:56:20,670 --> 00:56:27,780
Wes Bos: I'm gonna get that though. Cuz Yeah, sometimes mine is mine. Yeah, stop. This is so obnoxious,

97
00:56:27,870 --> 00:56:31,710
Scott Tolinski: very obnoxious. And I was happy to find out that I could turn it off. Well,

98
00:56:31,740 --> 00:56:36,600
Wes Bos: maybe those new Mac books will not be so hot. That'd be good. I'm kind of excited about them. Now.

99
00:56:36,810 --> 00:56:40,200
Scott Tolinski: I know. Right? Who wants a 16 inch MacBook Pro that I just bought?

100
00:56:42,030 --> 00:56:56,340
Wes Bos: We didn't we do that? We did an entire episode on the new math books. And I said, you probably should have this thing for three or four years. Yes. To make it worth it. Yeah, no, I gotta sit and wait. sidaway Alright, shameless plugs. What do you got? For me?

101
00:56:56,340 --> 00:58:08,040
Scott Tolinski: Shameless plug. is so long since we recorded one of these. I have two courses. I did a course on 3d in react, we should maybe do an episode on 3d and react. It's It's very cool. Yeah, you can work with real 3d stuff. I don't know if you've noticed. But 3d has been popping up all over the place. Even the new stripe website has 3d. So if you want to learn how they did that, and you will learn all about how to use 3d on the web specifically with react. We did this course on react three fiber, which is an incredible library using three js. And the course for this month is going to be advanced animating with framer motion. So, man, a lot of like, really, really cool courses that I've been working on. That's going to be out is August. Does August have 31 days in it? If so, August 31. If not, whatever the last date. August is nice. A little conditional there. August pop? Yes. August pop. Yes. So negative one. It's the last item in August. And so those I don't know how to level up tutorials.com. And check it out. If you sign up for level up Pro, you get all of those courses, plus many, many more 10 for the year save 25% Thank you so much.

102
00:58:08,040 --> 00:58:55,050
Wes Bos: I'm going to shamelessly plug my upcoming Gatsby course it probably won't be up by the time you listen to it. Maybe it's going to be at master Gatsby calm. I'm really excited about it. Because it's the first course I've done where we also write all the CSS. People always ask me like, can you please include the CSS and for a lot of my stuff? It's just been like, well, no that that would that would add an extra 30 hours to the to the course. But for this one, it was actually possible. And then I made it skippable. For those who don't care about the CSS. You can skip it. That's really cool. We're using Sanity as a headless CMS. We're using Gatsby obviously, for the entire website. There's a lot of custom react hooks that we thrown in there. serverless functions, all that good stuff. So get ready for that it's gonna be available at master Gatsby calm. And that's it.

103
00:58:55,710 --> 00:58:56,370
Unknown: Sweet.

104
00:58:56,790 --> 00:58:59,880
Wes Bos: All right. Thanks for tuning in. Catch you on

105
00:59:00,120 --> 00:59:15,030
Scott Tolinski: Monday, Monday, Monday, Monday, Monday, peace. Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

