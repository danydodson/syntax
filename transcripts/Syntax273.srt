1
00:00:00,359 --> 00:00:01,350
Unknown: Monday, Monday,

2
00:00:01,350 --> 00:00:02,160
Monday,

3
00:00:02,160 --> 00:00:08,340
open wide dev fans yet ready to stuff your face with JavaScript CSS node module BBQ

4
00:00:08,340 --> 00:00:09,060
Tip Get

5
00:00:09,060 --> 00:00:24,000
workflow breakdancing soft skill web development hasty as crazy as tasty as web development treats coming in hot here is Wes Baracuda Bos and Scott Taylor. Totally.

6
00:00:26,520 --> 00:01:01,049
Scott Tolinski: Welcome to syntax in this Monday tasty treat, we're gonna be talking about refining processes and how we come up with the ability to make ourselves consistently better in our systems and our processes by evaluating and making them better. Because chances are when you said something, I'm the first second third iteration of it might not be the best. We've learned this from code. This is like refactoring lessons straight out of code into productivity hacks. So my name is Scott to linsky. I'm a developer from Denver, Colorado, and with me, as always, is the Wes Bos.

7
00:01:01,110 --> 00:01:02,400
Wes Bos: What's up everybody?

8
00:01:03,299 --> 00:01:04,590
Scott Tolinski: What's up, Wes?

9
00:01:05,099 --> 00:01:10,760
Wes Bos: Oh, you know, just hanging out in the woods, enjoying the nice warm weather out here in Canada?

10
00:01:11,040 --> 00:01:16,680
Scott Tolinski: Hey, that's cool. Um, yeah, that sounds great. That sounds lovely. That sounds super lovely.

11
00:01:17,010 --> 00:01:17,760
Wes Bos: It is lovely.

12
00:01:18,060 --> 00:04:43,010
Scott Tolinski: What else is lovely. One of our sponsors today, that's sentry.io, essentially, is the error and Exception Handling service that is a such a good bug tracker, you want to track those bugs. And I'm not talking as creepy crawlies. Although they might be essentially that I owe it allows you to keep track of all of your bugs in a really, really great way everything's there. You can mark things as resolved. There's all sorts of interesting tools in it. There's a tool that I haven't used that I'm interested in maybe checking out but I am, I am very interested in this. It's the user feedback tool allows you to have a basically reported dialogue where people can submit feedback on your site, especially when there's an error that happens like a little pop up that says, looks like we're having a bug. Do you want to do you want to tell us a little bit about what happened? Have you used a software that crashes? I mean, I'm me I use what software to use crashes all the time. ScreenFlow crashes all the time. And I'm like always having to type in that box saying, Here's why ScreenFlow low crashed. And this is kind of that same thing, but it's all baked into your error and Exception Handling service. So if you want to check that out, head on over to Sentry dot i o use the coupon code tasty treat all lowercase one word, you're gonna get two months for free. So thank you so much for Sentry for sponsoring this podcast and being a great sponsor to us for so long. So I think the genesis of this episode to me came about when I was thinking about some processes that I've had and how, you know, I set things up, and I just do things for a little while, and maybe they become messy, or maybe they become less effective. Or maybe I stray away from the actual process itself. And building systems in your life is one of those things that's going to take you to the next level of productivity, right, you have to make less decision, things just happen. And things happen the same way every single time. And I begin thinking a little bit about functional programming, right? When you do functional programming, you run a function that gives you the same thing back every single time. There's no like side effects, there's no decisions to be made. It's just this thing that does the thing. It's done. Okay. So like To me, it got me thinking about refactoring my processes, refactoring my productivity, things to become more productive, to become a better communicator, to add all sorts of personal processes in we all have been experiencing a time crunch with the current situation. I have two kids and my wife is at home. So she needs to work, we both need to work sometimes it's impossible to find 40 hour work weeks for both of us. So what do we have to do? Well, we have to have systems in place to allow us to be as productive as possible in that time that you do get. So let's talk a little bit about refactoring our processes in terms of productivity. So okay, first, I think you need to identify slow processes just like your your computers, your task manager, you have to identify what exactly is the slowest worst thing that you could possibly have on your plate right now? I know for me emails a really bad one sometimes. It's even just like making appointments or things like that. What what are what are some things that are slow in your processes nowadays?

13
00:04:43,799 --> 00:05:28,650
Wes Bos: Oh, yeah, definitely. Email, processing my inbox getting through it. More comes in than I can handle and I'm not very, like I do have processes for support but the emails that are related that need me to reply, Definitely, definitely an issue on my end. cleaning my desk is another pain point of mine right now, or I just put things on it. And then it builds up in for you know what, there's tools and wires and cups and stuff all over. And that's not really web development related, but it is related to how I am productive. And it's just a process that, obviously there could be a process where I cleaned it up and whatever, but I just don't have that in place right now. And it's the issue that I've been sort of looking at,

14
00:05:28,890 --> 00:08:22,800
Scott Tolinski: Yeah, me too, you know, there was one, I take like a ton of medication by just take medication. And there was like things that was like, I'd spend this like cognitive little bit every single day trying to remember if I took X, Y, and Z or not. So I got one of those, those grandparents milk containers, I buy that thing. And every single Sunday, I fill it up, I set up that process, that was like something that was like a minor inconvenience in my life. And I've turned it into something that's not even a inconvenience whatsoever. I can definitely relate to the desk. I think it progressively as the month goes on as we get closer and closer to each of my deadlines, because I have a deadline every single month. As we get closer to the deadline, my desk gets progressively worse looking. And I think you could probably take a photo of my desk and have it be like a progress bar based on like, you could tell like how far along my courses based on how awful my desk is. And so I think a good thing is just identifying what are the processes in your life that are not good? Well, what could be using the tune up, then you want to set some clear goals like for me, I would like to start each week with a clean desk. Okay, not too bad. I think that's a pretty good goal, right? That's a clear goal that you can can identify. And maybe you can give yourself a little like, check if you did or not, sometimes I like to use an app called streaks to do make sure I do things when I do them. So that way I can look back and have a good understanding of it. So you're gonna want to be able to set a goal that you can track. So whether or not this is a clean desk, or to clean inbox or something, you want to say like, Oh, I want to have no, no more than 10 emails in my inbox, whatever, you set up this clear goal. And then you get to work on refining and refactoring that process. Now, sometimes the solution is a tool that you're not using other times, it's a very clear thing, right? So for instance, the desk, if if I were to take that time, and maybe spend, I don't know, how long would it take me to clear off my desk, 15 minutes max, if I were to take 15 minutes on a Sunday to clean up my desk every single week, I think that would that would just about do it. So I would go ahead and schedule that time in my calendar or something like that, and give it a try. Like that. So for me, if I'm going to start these things, this is productivity hacks, sort of stuff, territory, I'm gonna give it a try. As long as the investment isn't too high, sometimes you have to sign up to a new service and move all your emails over and do whatever like that. To me, that's a too much of an investment to just try. But if it's something like cleaning my desk off every Sunday, I'll try it for a month and see if I can stick to it, then maybe I'll look back on it and see, hey, did this thing does go as well as I was hoping it would. And it's important at the end of just giving it a try for a week or try for a month or whatever to take a look back and evaluate whether or not that actually made your life more productive, better, whatever. Because if it's not, then that value, then you know, is it worth the 15 minutes that you're giving it. I like that

15
00:08:22,830 --> 00:09:06,800
Wes Bos: I like that a lot. Because like you could do anything for 30 days, I remember was Matt Cutts. He worked for Google. And this is probably 556 years ago, but he did like a 30 day challenge. Or every every month, he would, he would take on a new thing, whether that's trying to write a blog post for 20 minutes every single day, or not eating meat for the entire month, or whether like you just like or whether it's not using your car and biking everywhere that you need to go for 30 days, like you can impose these challenges on yourself and say, I'm just gonna try it for 30 days. And you take a look back at it after 30 days and say, Okay, what did I learn from that? about myself? as well as like, Can I keep doing it? Or is it worth doing it? Or is it not?

16
00:09:07,350 --> 00:12:28,080
Scott Tolinski: Yeah, and that reflection period, it's definitely like an important part of the process. Because if you don't reflect on it, chances are, it either means that you forgot about it, you didn't do it, or it like fizzled out or whatever. And sometimes, like I think that's like the easiest mode for us is to like, try this new thing. And you know, you're excited about it for a week or two and then you forget the third week and then the fourth week, you just don't even bother. And then at that point, you're like, Alright, just back to life as normal. Yeah. But if at the end of that fourth week, you did okay, let's do a little breakdown and talk about what worked about then what didn't stick to creating these kind of systems in place. Now, one thing I like to utilize is to like ask around people that I trust and know, just like what kind of tools they're using for various things, right? It's like time blocking or, or batching or eating a frog or even In like, actual tool like applications, whether it's to do list or I mentioned foam in the next coming sit next episode, I think code planning for with GitHub or using notion or whatever, whether or not it's like a strategy, or it's a actual physical application, I like to ask around to see what people are using. Because chances are everyone's on their own sort of systems journey and people that you are know that are really into this stuff. They they do a lot of research and people come up with some really great things. That's how I heard about foam. I heard it from I don't with JavaScript, Joe, on Twitter, is this name rusty? Who's rusty Joe? For a little bit? I don't know use TypeScript Joe for a little bit. I'm not quite sure what he What are you currently is, let me see. If he's back to .js. Oh, he's back to .js. Joe, that's why I heard a phone broke in just ask around what people are using, get one of these things to try. Whether it's batching, time blocking frog eating, setting a whole list of priorities, doing those kinds of systems and then evaluating. So I personally have found that there are several systems in place that work really well for me one to do list works really well for my calendar works really well for me, but I have a hard time sticking to them. So now what I need is to refine these processes to figure out how exactly I can stick to them better. Okay, how can I give less overhead to myself, I less spend, spend less time thinking about email, spend less time thinking about my to dues, and more time just actually, you know, getting things done? So to say? I don't know, it's a deep topic. There's a lot here. So what are these people using and why? So I mentioned time blocking batching in eating frogs. Now, these are definitely things that can make you more productive, right? They can solve a bunch of your calendar issues, they can solve your to do list issues, and whatever. But not all of our productivity issues are around calendars in whatever I think about like, especially in like code territory, like project management. And obviously, that kind of thing, like really grows based on your team. But if you're an individual, and you're doing some project management, do you do anything to keep track of like ideas beyond talking about like, beyond bugs, like beyond fixing bugs? Do you keep like how do you keep track of the things you would like to add to your platform? Or maybe ideas or like feature requests, those kind of things? How far yeah, things are

17
00:12:28,110 --> 00:13:08,040
Wes Bos: like platform feature requests, things, those go as GitHub issues. So even if they're not a bug, I still stick them in there. But more ideas, about course ideas, things like ideas that I want to add to the platform or just like dreaming in general, I'll often do that sit in the hammock or something like that, and sort of just kind of think of all kinds of really interesting stuff, or just let my mind go wild. And for that, I'll usually pop it into a markdown. I don't have somebody asked, after the show. We talked about markdown notes. Like what's the process for editing on your phone? Yeah, I don't have a I don't have a good solution for that. Yeah, I would like to figure that out. Do you?

18
00:13:08,160 --> 00:14:31,980
Scott Tolinski: What do you use? man ever since I moved through this apple thing I found out so hard about grapes with the Apple phone is that things aren't as easy to do as they are on the Android phone. Right? The apples, because I'm on Yes, the Apple phone. I'm on Google Drive for all my stuff. Once I signed up for the iCloud, the iCloud once I signed up for the iCloud. And I had like files thinking between my desktop, it was way nicer. So I use iCloud to sync my markdown folder of notes to my phone. And then I use an app on my phone that allows you to set a folder of markdown files, and it's all markdown. So as long as you find a markdown editor for the phone and sync that file, I interchangeably write and create notes on my phone or within obsidian or foam or whatever. And it just works. Now granted, not all the features of foam or Rome or any of those are going to work on your phone. But just simply having that ability to edit a markdown file itself is really all you need. I use an application called one writer, I've turned into the the person that I always hate. And I do not know if this exists for Android or iOS. But I can guarantee you that there is a markdown editing app for Android and as long as you just keep those files synced, easy peasy. Easy peasy.

19
00:14:32,219 --> 00:15:32,190
Wes Bos: I need to try that out. I don't I don't want to pay for iCloud. I don't know what I have against Apple's services. But I don't like I just don't like them. I know. So I think it's just I don't want to add another thing that I have to pay for. But I'm sure I could like use Dropbox or something like that. I actually been using this app and I'm working on converting my entire beginner JavaScript course to text and I'm working with somebody to do this. And they told me about this app called notable. And it is markdown. It's got a little bit of a funky syntax for adding attachments. But it's all in a Git repo. But we use notable to edit it all, which is really cool. So maybe I'll see if they have what's called notable. And let's see if they have an iPhone version. So I bet I could use Dropbox for that. Although I want to get away from Dropbox to just get away from notable I, they have an iPhone app. So I could probably use that.

20
00:15:32,730 --> 00:16:33,150
Scott Tolinski: Yeah, so Okay, so you know, there's a lot of stuff in this episode. And this was really just me pontificating a little bit on the, you know, the processes that we need to refine what takes a lot of time. And the end result isn't necessarily that there's going to be one solution to all of your problems, right, the notion isn't going to solve all of your problems or whatever it's going to solve some of your problems used correctly. So as long as you're willing to take a look at what is lagging behind in your processes and life, and how you can improve them. And this isn't, you'll be able to squeeze more out of that that toothpaste roll that is your date of hours. So just a thought, take a look at what is slow right now for you and figure out how you can make it faster, or talk to your friends about what they do for better email or whatever. And hopefully, it's not, hey, sign up for a new email, because that would be a huge bummer. I'm not gonna I'm not gonna do that, you know?

21
00:16:34,500 --> 00:17:00,840
Wes Bos: Yeah. So I love hearing how people have attacked these things. And sometimes it's not like more complicated processes, but it's simply just like very simple rules, hey, I don't I don't do this, or I do this or only reply to requests that come in through this email address, and you just don't do anything else. And I would love to hear what other people have for planning features and things like that. Make sure you tweet us ATS index FM. And let us in on that.

22
00:17:01,080 --> 00:17:38,070
Scott Tolinski: Yeah, because at the end of the day, we're developers here. And so many of these skills that we know whether or not it is functional programming or whether or not it is creating interfaces, a lot of these skills that we're picking up. And those same sort of skills can be applied to all sorts of areas in your life, including productivity and time tracking, all those sort of things. We know I don't mean physically coding up something I'm saying like the stuff that you learned from making websites about dry code and making things efficient and whatever. Hey, try to see if you can utilize some of those skills in your day to day life as well. All right, thank

23
00:17:38,070 --> 00:17:43,800
Wes Bos: you so much for tuning in. And we will catch you on Wednesday. Peace, peace.

24
00:17:45,660 --> 00:17:55,440
Scott Tolinski: Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

