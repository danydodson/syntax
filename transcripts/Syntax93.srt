1
00:00:00,359 --> 00:00:06,990
Unknown: Monday, Monday, Monday open wide dev fans yet ready to stuff your face with JavaScript CSS

2
00:00:06,990 --> 00:00:07,590
node

3
00:00:07,590 --> 00:00:09,060
module BBQ Tip Get

4
00:00:09,060 --> 00:00:19,980
workflow breakdancing soft skill web development hasty as crazy as tasty as web development treats coming in hot here is Sarah Khuda

5
00:00:19,980 --> 00:00:22,290
ba and Scott El Toro.

6
00:00:25,920 --> 00:03:37,830
Scott Tolinski: Welcome to syntax. Today's episode is a hasty treat in which we're going to tell you how to be well liked at work, which in my opinion, is an extremely important part of the whole deal. Instead of just being a good developer. It's also good to be a good person and to be to be admired by your coworkers. And a good way to be well liked by your co workers is to use something like Log Rocket Log Rocket is today's sponsor of this episode. And it's an incredible way that you can set up your error tracking to give you so much incredible insight. Again, their headline says stop guessing when bugs happen. And that's such a key thing with Log Rocket, because Log Rocket not only gives you key insight into what's going on with the bugs and errors in your site, but it works with all of the tools that you're already using from it century, which is another sponsor of the syntax to bugsnag robar, New Relic, JIRA, intercom, Zendesk, Trello, GitHub, all this stuff, it works with all of it, and it works really well. It also works with any of the stack languages that you might have, or platforms such as react Angular, or just plain JavaScript, Redux Ember view, j. s, it works with everything. Now, Log Rocket is for your front end code to see exactly where bugs are taking place. And if you use a system like century, you'll know that it's great for locking bugs. But how, in addition to that, can you figure out what exactly visually was going on? Well, Log Rocket makes the visual aspect of this so so nice, it gives you access to an exact video of what the user was seeing. It's a pixel perfect replay of what your user saw called session replay. And to me that is a sick sick feature. That's how many times have you gotten a bug? And you're looking at the stack traces, you're like, Okay, well, I understand why this bug happened. But how the heck did they even get to this thing to push this button to make this thing happen at this particular point, the interface, and this thing solves all of those because you get access to see exactly what's going on in your application when the error took place, as well as the council and errors as it's happening. And network activity as it's happening. And Redux, you can expect any of your actions at any given point in time, Log Rocket is so incredibly sick for getting the complete picture as to what's going on. And again, you don't have to replace your existing tools. If you're already using Sentry, you just add it on. And then you can use it and have the combined power of both of them. It's unbelievable. So Log Rocket is so so sick. And if you want to check out Log Rocket, head on over to Log rocket.com forward slash syntax and get 14 days for free. Again, this thing is going to help you understand exactly what's going on in your application. And it is so so cool. I'm a visual person myself. So having more information as to exactly what's going on in the visual replay is just a killer feature for me. So again, check out Log Rocket at Log rocket.com forward slash syntax get 14 days free. All right, so let's get into this how to be well liked at work.

7
00:03:37,890 --> 00:03:42,210
Wes Bos: Yeah. So this is your idea for the episode. What was your motivation behind this? Yeah, I

8
00:03:42,210 --> 00:04:39,420
Scott Tolinski: think we all have had coworkers at some given point that were maybe difficult to not only work with, but even just to be around, right? And imagine the situation where you're that coworker and maybe you don't know it, and maybe you don't realize that everyone who's working with you is upset that they're working with you. Or maybe you're just don't understand that, like what you could be doing better to be more Well, maybe you're just not fitting in, in the company culture. So I think some of these ideas are going to be sort of just general tips that we have for working with other people to make everyone's life easier. And when everyone's life easier when you're working on a project, the work that comes out of it is always going to be way better. Right? I've been on teams where people are just sort of iffy about each other. And I've been on teams where every single person on the team had each other's back. And the output of those projects was tremendously different. So I think it's a key important part about working on a successful team and creating successful design and development work.

9
00:04:39,540 --> 00:06:22,020
Wes Bos: Yeah, I've worked on quite a few teams as a consultant. So I have a bit of a lot of experience of like being the new guy on a team and a lot of experience. Like when you're in a spot where you need help or you're trying to work with someone to get to, to fix something or to build something together. There's there's a lot of things you can do in order to make that relationship really good. First tip we have here just kind of gonna rattle through a whole bunch of tips that we have my first tip that I have is foster a culture of asking why and how. So one thing that I find coming into a new job, and if you are the person where someone else's new is coming in, there's often going to be lots of questions about, like, why do we do it this way? How do we do it? How do you approach it? What's the best approach for editing this specific component on the page? Or, or anything, right? Like, you just have to, like, get to know this sort of flavor of development as, as it works? Or how do we deploy these things? Or there's often lots of acronyms or lots of Like, who do I even talk to about like the last project I worked on, there was like a whole separate team that worked on the API versus the the team I was working on, which is actually building the website. And often there was no documentation, which another show we've had before. And I just didn't know how it works. I'm like, Who do I even talk to about getting this thing? So I was really lucky in that there was a really good culture of being able to ask questions of, there's like, no stupid questions, being able to ask why do we do it this way? Or what's the benefit of doing this way? And just having that because it's kind of scary asking, asking questions to people, if you think like, they're gonna get annoyed or think you're an idiot. So having that culture of asking why asking how is really important?

10
00:06:22,110 --> 00:07:56,340
Scott Tolinski: Yeah, I agree. And to go along with this, I have a note, as we've talked about this before in other episodes, but don't offer unsolicited advice. And in terms of like, asking questions and stuff like that. I think asking and asking for those kind of things is the important part, not telling other people, right? So asking, Why and how is great telling people why and how maybe not so great. In fact, you can ask for their consent to give that advice like, hey, later, I have some cool ways to do this. Do you want to check them out? And if they say, no screw off, or whatever, you can say, okay, but don't be like, no, but let me really show you. Because I think it's a it's important that everyone is on the same page, and everyone's receptive to getting the information that you want to be giving over that just like giving it willy nilly. So again, don't offer unsolicited advice, because you will, in fact, come off as a know it all, and instead of being helpful, and the last thing people want to work around is the person who every time they talk to them is going to be telling them how much their code sucks, or what they can be doing better. Again, having the the sort of the student mentality is a great thing. But just keep in mind that like you can't put yourself in someone else's shoes and just expect them to be receptive of what you're showing them at all given times can ask for maybe if they have some time for you to show them something if they are interested. If not, don't take it personally, don't push it on them. And don't be pushy. That said none of this advice necessarily applies during code reviews. If someone has some code being reviewed, you can give them advice about what's going on with their code. Because again, that isn't unsolicited. At that point. It's part of the process.

11
00:07:56,429 --> 00:08:53,460
Wes Bos: Next one I have is showing your mistake, I've talked about this before where it's important, whether you're teaching in person, or you are teaching on a video or you're just working on a project with someone, it's important to show people when you goof up, because I think having that vulnerability with them showing like oh, I always screwed this up. Or if you're trying to get a point across about Oh, one time I did a database query like this. And I didn't use an aggregation, I just use a for loop in JavaScript. And the query when it got really big, took 30 seconds to execute. And that was super unreliable. And one time it even crashed the server because I ran out of memory. And that's good because it offers some advice as to what to do in specific situations, as well as being able to show people that I've totally messed up lots of times, and it's fine to come to me with question, especially in a senior developer junior developer relationship, it's fine to come to me with maybe goof ups that you have, and we can figure out a solution to going through it.

12
00:08:53,780 --> 00:10:31,620
Scott Tolinski: Yeah, I think this is a big one too many times. I think that even just shows that you're a you're a human being you're a person, right, you're making mistakes, everyone's making mistakes, but it also gives everyone an opportunity to learn from your mistakes. I totally 100% agree with this showing your own mistakes is a big one and being you know, not too cool for anything. I don't think I've ever been too cool at any of my jobs. Like Like, I'm not too smart for any of this stuff. I'm always down to, to learn and grow from, from my mistakes. We all make, you know, mistakes. I think the next one is to be understanding of people's life situations and try to accommodate them accordingly. Not to say don't go into someone's business, if they're not inviting you into their business, right? You don't know what's going on. Obviously, don't be you know, try to know what's going on or don't whatever, but you don't know what people are going through outside of work. And maybe there's some things happening in their personal life or maybe even their work life. Maybe they just got a bad performance review or something and they're really upset. And what I mean by this is don't poke and prod here, just be empathetic and take your time and if you can see someone's having a hard time on that particular day. Do not give them any more shit get out, there can be other times for attentionally talking to somebody about any of their stuff. But when somebody is having a bad day, it's not going to do anything to help again. So just just be cognizant of people's days and how they're feeling and how they're acting and what they're sort of body language is giving you if they're, they're giving you the porcupine stay away, sort of, you know, position, then you're gonna want to stay away. I think that's a thing, just again, being empathetic to what what was happening in other people's lives will make you a more well liked person.

13
00:10:31,710 --> 00:11:29,820
Wes Bos: The thing if somebody is like that, though, I think it might be worth trying to find out like, why what's going on with them? Because I think a lot of times, there's stuff going on in your life, whether I know people go through like a divorce or problems in their family or a family member is ill or they're stressed out because of any number of things that's going on in your life. And sometimes that can always play itself out in your work. So I think it can be worth asking people at some point, Hey, what's going on? Do you need some help? If you need to take off a little bit early? Or is there any way that I can lighten your load at some point, because these are people you're going to know for probably four or five, six, sometimes you work with them for your entire career and being tuned in and empathetic to what's going on in their life. Because everyone's going to go through hard times in their life where they're just not their head isn't in their work entirely because of what's going on at that time. So just being able to be tuned into whatever else is going on in their life and how you can help in that specific situation.

14
00:11:29,850 --> 00:11:33,390
Scott Tolinski: Yeah, I think asking how you can help is always a decent strategy.

15
00:11:33,689 --> 00:12:40,590
Wes Bos: Yeah, I agree. Next one we have here is be okay with people taking up your time. This is one thing that I have all the time where I'm Mr. productivity, I love not being bugged. And I want to get as much done as possible. And sometimes that's to the detriment where people say like, so sorry to bug you. I know you're super busy. I know you've got a lot going on. I know you get 5000 emails, and sometimes like, oh, like, I don't want to be this, like, I'm so busy. I don't have time for anybody. Like I would love to be able to help everybody out when they need it need specific help and specific advice or need help working through a specific bug that they've been hammering on for for two weeks, or even just the people that are working with me on on my specific stuff. They're like, Ah, sorry to bug you like, it's so annoying. So I have this problem as well. With freelancing people will say, Oh, I know you're super busy. So I didn't even ask if this project was something you're interested in. And I'm like, oh, man, I would have totally took that project. So be aware of if you're putting up this don't bug me I'm so busy wall because you could be unknowingly driving people out or keeping them away.

16
00:12:40,770 --> 00:14:18,690
Scott Tolinski: Yeah, it's funny, because I think this is this is one of those things that people occasionally where it's like a badge of honor, I'm so busy that I can't do anything, I can't even do this or that. And it's not I'd prefer not to be busy. So like, I think you do want to be cognizant, if you are putting up that persona, that you are the busy person, you know, who hasn't doesn't have time for anything in the same regard. Don't be the person taking up everyone's time. Yeah, don't be that person that shows up at someone's desk and just starts telling a bunch of stories that are unrelated to work when you're not catching the vibes that that person is maybe in the zone and working because this is like or even in the same regard. Don't be the person that's scheduling a bunch of meetings, when no one else is if you are the person scheduling all of the meetings when maybe you need to, like look at, you know, what's the point of all of these meetings? And can they be expedited or changed or organized in a different manner. But again, just don't be that person who's making everyone else busy by taking up their time. I had this, I don't even know what to describe him because he wasn't even he was tangentially related to the project that we were on. And he would just come by three of our desks and just sort of stand their hands on his hips. And it was almost like the office space the way he talked when he was like, yeah, and he wasn't saying anything negative. And he wasn't being negative. But he just went on to tell these stories. Sometimes they were like, inappropriate. And he would just tell these long stories, and he would tell them so slowly. And I think all of us would just be like, get out of here, man. Like we don't want to do we don't want to listen to the city while we're trying to work. So don't be that guy. Don't do that. Yeah,

17
00:14:18,810 --> 00:15:24,240
Wes Bos: I was funny. I just listened to a podcast with Adam Grant who I don't really know who this is. I'm just looking it up. He has a book called give and take. And in the podcast, he was talking about how in our work environments we often have like givers and takers. And sometimes the people who are like people pleasers and want to give give give, they're often the worst performers in the entire team because they're often taken advantage of because they're those people that just want to give give give. And then on the flip side, you also have takers which are all about them and they just want to do everything and they were in people think oh, they're probably the top performers because they're all about getting what they need done. And it turned out that the the takers weren't the top Performance either where there was these people that found a really good balance of how can I be generous with my time and how can I help people, but also still get my own work done and still work towards the goals that I have there. So it's just kind of a nice little podcast I had on I was at the gym the other day, I thought that was a really interesting thing where there's givers and takers on both sides of the spectrum. And you don't want to be either of those in the workplace.

18
00:15:24,360 --> 00:16:49,770
Scott Tolinski: I think with a lot of things, you never want to be on any extreme end of any spectrum, right? You know, you always kind of want to find it, not necessarily always a spot in the middle. But you definitely don't want to find a spot on either end, because I think the ends are always a little too nuts a little too crazy. I think that what you had that as an R sub node, which is just be nice. Be nice. People. Yeah, it's something that goes overlooked. You just be nice to people, just don't be rude. Don't be a jerk. And try to be cognizant of whether or not you are or not being mean or rude. I have another note here, which is share things. Everyone likes stuff like this, like, you know, if you bring in tea, I'd be like, Hey, everyone, you know, feel free to try some of my new fancy tea that I brought in. And you know, people aren't into tea, no big deal. But you're making that be known that it's, you know, something that you can give people and people like to receive things I had somebody bring in a trace leches cake one time to work from a bakery in Detroit. And it was like the greatest thing I've ever had. And I always looked at that person favorably after that, even though I didn't know them. They weren't even my department. They're just like, Hey, guys, we got this trace late cheesecake. And I'm like, I'm all about that. Tres leches cake. Again, I'm bringing doughnuts, who cares, bring in something fun like that, and just say, Hey, I just figured I was picking up some breakfast for myself. So I might as well pick up a box of doughnuts for everybody go to town, I think that's just a fun thing that you can do, unless, of course, your company is for some reason mean and for bids, that kind of thing. But again, everyone's gonna like somebody that shares something with them.

19
00:16:49,830 --> 00:16:58,740
Wes Bos: Next one you have here, I'm gonna default to you on this one, which is respecting people's personal space, I've always worked remotely, so I don't have a whole lot of experience on this.

20
00:16:58,770 --> 00:18:02,300
Scott Tolinski: Yeah. And this even goes back to the story I told about the guy who's talking really too long, is that you need to respect people's personal space, both physically and like their desk, right, their desk is an extension of their personal space. And the last thing you wanted to be doing is the person that maybe sits on the edge of the desk and starts talking, like if somebody sits on my desk, I'm just gonna be like, come on, like, don't do that. Like because it feels like you're invading your you're invading your little sanctuary at work, again, is going to be people who maybe get a little too close while talking or something like that, again, invading personal space in general is not a great idea. And again, the extension of that being your desk, your workspace and stuff like that, don't go through somebody else's things, obviously, I feel like that shouldn't even need to be said, but don't like, you know, grab a pencil from somebody's desk without asking them say, Hey, can I borrow a pencil or something like that? I don't even know. But I feel like I shouldn't even have to say a lot of these things. But you've been in work culture is in people do this stuff. And they don't even think about it. So again, respect someone's personal space, whether that is in both their desk or their physical personal space,

21
00:18:02,460 --> 00:18:48,800
Wes Bos: I think something I thought about that, not necessarily personal space, but like time as well. I know that a lot of people like to work after hours and send emails really late at night. And I know some people get really stressed out when they see an email Come come through. And I think that's something that you the person needs to work on, like being okay with having emails come through, and just leaving them till the next morning. But if you know that, that will stress somebody out, and they know that it might ruin their night, it's 830, they just sat down, I'm trying to watch master chef, and then the email comes through, then they feel like they have to look at it to go through it. So I know a lot, a lot of email clients will have the ability to just send in the morning or send later at night. So if that's something that is possible, maybe just draft it and schedule it to send out a later time where it's not going to be stressing someone out.

22
00:18:48,930 --> 00:19:27,080
Scott Tolinski: Yeah, I had a startup partner once who is really loved to send me emails at like 10 o'clock, 10pm on a Sunday, about some bug that didn't even matter on a product that wasn't even live yet. But it needed to be fixed at 10pm on a Sunday, or else off with my head or something. And do you know, do you know what that was? Like the instant I was like, Nope, I'm done, you know, because like, there's no faster way to lose somebody than to start invading their time like that. And just because you are working on it at that particular time does not mean that everyone else is you should respect the normal business hours again, I like that one a lot. There's nothing that's going to harm you from just waiting to send that in the morning.

23
00:19:27,270 --> 00:20:16,230
Wes Bos: Yeah, being respectful of people's times is is really important because I've always I've had many clients in the past who it was back when blackberries were popular, and they would just send every thought that came through their head as a brand new email or anytime that we had a website and they would just like Send Feedback like just it would just kind of come in whenever and I had to be like look, you need to just put this all into a single email and send it at once because it's too much for me to have to collect all of your whims and thoughts that came in over the last two weeks. And you just to collect it all into one nice document. We can go through it together and totally understand it. So people that don't respect your time are they're not good. That's the best way I can put it. Yes, is that it's really important that you respect people's time and know that I know you're busy. But yeah, they're likely everybody's busy. Everyone's got lots of stuff going on.

24
00:20:16,410 --> 00:21:05,010
Scott Tolinski: Do you know all right, my favorite features of the latest Android operating system is the digital well being section of the operating system. Because you can set like a timer, a wind down and wind up timer. And if you have your like wind down timer starting at like, let's say 10pm or something like that, or 8pm at 8pm, you can have it do a bunch of stuff like turn your phone automatically to do not disturb mode and stuff like that. So I have my digital well being on so I don't get emails, I don't get notifications of any kind unless I really would like unless I'm expecting them because I'll turn off the Do Not Disturb. But I don't get that anytime. I don't even think about it because I set up digital wellbeing once when I first got my phone and now it turns off notifications until nine to five I you know nine to five comes up all my notifications come in. And that's when I take care of things.

25
00:21:05,040 --> 00:21:25,550
Wes Bos: Yeah, I have all of my notifications turned off all the time except for email. Yeah. And I get an email that I'm it doesn't stress me out that an email will come in because like I have someone processing that all for me. Yeah. When like, I don't have tweets. I don't have Instagram. I don't have desktop notifications on for anything is all just off. Yeah, I turned off all find it. It's great.

26
00:21:25,610 --> 00:21:44,730
Scott Tolinski: Yeah, turning off social media. Notifications. It seems like it like when you first do it. You're like, Oh, I don't know. But do it. Just do it. Do it yesterday, better yet. Delete the accounts. But like I when the moment I turned off all of my social media notifications, I started using social media so much less and it made my life better. So that's a sick tip.

27
00:21:44,970 --> 00:21:48,540
Wes Bos: Sick tip. All right, I think that's all the tips. I have anything else to add here?

28
00:21:48,570 --> 00:21:54,330
Scott Tolinski: No, I think everything sort of hovers around Be respectful, be nice. And you know, I think that's it really

29
00:21:54,540 --> 00:22:43,320
Wes Bos: awesome. Well, if you have any tips on like, maybe right now think about that one person who you you really like my wife, and I do this all the time, we have one friend who anytime we see him at a party, we leave the party and we're like, Don't you just love that guy? And we're like, we're trying to like, like, why do we love him? Why does everyone love him so much? And it's because we distilled into he asks the best questions about you? And he says, How was your trip to Buffalo or like, the best questions about what's going on with you. And then he remembers things from the last time you met. And we'll always make sure to follow up on that. And we made a point to ourselves to do that to other people now because of the way that he makes us feel. So if you have a co worker who you just love, try to like reverse engineer them and figure out why is it that you love them? And then tweet your tips that syntax FM?

30
00:22:43,470 --> 00:23:39,990
Scott Tolinski: Yeah, I think that's so key, that it's such an important thing. We do have friends like that, that every time you leave being run you're like, yeah, and so it just so nice. Yeah, they again, they just the thoughtfulness of you can tell they actually like care about you in some sort of way, rather than Yeah, you know, other people, or maybe just giving you like an interview style question list or something like that, you know, it's like they have the questions pre determined that they read off of How to Win Friends and Influence People. Or maybe they're just, you know, not paying attention at all, at the worst case, that spectrum. So I like that. I like that tip a lot. Most of us, we are good at reverse engineering, our engineering things based on this stuff. So you can use those skills in social aspects as well to figure people out. So super cool. I like that one a lot. I again, I think this is a good, good episode. Everyone needs to be a good employee, a good co worker to their fellow co workers. And again, your work output is just going to be that much better. Do you have anything else to add to this tasty treat?

31
00:23:40,110 --> 00:23:41,760
Wes Bos: I don't think so. Either.

32
00:23:41,880 --> 00:23:54,690
Scott Tolinski: Already. I'll see you next on Wednesday, where we have a sick potluck episode coming up or answer a lot of great questions for you. So stay tuned for that. On Wednesday, it's going to be out with the potluck. Thanks for watching and we'll see you the next slide.

33
00:23:54,810 --> 00:23:55,920
Wes Bos: Please, please

34
00:23:57,930 --> 00:24:07,710
Scott Tolinski: head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

