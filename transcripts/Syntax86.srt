1
00:00:01,319 --> 00:00:02,820
Announcer: You're listening to syntax,

2
00:00:02,820 --> 00:00:10,530
Unknown: the podcast with the tastiest web development treats out there. strap yourself in and get ready to live ski and West boss.

3
00:00:10,530 --> 00:03:54,449
Wes Bos: Welcome to syntax. How's everybody doing today? Hopefully you're doing well. This is a potluck episode of syntax where we answer your questions, I'm super excited to be getting into it. Today, we are sponsored by two awesome company. First one is Sentry, it's going to track all of your errors and exceptions. And second one is dot tech domain names, which is you're finally gonna be able to get a decent domain name without them all being taken. So with me, as always, is Scott Tolinksi. How you doing today, Scott? Hey, I'm doing good. I, for anyone who's been following me on Twitter, you've seen that I've been doing without my computer now for like, I don't know, six, seven business days. So therefore, like nine normal days, which for someone who's addicted to their computer and doing this stuff is very tough. Trying to run a business yet. Yeah, kind of run a business, right. And so I've been like dying, because I've really had to start recording my next tutorial series for this month. And I've just been sitting here being like, apple, when are you going to fix this and it like turns out that what happened was, I don't know they sent my keep my computer to be in a double key press, like i'd press the E key. And every single time I press the E key, two E's would pop out, which you can imagine is extremely frustrating. So I would use just an external keyboard. And then eventually it was like, You know what, I got to get this fixed at some time. Let's get this fixed right now before heading to a couple conferences and stuff like that. I don't want to have any pain with this computer while I'm there. Well, and it just no updates from Apple. And it was just taking forever. And I had to call and get through like two layers of support people before I even found out the status. And what happened was, apparently they broke my screen during every pair. Oh, they had to like wait extra days to get a new screen and then fix that. And nobody told me Nobody told me any of this. So I'm happy to have it back. I'm just excited. But now I'm like under the gun here to start recording for my next series. Yeah. Which I'll be doing lots of today. And you lost all your stickers when they did that. Oh, yeah, this thing is pristine. Yeah, it is absolutely clean. When they told me they broke the screen. That was the first thing I thought of, I have this like, I have this really great sticker from my friend, Jeff Marcel. It turns out I know, to sticker mogul. So I'm in good hands. But Jeff, Jeff got really popular for making this dirt right baseball cat's sticker. And Detroit is hilarious. And I've always had a Detroit baseball cats as sort of a plan the Detroit Tigers. And I've had this sticker on my computer. And I was so bummed because it was my last one. So I first thing I did is I messaged Jeff, and I said, Jeff, please tell me you have more stickers. And he's like, I got you. I got a box of those come in. And I'm pretty psyched about it. That's what I did. I launched my course Finally, I'm so excited. My advanced react course is finally up. Advanced react.com It was a long time coming this course I had worked on for I was looking back at the commits. many moons met like over a year and there was like big gaps in that because I had to like stop the shelf the whole thing a couple times while the Yeah, like the initial thing was built on like graph cool. And Apollo one. I think every single tech that I had initially started with had like totally rolled over into something totally different. Yeah, shifting shifting ground there. Yeah, I'm super excited. Thank you so much to everyone who was patient with it. And thank you so much everyone who actually bought the course the response has been amazing. It's sold a ton of copies so far. And I'm super excited. Oh, and whenever I one thing I realized is we never give out coupon codes to to the podcast, which is kind of, I feel like we're leaving something on the table there. So I'm gonna start throwing out a coupon code syntax for an extra 10 bucks off if you want to grab it yet. Yeah, yeah. Hey, I'm gonna do that to go for it

4
00:03:54,690 --> 00:04:02,819
Unknown: was gonna be x. I'll just do 10% 10% off with the syntax coupon. I'm gonna add it right now. Good off of the AppStore

5
00:04:04,500 --> 00:04:33,140
Wes Bos: Alright, let's let's jump into the potlucks. If you've never listened to a potluck before, this is where we answer your questions. They can revolve anything around .TECH, JavaScript web development, barbecue tips, breakdancing, or soft skills. So if you have your own question, make sure you go to syntax.fm on the top right hand corner, there's a button that says ask a potluck question. Go ahead and fill it in there. Also, if you just have like suggestions for shows, someone just submitted a huge question with like the entire, like most nicely formatted

6
00:04:33,179 --> 00:04:35,370
Unknown: question I've ever seen. It's so good. Yeah,

7
00:04:35,390 --> 00:04:51,720
Wes Bos: it's like, uh, can you please do a show on CSS positioning and sizing? And then they broke down the entire question into like, thank you. We're just gonna take your entire outline into a show. Yeah, thank you.

8
00:04:51,720 --> 00:04:55,620
Unknown: It's a hard way to get your topic into a show is if you make an outline for

9
00:04:56,610 --> 00:08:18,000
Wes Bos: the entire thing. Also, if you could just record the podcast for us as well. Push it out, put the sponsors on it push it out. Our first question is from Eddie, you think question is how can you help a designer understand how styling works? And how layout works on the web? what's possible, what's not possible, why something may take longer than something else? Why animations by Embree credibly hard to make responsive and perform well, etc? In other words, how do I explain my boundaries as a front end dev to a designer? I think this is a really good question. Because I think a couple years ago, I think design is changing how we do it right now. And there's still a lot of people who are still building it the way this might be efficient way for you. So it's not necessarily wrong, but you design the entire thing. And then you finish it up, and then you give it off to a front end developer, and then they try to implement that thing. And when I worked this way, I was always like, the designer was a bit of the enemy, because it always be like, Oh, the designer, like doesn't know what's possible. And they're doing all these crazy things. And there's no way we can possibly make that layout work, especially if you're trying to go responsive or, or they give you like a mobile layout. And the layout is like totally different than then your, your, your main layout, and you're like, that's not how responsive works. It's the same markup. And we can kind of do a little bit of reordering with Flexbox, or grid, but it doesn't work that well. But I don't necessarily think that's the case anymore. Because I think like it's the job of the designer to take the information that needs to be to be presented, the problem that they're trying to solve, like, a designer's job is to communicate to the user that that's trying to use the interface in the most effective way. Right? That's, that's their job. And issue, obviously supposed to keep it on brand and make it appealing and make it easy to navigate about and all that stuff like that, well, that's their job. And it's your job as the front end developer to, to actually implement this thing, right, it's your job to figure out how to actually input that said, there is still many use cases where you get something from a designer and you go, like, there's no way that we can implement this. Or if we were to implement this, it would cause the page load to be 10. Meg's and it would be super laggy. And it's just not going to make for a good experience. And at the end of the day, that comes back on the designer, because they're trying to make a good experience. Right. So some tips here, I think working closely with the designer is super important. I know that a lot of companies I think Shopify does this for they have these pods, where you just sit at the same desk, as I think he like a project manager, a couple developers a designer or two. And they're all working on the same project. And just being close with the designer allows you to sort of have this back and forth like, Hey, is it is it possible to do this thing? Or, hey, you see how I'm trying to transform this little color outside of the bounding box? Is that going to have any implications there. But I think at the end of the day, allowing the designer to do their thing, they should know what's possible here and there. I think it's it's really pushed myself as a developer, just getting stuff from a designer that has no clue because it really pushes you pushes you past your limits, and you have to figure out okay, how will I implement this thing? And, and how do I make sure that it is performant and etc, I think also CSS Grid Flexbox, custom fonts, transforms, a lot of that has gone away. A lot of stuff is now possible in the browser, but let them push you a little bit. I think what what do you think about that, Scott? Yeah,

10
00:08:18,000 --> 00:13:19,169
I have pretty much notes on basically everything you just said, like total agreement. I mean, I would say that it is right now in terms of like what we're able to do on the web, but we have the most flexibility and freedom to create layouts and animations and stuff like that than we've ever had before. So I think even right now more things are possible than have ever been possible before. But that said, like, I like to think of it as opportunities for things like pair programming, where you can work with a designer, I think one of my most positive experiences in this regard was when I worked at Ford, and I sat down with one of the designers. And we seriously, we talked easing curves, and transition durations for you, maybe 30 to 40 minutes or so. And it wasn't that much of my day. And we basically sat through. And this is before any of the design apps had animation stuff built in. So we couldn't just try it in a design app to see prototyping animations. So what I was doing is I was sitting there coding quickly, and he would say, Okay, let's see this now at point four seconds. All right, we both look at it, we evaluate it. Okay, let's see this at point, point three. All right, now let's see this with this kind of easing curve. And the designer and I sat down and we worked it out together. It was like a combination of technical skills, designers skills, and we both had our eye on it. And we both discussed the merits of it. I think these kind of things don't happen enough in our industry, and too often were grouped into the designers and the developers, when really there's so much blur between the two that I think the more you can eliminate those the sort of gaps between the two, the better off your products going to be just finding like a joint solution, right. Also, like you said about boundaries, right. Don't be afraid to have your boundaries pushed, I think some of the most difficult, exciting and Just all around technical challenges I've ever had, where because a designer did something that I would never have done, because I would have known it was a bad idea. And then they've already shown it to the client. And here I have to develop up this quote unquote bad idea. But it's not a bad idea. I was just lazy, right? So then, so designer comes here, and it says, This is how we have to do it. And now because the clients approved it, that's how we have to do it. And then I have to figure out how to use my skills to the best of their abilities, and really grow as a developer to make it happen. So I think that is there's opportunities to grow as a developer through, you know, difficult designs. But I also think there's tremendous opportunities for learning experiences. Yeah, so take an opportunity to also do something like a brown bag lunch, and maybe do a mini presentation or put something on the TV, a YouTube video or something that is about responsive design, if you feel like your designers aren't getting it, but take opportunities to educate your team. Don't just build grudges, because XY and Z doesn't know how to do a responsive design correctly, or they're not using proper techniques and make sure that you're you're teaching and you're growing, because that's how the agency overall gets better. I think the last little tip that I have is show them things that are potentially taxing. So try to implement something that that they're asking for, and then show them Oh, this is slow because of this, like one good example is my advanced react course, I just launched it. And like I always go to town on drop shadows and border radius and transforms and stuff like that. And if you go to my advanced react course, you'll see that I have this like this one div that's, that's tilted. And then it also has a drop shadow on it. And it also has a background pattern. And I had used that exact same layout on on my node course. And it had worked fine. But for some reason, when I swapped out the background pattern with this new background pattern that I was using on my advanced react course, only on the latest Safari it chugged It was like, you could hardly scroll through this thing without it being like. And the auditory representation of a janky site right there. I couldn't figure it out. Like I knew that it was happening. I had a couple of people being like, Man, that West this thing is chugging on safari, what's going on and I opened it up and I had Jonathan snook dming me, he was like godfather of CSS knows everything I was like, like, we narrowed it down to being the background pattern. If I took the background pattern off, it worked fine. Or if I took the rotation off and kept the background pattern a worked fine. But the combination of those two, I switched the SVG background to a PNG background. And that didn't do it. And then I just I swapped it out with another SVG background, just a different pattern altogether, which was less complex and went back to scrolling fine, but such a weird little edge case that I should have caught it because I did test it in Safari. But for some reason, I didn't catch it. And I opened it up again in the latest Safari and I was like, Oh, this is this is brutal. Like almost on you. And it's only those two spots. But like I only tell you that because like that's a good example of urine think oh man, Wes once had an issue with with scrolling performance. It was because he was trying to flex a little too hard on the rotations of background patterns. And maybe that's something that is a little bit pushing it too far. Krishna too hard with that flex and I understand.

11
00:13:20,429 --> 00:13:21,870
Unknown: Okay. All right.

12
00:13:21,870 --> 00:13:28,710
So this next question is from Ashkan. And this question is, hi, how do you manage your time for learning new things when

13
00:13:28,710 --> 00:18:05,640
Wes Bos: you already have children, I also have a daily eight hour job. I've recently changed country for a better life. But my new job is quite boring, very old stack tech spaghetti code all over the place. I don't really learn anything new. Therefore, I feel like I'm lagging behind the industry. I want to learn everything. But it's really hard to find some time with my boring job. When I have children at home. I put my learning times for when my kids go to sleep. But this has proven to be not efficient, because I usually end up falling asleep watching a tutorial on my phone or trying to code on my laptop. Yeah, this is this is very relatable. I mean, though, because then I both have kids. So yeah, this is home. And it is when especially when you know when when Landon goes to bed like last thing I want to do is bust out my laptop at this point before I had kids and it was like seven o'clock. I was like yeah, let's go. Yeah. And then now I'm just like, I'm exhausted. Like, I just want to watch master chef. Yeah, yeah, I want to watch master chef. Right. Exactly. Yeah. And so just something to get your your mind away from it. So how do you keep up I talked about this in one of my my learning talks. I think it's important to to find ways to to learn on the job and get paid for learning because in this industry, we all know that our skills need to be constantly being honed to use a little bit of knife language I learned from Wes, you get a hone right. Oh, there you go. You got to hone and sharpen those skills. Yeah, honing and sharpening are not the same thing. But Yes, correct. You got i was i was Yeah. Do you know that? Yes. I was going there. Yeah. Okay. So and So what I mean by that is really you want to figure out a way way that you can be both beneficial to you and your organization, and a way that makes it so you're still productive at work. And I know some people will think that this can't be done. But really how many things in your day Have you like been slow on or maybe could have done a little bit more efficiently, or maybe just maybe an hour or two here or there or work where you're just goofing off or something like that you're not 100% on point. I know, people tell me they can't take any time when they're at work. But I really don't believe that everyone is 100% on point all the time at work, I honestly just don't believe it like, so you can have time while you're getting paid. And if you can convince your boss that it's worthwhile for you to be learning, that's great. That's the best possible thing. Maybe you're doing a project internally or something like that. If you can convince your boss to do it, that's awesome. If you can't convince your boss to do it, I would suggest this might be a little bit iffy territory. But I would suggest, you know, like James Bond going rogue a little bit and get your stuff done, get it done quickly. And then any extra time, take that time to learn at work. Even if it's not approved. Don't get fired, don't come at me if you do get fired. You know, I think it's important because that's always how I learned, especially when I had a nine to five is I would either convince my boss that I needed time for learning. Or I would make damn sure that I got all of my stuff done. So that if I did take that time to learn each week, they came in me I could say, Listen, I got my stuff done, I'm bettering my skills, it's getting better this organization, how can you complain about that? I'm very much of the same thought process, like First of all, props to doing family first, because it's really tough when like, you obviously have a family, which you want to give your time to. But you also have like goals and you need, you want to move forward with your career and you want to enjoy exactly what you're doing. And it's, it's really soul sucking when what you do for eight hours a day is something you don't enjoy, it can really like spill out into other areas of your life. And then that's not good for anyone. So a couple tips I have here. First of all, I think your spaghetti stack that you're working on is a huge opportunity, you just need to be able to convince whoever is at stake that is worth spending some time on it. So you can tell them, hey, like we're gonna be in big trouble, this is really going to drag us down. And if a competitor is going to come out with a more modern stack, which allows them to move much more quickly and allows them to build better experiences, you're going to be in in big trouble. Like I think of something like libsyn. Right now, where we host our podcast is rudl. It's too late, I'm sorry, the brutal, brutal, brutal, the worst experience I've ever had to use libsyn. And right now there's all kinds of startups popping up with better analytics, better interfaces, better applications, better prices, all of that stuff. And almost anyone that's starting a new podcast isn't going with Lipson. Right now we're kicking ourselves for going with Lipson because the interface with all these other ones are much better, right. So if you tell your boss, hey, we're gonna be in big trouble, we have this big spaghetti stack, we need to start chipping away and modernizing this codebase and building into something that is going to allow us to move much more. So you need to you do have to like be able to explain it to your boss, like, Look, I actually care about this company, and I want to work on it.

14
00:18:05,670 --> 00:19:40,200
I think that's the angle that Yeah, I want this this company, I want my skills to be better. I want our tech stack to be better. And like I get people have requirements, they need to meet in constant features and improvements and stuff like that. But yeah, I mean, you're dead on with that opportunity in there's like a lot of even like small opportunities to improve things that aren't going to affect the codebase in any sort of like crazy way that you can do to improve things and grow your skills a little bit I think that's dead on my other tip here is like talk to your your significant other because like if your goal is to get better to get a better job to move forward in life, because the reason why you're likely doing this is because you want your family to have a good life, right? It sounds like you just changed countries to have a better life and you want to be able to provide for your family. So if that's the case, it's worth having a talk with your significant other and saying, like, look like one to two times a week, whether you wake up early, whether like one thing my wife and I are discussing right now just to get a little bit more time to go to the gym is we're gonna trade off nights putting the kids to bed so that we each will have a couple nights free every night to do whatever we want. Go to the gym, work on side projects, just like do a puzzle, it doesn't matter what it is. It's just that like you need to like have like that talk with you. So you know other and say like, I'm doing this for for the family, and we need to be able to move forward. So there's like some sacrifice, there's something always has to give when you don't have enough time for something. And I think there's some creative ways you can go around that which at the end of the day is going to make it better for everyone. It might be short term pain, but as they say long term gain

15
00:19:40,260 --> 00:19:43,200
Unknown: nice nice little slogan at the end there. Yeah, cap it off.

16
00:19:44,330 --> 00:20:04,310
Wes Bos: Next one we have is how do you deal with burnout in this constantly evolving front end tech ecosystem. So we have a couple episodes already on we have one Keeping Up With The Kardashians let me get this the episode number for that. That's got me that up by the way which Almost next because I thought that was dumb. And that's me giggling

17
00:20:06,690 --> 00:20:08,330
Unknown: about it. Yeah, I know.

18
00:20:08,360 --> 00:21:59,670
Wes Bos: Let me find the number keeping. Episode 35 is keeping up the Kardashians dealing with her fast paced industry. And then we also have a episode on burnout, preventing and dealing with burnout as Episode 41. So if you want to go back and listen to those two episodes that has some good but Scott and me are gonna lay down some quick tips, what do you got quick tip on hobbies away from your computer. Because when you're on your computer, really easy to want to work on stuff. And it's really easy to want to learn stuff if you're excited by this industry. So I like to find things away from my computer. And if you're like a video game fan or something like that, and Nintendo Switch or something will pull you away from it, even though it's like screen time to like pulls you away from your actual computer. I personally like a little bit more of like an athletic in a physical way of doing things. So I go to a breakdancing practice twice a week or I go to the gym three times a week, I find hobbies and I find things to do that aren't in front of my computer that aren't coding, and that exert like physical energy. And that's how I avoid burnout. I take that time to rest and stuff like that to recharge via stuff I like totally, I think another good point other than having other hobbies is that's really important, being able to totally disconnect from it. Because when you feel like things are moving too quickly, your first thing is like I just must spend more time on this. But that's probably the worst thing to do just because of the burnout that inevitably creeps in and, and causes you to start to hate this thing. So also fun projects that you have. So like it is constantly evolving in the answer isn't just to stick your head in the sand. But if you can pick up a fun project, you can do a little side project I've talked on all the time. I'm like little problems I've had in my life, whether it's trying to buy stuff on Kijiji or Craigslist or trying to make my own, just solve my own problems, pick up a project like that, and you'll be able to have a little bit more fun with it. Other than that, check out those two other episodes. Lots of good stuff in there.

19
00:21:59,759 --> 00:22:00,540
Unknown: Yeah, yeah, I

20
00:22:00,540 --> 00:24:10,650
Wes Bos: know. It's like Actually, it's like super easy to get like burnt out if you're like constantly like thinking about all of your projects. Yeah, and especially if you like maintain like a long term project or something like that. Maybe you're just like your heads in the clouds about potential bugs or stuff like that. And that's why one of our sponsors today is just so so incredibly useful. Because century allows you to have all of your bugs, all of your errors, logged, categorized and just kept in one central spot. So you don't have to fret over these things, when you shouldn't be thinking about them right? century's got your back in that regard, they're going to capture all of your errors and exceptions, and let you solve them. When you have the time and ability to solve them. Big fan of century myself, I use it on my own course platform whenever anything goes awry. First thing I do is jump into century. One thing I've also been doing recently now that my courses out one of my next goals is to go and tackle some of these commonly thrown errors and figure out why they're happening. Sometimes errors show up and they're nothing right. Sometimes they happen from Chrome extensions and stuff like that. And you'd be able to filter those out, you can mute them, because they're not important. But the other one, sometimes I get errors that are coming in, and they're just little bugs that people hit on the back end, whether they're on an older browser, or whether they're actually hitting a real issue. And you can go through those you can assign them to different people on your team, they'd be able to do it, you can you can smartly assign them which means that like if somebody introduced some code, and then that code started via get if that code started to go awry, then it could automatically like wind it back to the person that introduced the code, which is super, super cool. If you write your code in ESX modules, or you use something like TypeScript, you'll be able to open up source maps and see actually where is authored it's just amazing for being able to figure out what went wrong. So check it out@sentry.io sC n, try and use the coupon code tasty treat, that's going to get you the first two months free. And the nice thing about that coupon code is that if you already a century user, you can still use that coupon code so it's not just for new signups which is great. I love when companies do that. Check it out. sentry.io Thanks so much to Sentry for sponsoring.

21
00:24:10,710 --> 00:24:14,670
Unknown: Nice Oh, some good spelling. I was like some very, very easy and

22
00:24:14,910 --> 00:24:23,400
Wes Bos: try. You don't want to know how to spell tasty treat to ta s t yt. r e a t no spaces now. Wow. I mean, I

23
00:24:23,400 --> 00:24:26,850
Unknown: say like I'm jaws agape here. I'm definitely blown away by that.

24
00:24:26,880 --> 00:24:30,300
Wes Bos: I'll spell anything you want to submit it via the potluck button. I'll spell it for you.

25
00:24:30,510 --> 00:24:33,120
Unknown: I will not sell anything. I will not do that.

26
00:24:34,740 --> 00:24:41,430
Wes Bos: We were joking in my chat room the other day that my my tombstone is going to have a typo on it. Dude, Yeah,

27
00:24:41,730 --> 00:24:47,340
Unknown: dude, everything. Everything I do has a typo on it. So rest in peace in PE

28
00:24:47,340 --> 00:24:49,200
Wes Bos: I see he

29
00:24:49,590 --> 00:24:56,520
Unknown: Oh boy. I thought you were being serious for like one second then I was just like, oh, he's doing a joke.

30
00:24:59,220 --> 00:27:31,800
Wes Bos: Next question is Also from Gerard de Goss, who did the previous question or Degas, whatever, choose your pronunciation? And this question is, do you code at night past at 9pm? I find that if I do, I have trouble putting my mind to rest. And I also don't sleep very well, in general. Yeah, this is a very real one, I mean, that there's actually like, a name for this, when you like, shoot, there's like a, somebody is gonna know the name of what this is called, there's like an actual thing for when you're like concentrating on one thing, before bed so much that when you even do fall asleep, you're like dreaming about it, and you're like, can't get it off your mind. And it's like consuming your brain, it's like definitely a very real thing. And for the most part, I think the best solution to this is set your wind down time earlier. That's, that's it. And if you want to get extra work done, that's not nine to five, then wake up earlier and do it, then go to sleep earlier, quit your work earlier, if you can. And then and then do it that way. In fact, like, I found mostly that sometimes, like, I used to have a lot of problems when I was trying to solve a problem before bed, and I would just think, five more minutes, and I'm going to fix this bug. All right, 10 more minutes, I'm gonna fix this bug. 20 more minutes, I'm gonna fix this bug, I swear to God, I'm gonna go to bed after I fixed this bug, just one second. And then it'd be like, you know, midnight, one o'clock in the bugs, not fixed, and I didn't get anywhere. And then I had a bad time sleeping. And then I had a bad time trying to work on it the next day, right. So what I should have done is at seven o'clock, I should have just stopped and said, You know what, I'm going to just take a break for now and just quit right and go to sleep. Because what happens is, you don't realize this, but your brain is actually working to solve these problems while you're sleeping. And while you're away from it, it's part of the reason why we tell people to go on a walk, if they're having trouble figuring out something, just take a little brief walk, because your brain is going to be working on these problems without you having to sit in front of your computer and try a whole bunch of stuff. And most likely, sometimes you need that time away for this thing to be solved. So I would put it on hold, find something else to occupy your mind with and relax, wine down, go to bed, and then try it again. First thing in the morning. And chances are you'll spend less time getting this thing working than you would have if we would have stayed up all night trying to get it working. Yeah, I think Another good tip is make sure that you mix your uppers and downers appropriately. So if you haven't read three beers the night before four coffees in the morning, whatever, we're joking. No,

31
00:27:31,800 --> 00:27:33,180
Unknown: I don't do that.

32
00:27:33,210 --> 00:32:24,960
Wes Bos: Yeah, the same, right? Don't do that I have the same problem. I can't code at night. Like last week, when I was trying to launch my course, I was whipping out the laptop after I put the kids to bed and that I was just jacked all night, because I was just like all excited about and I couldn't stop thinking about solving different problems and what I had to do. And one little tip if you do have to work late because sometimes you do have to work late. And sometimes you want to like get this extra coating in because you're trying to learn something. But my tip is to just get it out of your head. And we've talked about this on our getting things done episode where have like a to do list. And if something is bugging you, if there's a problem, make sure you document all of that in your to do list out of your head out of your mind. And I find that helps you sleep a little bit better, because then you're hopefully stop thinking about it. But then again, I still sometimes even when I do that, I still can't do it. So I just try not to code late at night, I often like to switch over to something like a podcast or an audiobook because I still want to use that time for something productive. If I'm listening to say this podcast or an audiobook or something like that, it's well worth it. Otherwise, just just something mindless, like watching master chef is as I like to do as well. Yeah, it was funny, because last night, Courtney and I were just talking about everything we had to do for the week. And she was just like, I'm just so my brain is filled with like everything I have to do for the week. And she's like, Well, you know, like, what do you have to do? And I was like, You know what, honestly, there's too many things on my list that I have to do this week for it to be in my brain and comfortably. So I have expelled all of them to my to do list. Because otherwise I'm not getting to sleep. So if you have something like that, like it's so I think in my opinion, such good advice is to get it out of your brain onto a to do list, because that sort of marks it off is like done kind of it's like a check. Like, hey, I'd kind of did this, this thing's not done, but at least it's accounted for. And if everything's accounted for, then you don't have all this minutia floating around in your brain. So I think that's a definitely an important point to emphasize. Next question is from Shahid Khan. It's just how do you compress your video and audio for your courses and tutorials? I think this is a great question. I totally haven't figured this out because when you export from ScreenFlow by default, it tries to give you 3000 kilobits a second, and which is like three megabits, something like that. And Vimeo tells you to do it at like somewhere between like 15 and 20. So whenever I export the default from ScreenFlow, it looks like garbage, especially like when you have your code editor up, it tries to aggressively compress it because it's very such as such simple colors. That's why like I always tell people about like video compression. Like when I was downloading family guy back in the day, Family Guy episodes are always really small because they're very simple colors. And they're like, yeah, like like 103. Meg's for episode, whereas a good episode of Seinfeld was much bigger because it wasn't simple colors. But whenever I would compress it like that the it would look, I would get a lot of artifacts on it, and the the text wouldn't be nice and crisp. So what I do now is I export it at extremely high bit rate, and I export it at 1080 P, I recorded that double that if you go back to our episode on courses, I talk a little bit more about that. And then what I do is I just throw it into Vimeo and let Vimeo figure it out. Because they do millions and millions of videos. They're really good at compressing video. And they will also compress it for different speeds, meaning that if you're using the Vimeo player, which I've since moved to, it'll go up and down depending on your connection speed. So that's how I do that. And then for the downloads, some people like to watch my stuff offline, I use handbrake and choose the fast 1080 p setting that will go ahead, but I still haven't I'm still not super happy with it. Because Because exporting them at such a high bit rate, it takes forever to export. And anytime I need to re export a video it takes like I don't know, maybe like 20 minutes, 25 minutes per video. That's like 20 minutes long. So I haven't figured it out yet. Yeah, I have it down to a little bit of a science that I largely like to use the software to do all the hard part for me. So for one, I don't use ScreenFlow. So I use a real video editor. Okay, so I'm currently using DaVinci Resolve I've been using Final Cut with compressor though. In both instances, I'm always using presets, like whatever the presets are DaVinci. Resolve has some of the best presets way even better than I found on other platforms where I can say, Hey, give me the 4k YouTube preset. And it does that. And you know what I honestly I like the 4k YouTube preset for video downloads as well. So I'll watch it there at the 4k YouTube preset. I'll upload it to YouTube. And if I want a 1080 version for download sales, I'll actually rip it from YouTube and get the mp4 that YouTube is already compressed for me because like you said, they have compression down to a science and it looks and sounds good. So that's what I end up doing is I let the platforms who have it figured out do it for me. Yeah, I get basically the highest 10 ATP version that YouTube has to offer. And I use any of my presets with them I compressor. That's pretty much it though, for me.

33
00:32:25,080 --> 00:37:12,330
Good. I need to check out this Da Vinci editing software, I'm so fast and comfortable in ScreenFlow. I have a couple little gripes in there that have since been fixed in the latest version of ScreenFlow. But this Da Vinci looks really really nice, I think you'll be able to just be me up to Da Vinci is free to to use, it's really sick. But I mean, again, it is like a like conventional editing software. So if you are used to something like ScreenFlow, there is going to be a huge learning curve concerning like what this thing is capable of. There's just a lot of bells and whistles, and there's a lot different maybe have a workflow that something like ScreenFlow that's always the million dollar question is do I spend time relearning a new piece of software? Or do I just keep trucking along at my extremely fast pace right now? Yeah, right. Cool. Okay, let's get into the next one. from Michael. And it says, it seems like the web dev community a lot of people give WordPress crap. Any idea? Why is it just because people feel like it makes the web dev to simple Thanks for everything you do with the development community. I you know, I think it's not necessarily like a new trend or something. But like, I think WordPress is great. The reason why people might be Pooh poohing at any given point now is because what you have, like new page reloads for every single page, you're loading instead of like a front end JavaScript framework that's not doing any sort of additional page loads. But then again, you could always do headless WordPress, we still get the WordPress back end, you can do the front end and something like Gatsby or next. WordPress itself is dope. Okay, so don't let anyone tell you otherwise WordPress is evolved. And it's continuing to grow. And it's a really great platform. I mean, otherwise, the most of the web wouldn't be powered by it. I like to think it's like I said, it's not a new trend, but it's like almost like a sports team situation. There's like a hilarious comic where one guy has a flag, and it's just like TMA. And another guy has a flag that says Team B. And then the third panel is the guy saying, Wow, that guy just like you already, like, you just hate this person because of their association with something without actually like, just because it's like a my team's better than your team kind of thing. And for the large part, I think this industry needs to cut that out. That's one of my least favorite things on Reddit is when you see like a post that's like react versus view and then everyone's just like, React better. No views better, like who cares, man? Yeah, like, it's not your sports team. It's a tech stack. Like Yeah, I always wondered this as well. And I think I've narrowed it down to a lot of people. The first thing that they had ever learned in web development was learning to build a WordPress theme and also, you Usually what they do is they take some huge massive theme that does everything under the sun, and then they crack it open to try to change it to make it look what they want to do. Someone else has written all the code and their style. And that leads to both being a new developer and trying to work on someone else's code leads to a lot of frustration. And it usually leaves a bad taste in people's mouths. And they look back on it and say, Oh, I hate WordPress, because that was a very like dark time in their career when they're really frustrated and trying to learn to code. And the reality is that it's just you probably weren't a good developer when you were first trying to trying to pick that up. Other things about that is that you can do a lot of bad stuff in WordPress, I think that it by its very nature of how easy it is to get up and running. You do see people just slinging stuff together as a lot of people just like kind of putting a whole bunch of plugins together. And that can go awry, that can cause it to be extremely slow. Often WordPress is hosted on like oversubscribed, for $1, a month hosting platform that just can't handle the load of all of this kind of stuff. It can be really slow like that, it generally because WordPress has such a low entry, it usually attracts a lot of people who are just stringing stuff together, which is there's nothing wrong with that I first learned I think a lot of people listening first got their start with WordPress and men might still be in it. And I think people are a little bit proud to be like, Oh, I'm a much better developer than that. I don't I don't want to work in that sort of kiddie pool of web development. So none of that stuff is true. I absolutely love WordPress, I think that it's it's an amazing thing that you can get up and running in it. Do you need to use it? No, I anytime I hear somebody bashing any tech platform, I see right through that. And I see insecurity of zero skills and things like that. So if you don't like it, don't use it. But I do know that there are I've talked to a lot of people that run huge like, like 10 up as a good example. So it 10 up is this massive web development. I think they're an agency, they work for huge companies. And all they do is WordPress, and they build some of the best WordPress stuff out there. So it can be done really, really well. If you have competent PHP developers and in good systems on how to approach this kind of thing. Yeah,

34
00:37:12,360 --> 00:40:25,560
yeah. And I mean, like, if you want to work on a WordPress site or otherwise, and a great place to host your thing, if you're looking for a domain, it would be a dot tech domain, which we talked about is there's just a lot of availability and dot tech domains that is just totally blowing your mind for what kind of actual domains you can you can get with one of these Tech's Yeah, so you know, remember, when did.io start to become popular, it was like, maybe six or seven years ago, yeah, we thought you'd spend so much money on.io or something I you know, it used to be 100 bucks. And I remember I bought west.io. And I still have it, I use it as my URL shortener. And I was so happy to have have grabbed that because like, I have friends who've sold di o domain names for many, many thousands of dollars. And it's almost impossible to grab a domain name anymore. So dot tech is coming out swinging and trying to be the the next sort of place that people in technology go for grabbing a domain name. So if you're looking for a domain name for your startup, for your side project for something, I suggest you check out dot tech because the availability of maybe your first name, last name .TECH is likely going to be available. Fortunately, somebody already grabbed West tech, the quality of domain name is going to be good. You don't have to have any funny spelling or anything like that. And then the relevance is going to tell people that you are a technology company. So there's a whole bunch of startups that already have grabbed tech domain names that have some funding, it seems to be kind of cool that it's in the startup space dot tech domain names are starting to become really popular Avaya comm has a whole bunch of open source. And they have Viacom dot tech, I always like this when a company has a bunch of open source. And instead of having their like regular.com, forward slash open source, they just have a separate domain name for it. So via count dot tech, the consumer technology association is a technology trade association representing 290 $2 billion with a consumer debt technology at CTA dot tech, the CES every year, that huge trade show that CES tech, Intel has insight dot tech, I think it's pretty interesting that you can grab these really short memorable dot tech domain names. And I'd be really interested to see if this is the next.io that's bringing us one really kind of interesting thing we talked about .TECH dot IO domain is being really expensive dot tech domain. For syntax listeners, you get 90% off both one and five year registration. So if you want to go to get dot .TECH, which I guess they got the best domain name for their signup process, get dot .TECH. You get one year for 499 or five years for 2499 which is which is incredible. So might as well just sign up for five years and get 25 bucks go to go dot tak if this is our This is the syntax tracking link to show them that the sponsorship is working. So make sure you go to go dot tech forward slash syntax and use the code syntax to get those sweet deals. Thanks so much to tech for sponsoring. If you sign up for a dot tech domain name yourself make sure you tweet us at syntax FM, we'd love to see what you're working on with your your dot tech domain names sick so yeah, thank you. Thank

35
00:40:25,560 --> 00:40:36,720
Unknown: you dad tech. Really, really cool. Next one, let's get into it is from Mark Bosque Berg. I hope that's correct. This has a j in the middle of it. He's from Denmark, I'm sorry, Mark.

36
00:40:36,720 --> 00:45:02,220
Wes Bos: If we mess that one up documentation always a hassle. What are your best tips to ease up on writing documentation. I tried to write it along the way. But I need some tips and tools and extensions that might help me specifically in developing a j. s plugin at the moment and want to publish it. So the docs need to be nice. In my opinion, you'll want to start with at least the you know, the API docs like some very just core API docs you can do that I think is like .js doc as that that's a big one. If you use any of these different automated doc platforms, it's typically you write like a comment above the code. And it tells what the inputs and the outputs are, what the types are expecting that sort of thing, it will generate your ducks for you. So I know j s doc is a big one. But if you use a different one that you like it, please tweet us out of the show, because I don't have a ton of experience with these. So I would start first with the API docs and then get into some examples. Because people if they're going to be using your thing, chances are they want to see examples of how it's used in action more than so than just standard API Doc's. Now, my new favorite way of doing this is through something like code sandbox code sandbox is a, it's kind of like code pen where you can have some code up in there. And it makes it really easy to have different, like a full on project. But every single time I land on a new library that has a code sandbox in it, that shows me how to use the library, I'm so thankful because then I can just pop open the code sandbox, I can see some code in action, I can see it working in action. And I can try it and I can mess with it. So I would start with the API reference, then I would go to actual working examples in to like a code sandbox or something. And then I would go into maybe like more of an article style, like, here's some nuanced things like here's a bit of snippet, and here's maybe some text explaining it. And then from there, if you wanted to get better and better with it, you could have like a react storybook type of thing where you have like a full on visual documentation. Maybe like we see when the design system sort of just like a full on documentation page. Or you could even get into things like adding video tutorials and stuff like that. So I think there's various degrees in which you can start and then improve upon that perfect, I don't really have much experience writing documentation for my own stuff. I know that people are a big fan of things like swagger as well, which will document your API of like an express application, something like that. So check that out. Otherwise, check out Episode 73 of syntax where we do talk about some of these other things for writing documentation. We mentioned a couple different alternatives that you have there, except we have a question from Todd goats greatest of all time, what are some good questions or techniques to better understand a client's requirement? I find that many clients have a hard time describing what they want developed? And I like this question. I've talked about it a few times on here before, but I think that if you are working with a client, it's your job as a web developer to understand what it is that they want out of a website. So I see a lot of people approach clients and say, Tell me what you want, what are your what are the pages that you want? What are the functionalities that you want? How do you want to structure this thing, like, I'm helping out a friend with a website right now. And he was I went, I met up for coffee with him just to give him some advice. And he's telling me like, like, he's trying to, like, tell me exactly how he wants to have it laid out. But I was like, Don't tell me like what you want it to look like, tell me like, What is your problem that you're trying to solve. And the problem was that they had all these different pieces of content. And they needed a way to surface it to the user, because it was really confusing to the user. Like, they had all these resources and podcasts and different types of podcasts. And you need to be able to show people new stuff, but group together older stuff together. And it was kind of interesting, because I was like, just tell me what your woes are. Tell me what your problems are. And tell me what the problems are for people visiting the website and tell me what you want to be done when a user visits your website. And it's your job to know like, how does the business work? Why are people coming to the website and just like let them unload on you all of their problems. And then you can take that and you need to turn it around into solutions. Part of a developer is solving problems with technology and you give them solutions. right past that. I think questionnaires are really good because they make people start thinking about their entire website. Sometimes people will just look at a competitor's website and say I want an about page and a store page and that's it. But if you give them a questionnaire, it really gets them thinking about different pieces of their website and different ways. They get approached processes in their business.

37
00:45:02,310 --> 00:45:51,780
Yeah, I think that's a great answer. The only thing I would add to it is like is to find out what sort of things they like, what kind of comparables, you know, maybe this person's been like really eyeing a specific site or design or style or whatever. And that's like a guaranteed way to sort of know what they're going to enjoy when they see yours. And maybe you can sprinkle some of that in here and there, if it's appropriate. If it's not appropriate, maybe it's time to have that talk about why it's not appropriate. But you know, for the most part, again, I think you nailed it on most of your aspects. So yeah, just maybe find out what they like and enjoy from other work, and you sprinkle some of that in there. Alright, so this next question comes from a name that we're not entirely convinced is not a troll here. And if this is your last name, I apologize ahead of time, but we googled you, and we can't find you. And we only find people with joke accounts. So this is from D, crap and shits.

38
00:45:51,780 --> 00:45:52,560
Unknown: I'm

39
00:45:54,990 --> 00:49:57,360
Wes Bos: sorry, Mr. Mr. Crap in sheds. Hey, do you guys have any tips for taking over maintenance and development of existing websites? Where the previous developer is no longer contactable? Do you generally try to work with and learn wherever libraries old devs use? And would there be a preference to slowly migrate to a stack that matches your strengths? I like this question. I think this is interesting thing. This is a problem that so many people have faced this is a problem that I faced especially early in my career, I'd work for an agency and as the new guy they'd sticky with the account that was nobody wanted to work on, like, oh, give the new guy this account. It's all individual HTML files, and there's hundreds of them and the CSS is barely hanging on by a thread, go to town. Good luck. And so it depends on a lot of things, my answer would be first to take time to assess the entire code base before you just start writing stuff. Because you might think things are away just at first glance, but chances are these platforms have been built on and built on and built on. And many times over, like carelessly over the time of many years, or many months, like where people just add things in here and there. And now you You are the one who's you know, looking at this and looking at this jumbled mess of stuff. And you might think, hey, that pipe over there, that's not attached to anything, it's not doing anything, let me just rip it out. And then next thing, you know, the basements flooding, so like, don't just start ripping stuff out without truly understanding what's going on. And that said, it depends on how much time you're going to be spending in this code base, and how much time it's going to take you to start refactoring things. Because if you are only going to be spending a little bit of time in this code base every once in a while sort of thing, well, maybe it's just better to sort of let it being a heaping pile of crap. And then just to work on it a little bit here and there, here, and they're here. And they're, rather than to rewrite the whole thing, let's say you rewrite the whole thing, and then you never touch it again, like you just wasted a whole bunch of your time. So I'd say you have to weigh the cost benefit analysis of doing any sort of rewrites or whatever. But maybe don't leave it worse than you found it. I guess that's the best advice. Yeah, developers are often very quick to call someone else's code base crap. And I think you have to give it a good look over is it just something a different way that you normally code because sometimes you can really learn a lot by trying to understand how did this developer approach these problems, if you can't totally understand how somebody had approached, if solving a problem, maybe it's worth taking a look. And going through that, give it an honest go try to actually go up to speed. And if you can, maybe there's something that you just don't like about how they wrote the CSS or you don't like how they approached doing that that's a perfect time to start just refactoring it, you don't necessarily always have to rewrite things from scratch, it could be a point where you just go ahead and start to refactor out some of the functions, maybe the folder structure, maybe the pipeline that you have that's compiling everything. It really just depends. And I like the way that this question was asked, because it doesn't sound like I inherited this crappy code base. It's I just can't get in touch with the guy. And there's probably no documentation. So it's hard jumping into a existing code base without anyone being able to guide you through how it all works. Yeah, yeah. Take that time. Figure out what's going on. Assess, assess what it is assess the damage, if there is any, and go from there. Cool. Well, that is our potluck episode for today. So we do one of these a month. So if you have any additional questions, head on over to syntax FM, submit your questions, we get a lot of questions. I apologize if your question has not been read on air, there's a lot of questions that go through, we try to pick the ones that we think are going to be very helpful for the audience. So like I said, you know, and sometimes will even turn your questions into full on episodes like we mentioned in the beginning of the show, so submit your questions@syntax.fm for future potluck episodes, and we hope to get to everyone's question, but again, there's just too many to get through all of them. Next part of the show is called sick picks where we give our sick pics stuff that we really like stuff that we like in all facets of life and I have a really sick sick pic today. I was instagramming about it.

40
00:49:57,629 --> 00:49:59,160
Unknown: Is this is this is like this is

41
00:49:59,160 --> 00:50:03,630
a an adult Sick not like adult adult but like as an adult, I'm sick.

42
00:50:04,020 --> 00:50:05,010
Oh god,

43
00:50:05,190 --> 00:50:53,730
Wes Bos: yes. Great. And what it is is a scrub brush that attaches to the end of a drill. So I have like the the standard the wall like drill kicks it's got a ton of power and stuff like that what this is is basically a scrub brush with an attachment that goes on into your standards or like the Is it a hex or whatever it is inside of a drill and I just used this to clean the tile in our kitchen and holy crap it is good. Like our we didn't even understand how dirty our kitchen tile was till I took this brush on a drill and just went over it and like Wow, so I'm using this thing to clean literally everything in my house that can't be scratched like the cooktop some of the walls with the paint the tile the bathrooms I'm like I turned into a cleaning wizard because instead of like what the toothbrush or another brush I just have a power drill I

44
00:50:53,730 --> 00:51:05,190
Unknown: feel like a total like Tim the tool man Taylor just you know, just going nuts on these walls here so they are so stinking cheap. There was like it was like 10 to 14 bucks. There's

45
00:51:05,190 --> 00:55:03,360
Wes Bos: 100 brands of these things on Amazon I'll I'll share the one that I bought. And they just like really, really made cleaning to be a lot of fun as like because I'm gonna you know, an adult child here so I need you need power tools to clean apparently but I was having a blast with it. And I was just like, like cleaning tile like oh, Courtney you have to see how good this tile looks and she's just like my god that's awesome. I actually had bought one of those A long time ago and I was looking for it like a week ago because I needed to clean or the our oven like the the window of it was getting really and I was like I need need more power. And I couldn't find it and in the massive one, which I'm for sure gonna buy that one. It's like a couple bucks. And you can just click it into your drill and go nuts on it. Yeah, more power man. Also if you if you like the sound anyway, stick pics use our Amazon referral links into syntex.fm. We post our referral links in anytime we have something we're not we're not doing this to sell you guys things. But hey, it helps the show if you use our referral links if you're interested in buying some of this stuff. So just a heads up there. All right, my sick pick is going to be the sovereign 10 watt wireless fast charger. So I finally got the new iPhone, which is the 10 x max plus whatever it's called. Yeah, the biggest baddest one that you can buy. And it's been amazing. I'm really, really enjoying it. And one thing I had never had on the phone before which I know Android people have had it for like 15 years or so is the wireless charging or you can just like lay it down on this charger and it will it will work. So I had this company sovereign reached out to me and they're like, hey, do you want to see people send me stuff all the time and I don't usually review it because it's if it's not very good or like it just feels weird to like Oh, thanks for the free thing. Let me let me know just shout it out on the podcast right? sponsorship is 1000 bucks in episode but for your $30 free thing. But this one was actually really good and I was really happy with it. So sovereign is like a company it seems to be sort of like outside either one anchor hummus. So Sabra, Sabra hummus is really good. And so the way it works is that the the lid of the hummus will charge your phone and then you can sip your pretzels in the hummus. Yeah, you're charging your phone it looks to be kind of like a bunker kind of company where they sell like chargers and stuff like that. And they they sent me this wireless one and it's been working great. The only thing I hate about it is that it's got this like ring around, it's got this light up ring and if you put it in you're like I want it to put it on my nightstand but it's just like lights up the entire and it like is constantly moving and like light it's like a Christmas tree in my that is anaka going around and around so I can't You can't put it in your anywhere that you're sleeping, which sucks. But I do have it just have it right on my desk here and just lay my phone on it every time that I have it and I did also try to convince my wife I taped it underneath a glass coffee table and it still works through the coffee table. I don't know if that's gonna set the house on fire or something like that. But we see that under their coffee table tables a couple of days ago. Yeah, yeah. So cool that you can just lay your phone down on a surface and it will charge through the glass coffee table. I'll give you a real quick tip here for wireless charging. Here's that here's a here's a tip wireless charging from an old Pro. Get a wireless charging phone dock for your car. Oh, like an art like when normal arms that sticks on your window but it plugs into the USB or cigarette holder charges or phone every time she drives Her phone's being charged wireless you just throw it in that's it's so good. I got it for Christmas and it's like low key one of those like small like Christmas gifts that makes your your daily life better forever and ever just because you never realize how much your phones and your dock and especially if he's driving to work Something man, that's great. Do you know the name of that one?

46
00:55:03,510 --> 00:55:05,670
Unknown: I don't, there's a whole bunch of I can find it.

47
00:55:05,790 --> 00:55:38,970
Wes Bos: Okay, maybe it will Scott will link it up in the show notes if he finds it before this episode goes goes live cuz I would definitely like to get one of those dogs for my car as well because I right now I have the one that I sic picked a bunch of episodes ago that goes into the CD player. And I've been loving that one because no one uses a CD player and the way that my car works is that it works perfectly sometimes like cars are really bad at these like vent mount ones and I have one that you can't vent mount at all. Same with like Jeeps, Jeeps have these like vents that just like spin forever, and he can't vent mount something on a Jeep like that. So though the one that CD player

48
00:55:41,130 --> 00:55:45,870
Unknown: last one, so I will link to it The brand is ay ay ay t.

49
00:55:46,140 --> 00:55:48,060
Wes Bos: It's one of those like, yeah, Amazon brands.

50
00:55:48,330 --> 00:55:57,030
Unknown: Yeah, in fact, I think there's a whole bunch of different ones, I'll just link this one, even though it's currently unavailable it like links to a whole bunch of other ones from this page. That's

51
00:55:57,180 --> 00:58:29,970
Wes Bos: really cool. Definitely going to be buying that Li Stay tuned for my full review. So that's my What about any shameless plugs, I have shameless plug which is level up tutorials, subscription services level of Pro. So if you had to level up tutorials.com forward slash Pro, you can check it out. With this subscription, you get access to a ton of tutorial series and a new one coming each month. So let me tell you, if you sign up for the year, you get access to I think there's like 23 or something, I should have this number down pat, there's like 23 something premium tutorial series that you get access to each one has like anywhere from 24 to 30 videos in it, you get access to the code, the videos, watch it offline. And if you sign up for the year, you save 25%. And then you get access to 12 additional courses that are made coming out throughout the next year. And let me tell you, I have some really exciting courses coming throughout the end of this year into next year. So if you sign up for the year, you aren't going to be disappointed, the content is just going to keep coming in, it's going to keep getting better. And you don't want to miss out on some of the stuff I got coming up. Awesome. I'm gonna pick my advanced react course. So this is the course that I've been working on for for my entire life. And it's a really big core. So it teaches you advanced react concepts using graph qL, both on the client side with something called Apollo client. Now, Apollo client is like we've talked about on the episode before but Apollo client is something it's going to fetch the data for you it's going to cache the data for you. You can do local state management as well as caching Server Data. Then we also do graph qL on the server with something called Prisma and graph qL yoga that's kind of like an express server. So all the stuff you learn in my node course will move over if you need to write any custom middlewares or custom handlers, we do the full blown authentication with JW t logging in with JW t tokens. We have a cart yeah add items to the cart you'll be able to check out we use charger stripe to charge everything to stripe by the way had a couple people ask if stripes not available in your country, you can still use a stripe test account to do the course you just can't actually deploy a real checkout website if stripes on available in your country but stripe has this thing called stripe Atlas which solves that as well. So you're good there. There's testing six hours of testing videos in there really happy about that really proud of those videos. So if you are learning to to be a better JavaScript developer if you want to learn react and graph qL building server side stuff and client side stuff, check out advanced react.com and use the coupon code syntax for 10 bucks off because I'm so so excited to get this thing launched and everybody's been have been really receptive of it. So far, the reviews so far have been amazing. Sick.

52
00:58:29,970 --> 00:58:35,160
Unknown: I'm so glad that you have that released. I'm excited because then we're now we're gonna get less potluck questions being like

53
00:58:35,160 --> 00:59:01,020
Wes Bos: when's the now cars stoked I'm stoked that it's finally out. So again, if you like this content on syntax, and you like our content on our channels or various things, go ahead and head over to pick up voices course subscribe to level up pro support us creating this content so we can continue to produce high quality work. We appreciate it very, very much. Thank you so much. Cool. That's it for today. We'll see you next week

54
00:59:01,109 --> 00:59:14,130
Unknown: later. Please head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

