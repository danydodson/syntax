1
00:00:01,319 --> 00:00:02,820
Unknown: You're listening to syntax.

2
00:00:03,990 --> 00:00:05,250
tastiest web development trees

3
00:00:05,250 --> 00:00:06,150
out there,

4
00:00:06,150 --> 00:00:09,330
strap yourself in and get ready to whiskey

5
00:00:09,330 --> 00:00:10,440
and Wes Bos.

6
00:00:10,680 --> 00:00:31,200
Welcome to a syntax. My name is Wes Bos. I'm a full stack developer from Hamilton, Canada. And this is a Scott to linsky. I like to start this this podcast off a little bit different every single time with me, as always is Scott Delinski, who is a full stack developer from Denver. Is that correct? Yeah, that's correct.

7
00:00:31,230 --> 00:00:31,829
Yes.

8
00:00:31,829 --> 00:01:20,610
Scott Tolinski: How's it going today? Scott? Scott? Oh, good. Yeah, I just pushed a bunch of new features to level up, like user view tracking and that sort of stuff. Stuff that people are asking for for a little while. So it feels great to push some of that code up into live production and see it in action. Finally, after working on it for a little bit, so yeah, no, I'm feeling great. got back from a dudes weekend for a bachelor party that was in Winter Park where we did some sick mountain biking, like legit mountain biking, we're going down blue squares, and doing lots of little jumps. And I was terrifying. I haven't ridden a bike in like 10 years before this. So I don't own a bike. And everyone was really worried for me, and I ended up doing fine. So it was it was a lot of fun. We did some a lot of mountain fun stuff.

9
00:01:20,730 --> 00:02:04,830
Unknown: That's really cool. I'm just about to head off. We're recording like a whole bunch of episodes today and tomorrow, just because I'm about to head off on some vacation or holidays, as you say, and the rest of the world. Yeah. And we're going to a cottage up in Bancroft, Ontario, which is like this awesome cottage country area in Canada. So I'm super excited about that. It's been a long couple months of hard work, and I'm excited to have some time off. Nice. That's great. Yeah, we're doing a little vacation as well. It's like three or four days, we're heading into Aspen. We're gonna do some hikes. We're gonna go around and just, you know, hang out, eat some good food and Aspen because there's lots of that there. So it's gonna be a good time, too. So I think we both have some well deserved breaks after next couple weeks here.

10
00:02:05,190 --> 00:03:21,780
Scott Tolinski: Totally, totally. Today's episode is sponsored by coffee cups, CSS Grid builder and fresh books, cloud accounting. I'll talk a bit more about them both partway through the episode. Yes. So today, we are having a potluck. Yum, yum, yum, yum. To answer your listener questions. I like these. We're going to go all over the place with JavaScript question freelancing questions, soft skills, questions, security questions, all kinds of stuff that's coming up today. If you have a question for a feature potluck, please keep them coming. We now have the link over@syntax.fm. In the top right hand corner, it says ask a potluck question. Actually, let me give a bit of a shout out to whoever actually added that the syntax website if you ever curious is open source. It's on GitHub. There's a link to it on syntax FM, and I put a call out to anyone who wanted to actually do some work on it. And we got a couple people adding links to the Spotify Google podcast is not out. So now we have a link to Google podcast and we the potluck submission form was added by Abby Tom do probably goof that up but huge thanks to Abby for putting that up. So it just go to syntax FM I also Scott I don't even know if you know this. I just added position sticky player. Yeah, I

11
00:03:21,780 --> 00:03:45,090
Unknown: saw that tweet. Yeah, yeah. And then I went and did a little scroll. Yeah. two positions, man. He's super cool. I never use it. Because it's like, one of those things that are so long. Yeah. Is it? Let's see, can I use calm? Let's look for sticky? No, ie 11. You get it in edge, but not on T head or tr?

12
00:03:45,120 --> 00:04:19,410
Scott Tolinski: Okay. I guess that's but also position sticky is something you want in a table? Yeah, it is supported on th elements that is supported in Firefox supported in Chrome, the same issue as either Safari, iOS, Safari, hey, I tried it in in iOS Safari. And it didn't work. Maybe there's a little something we have to figure out there. So actually, it's well supported on all of the major browsers, except IE and the nice thing about it is that it just falls back to position relative if if it's not supported, so it just scrolls normally. So I thought that was kind of a nice little two line addition.

13
00:04:19,440 --> 00:04:41,880
Unknown: Yeah, I'm gonna have to I'm gonna have to position sticky some stuff, because I'm already using CSS Grid. So it's like, I've already abandoned the iE 11 train. So yeah, yeah, totally CSS sticky time. Sticky time. All right, let's, let's jump on into it. We got a whole bunch of questions here. Thanks so much, everyone for submitting them again. Submit your other ones, and we will do this once a month. You want to grab the first question there, Scott.

14
00:04:41,970 --> 00:07:21,540
Scott Tolinski: Yeah, I like this question a lot, because it's something that I had to deal with a little bit. Let's see. What do you think about the time and date that you stay at companies in my last in my CV, my last three jobs stayed six months at each companies. Do you think that's a bad thing? This is from Philippe and Yeah, I don't necessarily think it's a bad thing in to me personally, if you have the abilities to back up those job changes, and the reasons for those job changes, if presented with the questions about why you made those changes than any interviewer is going to understand. Because a lot of jobs you don't know the company culture, and maybe you don't know, you know what you're getting into until you're into it. That said, it could be a red flag. And typically, I don't necessarily think it's a red flag that's gonna prevent you from getting into talking to somebody and maybe talking about it, but you're gonna want to make sure you have good reasons for it. If you are jumping companies every six months, and your reasons are, well, the boss was an asshole. Oh, yeah, this boss was an asshole to Oh, yeah. And this was But boss was also an asphalt and perhaps that's not going to look too well. And it might look like you are an asshole. So my suggestion is one, keep your skills up be really good, because a high, highly skilled developer is going to be in demand, even if you've changed jobs, a whole bunch. I personally changed jobs a whole bunch, but it was mostly for better opportunities, right? And to don't do it for dumb reasons, and have a good reason. So when you get presented with that question, in an interview, that you're not looking like someone that would be a toxic employee, right, you want to be presented as an employee that will stick around, even if you didn't stick around at your last few companies. Yeah, I'm kind of in the same boat as that I have taught in the past, oh, five, four or five years ago, I taught boot camp. And now if I talked to the people who I taught in that boot camp, some of them are in senior developer positions and are making really good money. And what they had done is that they stayed at the at three or four jobs for a year, year and a half at each of them. And by doing that jumped, jumped up. I know that everyone says, oh, Millennials won't don't stay at a job. But I really think that's the way that you can really level yourself up. Yeah, it's funny, because I talked to like, my mom, and my dad had the same job for, like, 30 years, and you get like a watch at 30 years. And that was the that was the way that it happened. Whereas now I think people are just jumping from job to job a much more quickly. Of course, you have to have a reason why like, that would raise a huge red flag to me being like, oh, six months at each job. Why, but that's not gonna stop me from bringing you in the door and asking why.

15
00:07:21,569 --> 00:08:18,900
Unknown: Yeah, I totally agree. I think in the past, people had a lot more loyalty to companies, because they thought the companies would have loyalty to them. And then like, we've grown up seeing just how much loyalty companies have to, you know, these people that have stuck around and things like that, you know, so I personally, I don't have too much loyalty in that regard. do what's best for you. Yeah, that's, that's my voice that this question here has a little note on it. Philippe says, I'm from Brazil, and I have a podcast here. It's called dev nostra. I don't know if I butchered that or not. But it means developer on the road in Portuguese. So I thought that was that was pretty cool. I have a lot of people taking my courses from Brazil, which is always surprises me. So that's cool. If you're from Brazil, check out that podcast. Nice. Or if you speak Portuguese, I'm assuming it's in Portuguese. Yeah, if it's not in Portuguese, tweet us out, and we will be awesome. Let's, uh, let's grab another question here.

16
00:08:19,020 --> 00:08:19,650
What do you got?

17
00:08:19,710 --> 00:10:56,580
Scott Tolinski: What is the best way to work remotely. So obviously, Scott and I both work remotely. I know a lot of people who work remotely and I think that being a web developer is the best possible job to work remotely. Because really, all you need is a decent internet connection. And you can live all over the place. I think that's, that's like one of the best perks like, obviously, you can live in San Francisco and make really, really good money. But I think that there's also this huge allure to being able to live in the town that you grew up in or being able to move out to the country or even myself, I moved out of Toronto, which is the huge city to kind of an up and coming city called Hamilton and houses were a lot cheaper. And it's really cool to be able to like have that for you. So working remotely is not without its disadvantages. There's lots of companies that don't allow that at all. So what are some good tips I've worked remotely for my entire life, I've tried co working spaces and whatnot, I just didn't like it at all in my my tips for working remotely are first get a really dedicated space for your work. So you don't just like sit at the dining room table, especially if you have people at home that are running around. You can't just sit at the dining room table or you can't just sit on the couch and be on your laptop because there's like a mental switch that needs to happen when you work and you walk into the room that you're going to be working in. So if you have some sort of dedicated space, I know not everyone has an entire room to themself but somewhere that is only for work upside to that as also you can write that off on your taxes if you're running a business, you have clear on and off times. So it's clear to me that at nine o'clock I start work and at five o'clock I'm off work I don't do laundry or do house stuff during the day and I don't really do work stuff after Obviously, there's some little bit of wiggle room there, sometimes I will get totally sick of work and go do something for the house. And the opposite. Sometimes something will break at eight o'clock at night, and I'll need to jump on my computer. But that's the beauty of of having a flexible schedule like that. And the last tip I have here is having a wine downtime is something that I'm realizing now that I have kids is that I can go from bug solving, like super init to two seconds later, my kids yelling at me having to cook dinner, like fires needing to be put out. And it's really hard for me to be like, Okay, give me a sec, because I need to, like come down from this like debugging mindset that I was in to go over to that. So having some sort of way to wind down. I haven't really figured that out now because I can't like go for a walk or something like that. Because at five o'clock, I need to start making dinner and dealing with the kids and stuff like that. But it's definitely important.

18
00:10:56,669 --> 00:15:04,320
Yeah, yeah, absolutely. And I was one of the one of your sick picks, the recently was the own own the day on your life book. And I think the best tips that he had in that book, and I started doing this, since I read that book, like two weeks ago, or whatever, one of the absolute best tips he had was even if you work at home, have a commute time. And then that commute time do the things that like a normal person would in commute, like you're sort of winding up like I'm sitting there, I'm drinking tea, I'm listening to podcasts, I'm not mindlessly browsing the internet, but I'm not working hard. I'm sort of on work light mode, my brain is sort of getting going. And then I have this hard nine o'clock start time where that's where I start working. Like when typically when we're starting to record this podcast or any of that stuff, right. So I have this little ramp up time to get going that way, I've gotten all that stuff out to something that's really, really helped me is had very specific to do list. We talked about this a little bit, but I write down very specific to do list not necessarily to the hour, but I have a list of priorities. prioritize this, and I'm going to this is the most important thing, I need to accomplish this the second most, most, whatever and so on. Okay, lastly, I will not Lastly, thirdly, I have like blocking software on all of my stuff because I don't have the self control needed to not fall into mindless traps. So I have an app focus on my computer, I have another one on my phone, there's hundreds of these that like block all of like, Nonis it like, oh, it'll keep Instagram open for me, but not because I browse Instagram, but because I post on it for level up tutorials and things like that, or Twitter at least Twitter open, but I also don't browse Twitter mindlessly. But things like Reddit that you can really get sucked into blocked, Facebook blocked all that stuff blocked. So even if you try to go to it, it lets you know, Hey, man, like you should be working right now. And then blocks it for me from that hard work time to that hard end time. So nine to five, and I have it on hardcore mode, so you can't possibly turn it off. Even though I was pretty good about never turning it off anyways. Okay. And the last thing I have is an addition of in a dedicated space, if you are not feeling productive in your dedicated space or in your house, or your work or whatever, take it to a coffee shop. There's never been a time where I've taken it to a coffee shop, put on my headphones and didn't get immediately in the zone. So I walk down the street, I put on my headphones, I put on that my noise website I put on some airplane cabin noise, I put on some rap music, and I just zone it. So for me switching up the scenery into another place that is very work specific can totally keep you in there. But yeah, I've worked remote for both companies. And for myself, it's incredibly important that you do separate yourself from your normal life. All the stuff was said absolutely. Yeah, it's funny that every probably two or three months, I get into a bit of a funk and then I'll just go work at a coffee shop for two or three days. And just like at the coffee shop, as well as the walk to the coffee shop is very therapeutic. Yeah. And I also find myself in the morning, like you said, you mentioned the to do list like in order of importance, always try to make that at like the last thing that I do for the day is I'll make my to do list for the next day. And if I don't have time to do that, what I'll often do is I'll just go on a walk and grab a coffee. And as I'm on the walk I'll sort of talk through what it is that I need to get done and I have things on my phone and I'll add those to my phone and it's just enough time to be able to get it out of my head into the list the whole mantra that we've talked many times about before with the Getting Things Done mindset. Yeah, I have a what I like to call like a meditative shower at night. So I do I do Night Showers on the night shower more than a morning shower. But my my meditative night shower is like I you know, sort of released the last day and then I started thinking about the next day and then I basically come up with my entire to do list in the shower to the point where like when I get out of the shower, I got a rush to like enter everything before I forget. But it really puts me in that like clear thinking space. And the same thing. It's nice to have that To Do List done for the tonight. The night beforehand. So you wake up and you don't have to start thinking about it and yeah, that's As long as it doesn't stress you out too much to do. So. Cool. And anything else, any other tips? We

19
00:15:04,320 --> 00:15:12,120
Unknown: could do a whole house? I just I just think it's so interesting how all of the tips for working from home are all mental, you know?

20
00:15:12,149 --> 00:19:22,110
Scott Tolinski: Yeah, yeah, absolutely. It's really easy if especially if you don't have a deadline or something to just be like, wow, no, no, when you run your own stuff like us, you kind of never have moments where you don't have deadlines, technically. Okay, cool. So I got one here from Ben M. And this one's is a good one. Because that, you know, I currently have a couple of these projects going right now. So what are the trade offs for using WordPress as a headless CMS versus using it as initially intended with being hosted on a server and such plugins, etc? So some pitfalls that I've run into are one double hosting, right? You have to host the back end somewhere, you have to host the front end somewhere. And this can create confusion for your clients, what why do I need to host or maybe you don't need to host but why do I need such a complex setup for my host to there's less connection between the front end and the back end, right, you can do less things like little edit buttons on the front end that take you directly to without having to do so manually, everything is going to be manual, there's going to be no such thing really, as these front end plugins and WordPress, right. So you can add a basic slideshow plugin, and then have it just appear in a zone or widget or whatever, you're more or less going to be making a custom content type, you're going to be making a custom slideshow, and you're going to be doing it all by hand. So therefore you lose some of the speed benefits of these things that just exist in WordPress. And I've also found it to be confusing for the client. Some of my clients who have had WordPress sites in the past now are sort of wondering, Well, why all this extra stuff, like why the extra front end? Why the extra complexity, oh, and maybe that could be a little confusing. If they're interested in maybe some of the actual way these things are working rather than just here's my website. And here's how it works. So for me to alleviate some of these one, know you're getting into it with a custom thing, it's going to be custom, your code is going to be custom. And for me, if I'm writing a react to Gatsby site, whatever, I'm doing the headless WordPress, so that I have access to custom stuff. If I don't want custom stuff, I wouldn't be doing it right, the double hosting thing, you can use a host like one of our favorites Netlify on the front end. And if you're not doing anything crazy, you get that excellent free hosting out of that. And then you can have something like a cheap host like a Bluehost or GoDaddy or something like that for the back end. And then confusing the the site maintainers I presented as this here is your WordPress back end URL. This is it. This is the WordPress back end URL. That's all you got to worry about. And I don't necessarily get into it too much about the front end, the back end and all that sort of difference. They're just like, here's where you go to edit your stuff. Here's where you go to view your stuff back end.whatever.com, or whatever URL it is. So there are definitely a bunch of challenges. And definitely some things that I think are just inherent to having a custom more custom system like a headless WordPress. I agree. I think the only thing I'll add to that is that if you are considering building a kind of headless WordPress, make sure that your client knows that because I think the reason why a lot of people choose WordPress is the the hit by a bus mentality where Oh, you're the developer and you go away, it's very easy to find another WordPress developer who can pick it up and sort of keep running with it. Now if you have a totally custom setup, someone might get thrown in there and be like, I have no idea even how to like to start this like I remember a couple years ago getting thrown into a project that was built on this, like custom JavaScript framework that they had built. And I was like, 10 hours deep on it. And I was just like, I can't do this, I have no idea. Like how like this is even working what the thought process was behind everyone. It was just way too hard for me to pick up from that. So people and also people, you get this like market or types that want WordPress because they can sling a WordPress plugin in when they specifically need like, Oh, I'm using lead pages. Now let me just install the lead pages plugin. And they're gonna be pretty mad when you come back to them with a $3,000 quote, to add that specific functionality where it would have been 10 seconds to flip on a plugin with WordPress in the past. Yeah, I

21
00:19:22,110 --> 00:19:39,630
Unknown: mean, totally. You don't want to, I don't know, you don't want to remove these these tools from the hands of your client who's paying you to build something with these tools? Because I mean, the reality of it is these tools are really what Nick says experience is great. And

22
00:19:39,960 --> 00:19:40,920
he's gonna do it. Yeah.

23
00:19:40,920 --> 00:19:56,360
Another great tool that we really love around here is coffee cup software's CSS Grid. Oh my gosh, people have been commenting on Scott segways. And they're just so good, because

24
00:19:57,050 --> 00:21:24,750
Wes Bos: WordPress to CSS Grid was not easy. No, no, I that is that is unbelievable that you did that. Anyways, our sponsor today is coffee cups CSS Grid builder, it's a free tool. So coffee cup is a company that builds a lot of these visual editors for building responsive websites. And they contacted me a couple of months ago and said, Hey, like, Can we do something together? Because you made a CSS Grid course, we built the CSS Grid tool. And I was like, oh, okay, let's get on the phone and check it out. Because like a visual builder are those any good. And turns out, they are getting a lot better in the CSS Grid. One is awesome, because CSS Grid is super visual in my CSS Grid course, I use the Firefox Dev Tools just to be able to show you what is going on. It's such a visual thing to be able to build. So what they've done is they've created the sort of interface for creating everything that has CSS Grid. So the the areas, the columns, the grows, the grid gap, how much they spend, where they start, where they end, you know, all of the stuff that goes into CSS Grid, and they built a tool, and then you can kick that out to code and import it into your website, which is awesome. You can also bring it back into the grid builder if you want to, to be able to edit it. So you want to check out coffee cups, CSS Grid builder at CSS grid.cc. It's a free download there. And they also have a bunch of resources for getting up and running with CSS Grid. Thanks so much to coffee cup software for sponsoring.

25
00:21:24,779 --> 00:24:17,460
Scott Tolinski: Thank you. All right, let's see what what kind of questions you got. This one's from manuelle. Hey, guys, how do you deal with API credentials in react? Do you wrap that in your own back end? How do you make your back end that doesn't get exploited by others? Many API's, API keys have a request limit. So I think there's a couple questions in here. Specifically, when you have a react application, and you need to talk to some sort of back end like like, how do you make sure that there's people aren't exploiting that? How do you deal with the fact that sometimes you have API keys in your react application, and anyone else could take that. So there's a couple things here, let's let's first unpack the API key thing. So if you sign up for something like Google Maps, or you sign up for something like an API that returns a list of all the comic book characters that come back, and they often will give you a key. And what you actually need to know about these API keys is is this key? Can I use this in the client, meaning that can I use it in JavaScript directly. And if that's the case, then you can just go ahead and use an often what they'll do to restrict other people from using that API key is that you have to input the domain names that the API key is going to be used on. And then the API will block requests only that are only from that specific domain name. So you might like register, local host, and Wes Bos calm and a couple other ones that you have there. Other API's will not let you request that they'll have no course setup. So we're gonna have a whole episode on what courses but essentially, it's cores cross origin resource sharing, where can I share data from domain to domain, and often API's will block all of the requests from one domain to another. And that means that you have to use that API on the server side. And they're expecting you to write your own API endpoint that takes in your requests. And then on the server side, where it's private, you sprinkle on your API key, maybe I'll do some caching there. Because often, like I was using an API, fixer IO to do currency conversion in my back end, just to show me how much money I've made in Canadian. And it turns out that they, they stopped their open API, and now they're on an API key that only allows you, I think, like 20 requests per hour. So what I had to do is I had a cache the currency conversion values for 20 minutes. And I hadn't had to do that before, because I was just hitting it every single time that I had there. So you might not want to implement caching, you probably want to put in your own API key, you might want to implement your own course. Because now if somebody finds your own API endpoint, then they can use that from any end endpoint that you want. So you want to say okay, you can only use it from this specific endpoint. So that's the first half of that. Do you have anything to add about that? Scott? No,

26
00:24:17,789 --> 00:24:18,570
Unknown: no, it was good.

27
00:24:18,839 --> 00:27:11,970
Scott Tolinski: Okay. The other part of it is if you build your own back end with your own API endpoints, like what do you need to do in order to make sure that it doesn't get exploited by others, because if you have an API, you shouldn't have other websites or other people being able to request that. So you can implement your own API keys, you can implement your own cross origin resource sharing URL, so people can only ping them from specific other websites. Although you can definitely get around that with proxies and things like that. There is rate limiting, so if somebody tries to hit your website 1000 times in a minute or someone tries to take a huge list of email addresses and pump them into your database that you can rate limit them based on IP. So you say this IP address can only it can only submit this form two times every 30 minutes. And I've actually run into that before where entire high school classes, take my courses, and they're all on the same IP. So I had an issue shuts them all down, because it seems like someone is spamming the system, right? You can also do what's called shadow banning, which Reddit does this where you can get banned from a specific website, but you'll never know it. So if you view the website as yourself, your your comments will show up and you're like, Why is no one commenting on my comments? Or why am I getting no upvotes? Because it looks like it's working fine. But to the rest of the world. No one sees your stuff because you've been shadow banned. And then there's all kinds other? Yeah, Shadow banning. Yeah, it's like a secret society can thing. There's this idea of CSRF tokens, which is a cross site request forgery. And what this means is that like, let's say I'm signed into bank.com. And then I have malicious Comm. malicious.com. And I visit malicious.com. The fact that I'm signed into bank.com means that my, my browser has cookies for a session, or I'm logged into bank.com. So if sorry, if malicious comm were to send a request to bank.com, when I visit the website, they could send a request to like Ford slash send me all your money, right. And what CSS fr tokens do is that it makes sure and of course does this as well, it makes sure that the request is actually coming from a domain name that is allowed and not from anyone who can access that otherwise, you're gonna get you're gonna get into trouble with, you could visit any website, and that website could fire off requests to external domain names. So there's a lot to unpack there, we could probably should do a whole security episode explaining these concepts a little bit more in depth. But there's there's a lot you can do to to sort of stop that misuse from happening. And it's definitely something you want to do before you get hacked or before somebody finds out that they can be malicious because that's that's never fun to deal with.

28
00:27:11,999 --> 00:27:27,810
Unknown: Yeah, definitely. Cool. Okay, I have a good one here says from let's see if I'm Mark Martin, m m a r t n. Martin. Martin. That's like I would do a lot of A's in that like a Mark Martin.

29
00:27:27,840 --> 00:31:21,660
Scott Tolinski: Yeah, Martin. Yeah. Okay. So this question is long term wise, how do you guys keep an eye with an eye emoji? Thank you, Martin, on performance on an app site in production. So okay, so I'm gonna give some answers that are some of which are personally to how I do it, and then maybe talk about how we can do it. So how do you keep an eye on performance for an app or site in production, one thing I like to do, and you should probably do is have an eye on whether or not the site is actually up or not. So for instance, I use a service called uptime robot to ping the site pings of site every five minutes, there's like a really good sort of free integration with this. And you can pay a little bit more and get more features. But to sites like this are just going to simply ping the site, check to make sure it's working from different locations. And then if it's down, shoot you an email or can notify you in different ways as an API. So I use something like this to well shoot me an email, if anytime any of my sites go down, I just throw this on most of my sites to be honest, just I create a new project, uptime robot, throw it on there, there's a lot of services that do this as well. So okay, so that's just to make sure it's up. Now, another thing I do is constantly check my production site in different browsers in the dev tools. So Chrome or Firefox dev tools, I'm checking those performance tabs. So yeah, I fire up this in dev tools for Firefox, or chrome and the live production version, I'm running the performance features, I'm running the network features, I'm seeing the paint times, and I'm checking it, I don't necessarily do it all the time. But if I do a big release, I'll do it afterwards. Or I should know, going into it, if it's going to have that kind of impact. Also, I just use my sites a lot, I use them on slow connections, I use them on fast connections, I just check it out. I'm kind of obsessed with getting in there and checking out my own stuff there. Now, if you want something more automated, there's a lot of services, I use a couple of services that automate this kind of stuff. For instance, for queries and database stuff, I use Apollo engine, since I'm using Apollo and graph QL. Apollo engine is super easy to just tap into. And you can see graphs of how long certain queries are taking. For instance, I had a query in my air resolver in my role system that was checking the user role. And every single time I was checking the user role, even though I had a fresh copy of the user from the database, I was doing a second database call to check the user role. And this is all taking place on the server side. It didn't have to be done. And I could see in an Apollo engine that that query was taking too long. I went in there, I fixed it, and so something like this Second, a monitoring software can give you a lot of visibility into areas that you can speed things up, especially over time. A lot of these features also exist in my hosting platform, which is Meteor galaxy, which gives me a ton of data on how my site's performing how many people are on it. And exactly, you know, get a lot of fancy real time graphs about what's happening. And you can look and see, okay, where are these slowdowns happening and why? Now there's a lot of services that provide this sort of thing, like, New Relic is really probably a highly used popular one, I do not use New Relic, but New Relic gives you a ton of visibility. And I think they have like a free tier or at least a demo that you can get up and running with. But New Relic is a really nice performance monitoring software. There's also another one called ping DOM, ping, do em that does, like I said before, does that sort of tracking to make sure your site's even up, but it does website performance monitoring. pingdom has a really nice interface. Really cool stuff, I highly recommend having software like this, if the project something you're taking seriously, if you if you want to be having a good eye on your performance at all time, this kind of stuff is is really good. In addition, you could also use some additional, like error checking software like Sentry or Log Rocket, who's been one of our longtime sponsors. So yeah, just having a visibility on what's happening in your codebase is pretty key.

30
00:31:21,960 --> 00:32:59,250
Yeah, I just use a couple of these, I probably should do a little bit more, I use pingdom, to make sure that my site is up, and it will email you when your site goes down, which I find is really helpful. I don't have a paid thing to plan. But if you do pay looks like it's about 15 bucks a month for a single website, which is a bit much for me. But what they do is they also will do PageSpeed, and all that good stuff for you. And they'll give you some really good insights into it. On my database, I use m lab to host my MongoDB. And every couple of weeks, they'll email me and tell me what my slow queries are. And what I really like about this is they will tell me what to index on my database. So indexing, if you're not sure what that is, indexing is kind of like you could index like a title of a blog post. And you could index the content of all blog posts. And it will sort of keep that in memory so that when you perform a search on those fields, it won't have to loop over every single one, it will already have them in memory. And it'll be able to search those fields much more quickly than if we're looping over it. So I have like hundreds of thousands of records in my database. And I was doing some counting, and it had a loop over every single one and count it for me. And it's okay, if you index this, the query would be way faster. So that's good. And then I also keep an eye on Digital Ocean, which is my host right now for my, my websites, they have some good graphs that are more like CPU memory. And you can see like, Oh, it looks like when I sent out this email, I was spiking to 80 90% of my CPU. Maybe it's time for me to upgrade my box to size a little bit larger.

31
00:32:59,310 --> 00:33:13,740
Unknown: Yeah. Hey, do you ever get that question? where it's like, you know, the, if the black box is indestructible, then why don't they make the whole airplane out of the black box in regards to like indexing? Like, why don't you just index everything? Do you ever get that question? I actually

32
00:33:13,740 --> 00:34:18,480
Wes Bos: have that question myself. And I guess it has to do with you need a you have to pay more money? Yeah, depends on how big your database is, you could. And if you have a small database, you can index the entire thing. But at a certain point, it's going to take too long to index absolutely everything. I remember listening to a code pen radio, where they use a entirely separate system that sits on top of their database just to do search. I forget what else a lot. No. So there's like a golia, which will index all your stuff, which is a service, there's Elasticsearch, which you can host yourself or use a hosted version, then there's some other Java one that that could Penn was using to index because you need to be able to search for anything and CSS JavaScript HTML and and find it. And they said that, that when they made a change to the search thing, it would take them days to re index all the code pins that were in there. So like, obviously, at a certain point, you're either going to have to pay a ton of money for your hosting plan, or get some really beefy hardware that's going to to be able to go through that and index it all right.

33
00:34:18,600 --> 00:34:41,480
Unknown: Yeah. Yeah. It all comes down to memory and and that kind of Yeah, processing power. Cool. Yeah, that's pretty much all I got on that one. Wicked. This one is from Jonathan. Oh, record. That's pretty good to do a whole record already. Please, girl, can someone please make a quick cut together? What montage

34
00:34:41,520 --> 00:37:06,960
Wes Bos: What girl? What girl record row record? Well, someone needs to make a montage of me mispronouncing everybody's name. Anyways, the question here is what happened to Canvas after all the hype around html5 some years ago? I hardly see it mentioned anywhere. No use cases beyond games. So I like this question because I actually use Canvas myself fairly often. So Canvas, if you if you're not sure is a is an element sort of like an image. And then you can either use 2d or 3d canvas. And then you have a set of API's that allows you to draw to Canvas. So it's kind of like Microsoft Paint, but for the browser, and I guess there's a lot of websites where you're not actually drawing to the you're not drawing stuff you're not right. So you probably don't see it used in that case. But I think under the hood, it actually is pretty helpful and is used often as a utility for creating things in the browser. So anytime you want to do any sort of image processing in the browser, you'll more than likely have to pop open image canvas. If you want to take a frame of a video and and save it as a JPEG, you need to dump that into a canvas first. And then out of there. Any team anytime you need to dynamically create some sort of image, or you need to draw something to the user, then that's exactly when you reach for Canvas. So specifically, I've used it just last week where I have the website key code dot info. And somebody made a pull request to add a fav icon because there was no fav icon and I was like, wait a sec, wouldn't it be cool if we showed the currently pressed key code in the fav icon so that when you talk, when you toggle away from the browser, you could still see it in the tab that you have like if you're coding in like a code pen, and you want to flip back, you know, oh, shoot, what was the key code for escape, it should show you 27 in in the fav icon of the tab. So I was like, I bet, you could write the number two a canvas element, spit the canvas element into a base 64 image and then set the base 64 image as a fav icon and it worked. I couldn't believe it. And I thought that was pretty neat to be able to do that. And if I were to do, there's no way I would be able to do that otherwise, unless I were to create 400 separate PNG files that had every single different key code in it. Whereas this I just had to write a couple lines to write the number to a canvas, spit it out and set it as the actual number.

35
00:37:07,020 --> 00:38:08,900
Unknown: I have a question about the word fav icon for RDS. It does use a fav icon or favicon. I say favicon. And I feel like I'm the only person that says that right now. favicon favicon favicon. I say favicon. Sometimes it sounds like a like a conference for like enthusiasts Have a drink or something? Oh, yeah, whatever. That was a con. Yeah. favorite drink, they have a con. So yeah, I think it's still widely used. It's just one of those like, tools where it's only when you need it, right, that's the kind of the beauty of JavaScript is that you're not going to be using the entire surface area of JavaScript. There's a whole set of API's for dealing with audio. And almost all of us will never touch those API's. But there's going to be a subset of people that need to do something with audio in the browser, especially as we start to build like desktop quality applications. In the browser, we're going to be needing the image processing and audio processing API's in the browser.

36
00:38:08,939 --> 00:40:13,940
Scott Tolinski: Yeah. Hey, also, you see, sometimes people have some like fancy, like maybe like network patterns or patterns or that are dynamically generated or created behind the like as a background, and maybe you're clicking around the website, and it's adding nodes or making it like sort of fancy, like a lot of times that yes, canvas to that. They're just, I don't know it can be it can be used as a interesting little visual tool here and there. And addition, like I don't know if you've ever seen three j s, which is the whole 3d processing and stuff like that three j. s is is pretty popular. So Canvas is definitely still there. And it's still extremely useful. But again, like as you mentioned, like the audio API's, it's not going to be useful to everyone necessarily. Yeah, I'll let me talk about something that is useful to everyone everyone who has their own business Freshbooks is extremely useful because Freshbooks takes the whole process of accounting, which can be so annoying and frustrating and turns it into an actually nice experience. Yes, Freshbooks is the awesome small business accounting software that makes that part of your mix that part of running your business absolutely painless. So I've been using fresh books myself for running my own business for probably about 10 years now, which is awesome. I've seen it through the initial fresh books about a year ago year and a half ago, they rolled out the new fresh books, which is a totally rewrote it and it's it's such a joy to use. I use it for all of my invoices, all of my expense tracking, you can import all of your expenses from your credit card. You can manage all kinds of different currencies, you can automatically remind clients when they haven't paid and it will it'll sort of follow that up. It's fantastic. So if you are running a small business or if you are even just want to send a quick invoice over to someone I definitely recommend that you check it out. So Go to freshbooks.com Ford slash syntax for a 30 day free trial, unrestricted at that. And enter syntax into the How did you hear about us section? So, thanks so much to Freshbooks for sponsoring. Nice. Alright,

37
00:40:13,940 --> 00:40:28,380
Unknown: I got one from Eric Larsen. It's an easy name. Good, good, easy name for us. Thank you, Eric. And this this question is how do you deal with analysis? paralysis? That's sweet name analysis paralysis?

38
00:40:28,560 --> 00:43:53,130
Scott Tolinski: Yeah. Sounds like a band. Yeah, it does. I always get so caught up in choosing the right libraries and following the best practices that it can halt development. And this is like a super common problem. Because we, as developers, in this dude like to pick what's right, we like to pick what's perfect. And we like to have everything be perfect and best practices all the time. Let me tell you what, and the level up tutorial site I've changed my data layer, like four times from originally will actually I've changed lots of stuff many times. And it probably would have hurt me if I would have really, really changed or taken that time at the very beginning and been like, hmm, instead of just getting into it. So I made some decisions at the beginning. And I started building one way. And guess what, you can change stuff, as long as it's not like, Hey, I'm gonna rip out this huge, huge major part of my site, you have abilities to change this stuff later down the line. I mean, I can, I can think of so many things in my site, I used to use moment. Now I use date FNS, I used to use, I used to use blazer as the front end code. And now I use react, I used to use mini Mongo and tracker from Meteor. And now I use Apollo, these things can be changed over time. And even though it is going to be a little bit of a time sink to change, I wouldn't get caught up in and picking the very best thing, because the very best thing is going to change over time anyways. So just get to work, man get to work, and then then then worry about it later. Yeah, no, I don't think that you should worry about it all that much. It's easy to even listen to this podcast and be like, Oh, man, everything, everything they're talking about is things that I don't use. And like even in my own websites, like my own, my own websites that sell my react course, is powered by jQuery. And the reason why I haven't changed that out yet is because it works fine. Like there are lots of good solutions for solving these problems. And it just because it's not the absolute best solution for solving that problem, it might be 99% of the way there might be 90% of the way there. And if you do have to swap it out, like I'm going to rewrite that the checkout flow in react at some point probably in the next couple months. But I've definitely learned a lot along the way. And that's just part of your career, right, you just need to know that part of your career is that you're going to be building stuff in different types of libraries in different ways and different development methodologies and different approaches throughout your entire career. And that is where you are going to be gaining your experiences. So do your research, make sure that it's a good fit for it. But don't sweat it in the long run, because there are hundreds and hundreds of websites out there that are built on different types of tech, and they're all doing just fine. And it likely will not affect the the bottom dollar of your business. If something is built in x instead of y Yeah, and I didn't, I didn't mean necessarily to go off and say like, it doesn't matter, because it does matter. But don't if it's if it's to the point where it's your micro analyzing between two different things, and both of them are good fits, then then either one will probably be fine. Again, if it's between react and view, it's probably going to be fine with either one as long as you're experienced or whatever. It's between moment and date. FNS it's probably gonna be fine or whatever. But yeah, just make sure that it's the right tool for the job, like you said, and then at that point, as long as it's the right tool for the job. You're you're you're good to go.

39
00:43:53,430 --> 00:44:24,510
Unknown: All right, we got another question here from all this person is provided us pronounciation Yes. Florian Seuss. Thank you, Florian. That is a really nice name. Yeah. Anyways, the question is, suppose I love this question. Suppose you are both forced to change a career with the condition that your new career has to be different from anything you've professionally undertaken before? What would it be asking because I want to know more about you to this question usually pulls out some interesting answers. Cheers, Florian.

40
00:44:24,810 --> 00:44:25,410
Yeah,

41
00:44:25,410 --> 00:46:33,360
Scott Tolinski: this is good one. I got I got I answered. I'll let me let you think about it. I think that I would definitely be in some sort of buying and selling position, whether that is buying things and reselling them on Amazon or buying stuff from a thrift store and flipping it on eBay or something like that, because I have if you think back to when I was a kid, I would go to my neighbor's house, pick the pears off her tree and then sell them on the side of the road, right like I saw. I think arbitrage is the best way to describe what I would be doing. As I would be finding places where things are cheaper, free figuring out something to do with that thing, maybe presenting the pairs in a nice way, putting them in nice boxes, and then selling them. So what else did I do I used to buy bicycles, I would fix them, tune them up, swap out the tires, put maybe 100 bucks into them, and then flip them for two or three times the amount that I actually had bought them for. I used to sell flip black berries, which is I would buy blackberries from people that had them locally, maybe they were locked to a carrier that wasn't popular or often people would like have like 18 t blackberries, when they would they would move from the states to Canada, so I would buy them from them and then I would I would spend the like 12 bucks to unlock it. And then I would I would put a SIM card or I would put a like a 500 meg little SD card with it and I would maybe buy a couple of cheap cases online and then I would sell it as like this package comes with unlocked phone, little memory card and a case and maybe it sell it for 50 bucks more than the most of the things that go right so I would always find these like ways to arbitrage some sort of product that you have there and I still really really enjoy that that's why I kind of like doing this whole sticker thing because the whole process of like designing the stickers ordering them from China importing them into Canada, figuring out that it's cheaper to drive to Buffalo and cross the border and mail them you know, like yeah, that as it's it's a lot of work, but I always find like a lot of enjoyment out of that.

42
00:46:33,450 --> 00:50:16,170
Unknown: Cool. I really have no idea to be honest, I could go a lot of different directions with this. Like I feel like I could be a DJ because I I like and listen to Jay sky. I don't know if I could actually do that. But I feel like I mean I like and listen curate music I've got no you know, it's just a lot of experience in that regard and audio production and that sort of thing. It is very far off I would still get to work with computers in an interesting way. I also am a huge fan of turntable ism even though I'm not good at it, so I feel like I would I would definitely try something like that I could also do something totally different if we're like hey, this has to be way out of the line. I could be like a snowboard instructor because I love being outside and on the mountains I love snowboarding that kind of thing get out there and just live on the mountains and and teach people how to board I guess yeah, those those are two very different answers I guess. turntable ism. Yeah. What is that? You turn tables? Yes, you turn tables now it's typically like the the way that you would describe like a scratching artist a turntable list, a deacon garden Guy amram rat, you know, like the Ah, yeah, I know about that. Yeah, yeah, sir. Table ism. I didn't know that. That was the thing. That was what it was called. I knew that like that was a job but yeah. Battles i've i've a lot of friends with setups, turntable setups, and I would love to get good at scratching to be the point where it could be like a thing. There's this thing called the the DMC championship, as I called the championship, the DMC maybe the word see in the DMC is championship, but it's it's the turntable championships really. And let me actually Google that. Yeah, DMC world DJ championships, so they say it. And these things are incredible to watch. So I've been to DJ battles. And I'm a huge fan of it, although I do not do it. So. Cool. I think we got time for one more question. You want to pick one out? Sure. Although I actually have a third answer to that question. It just came up to me. Oh, yeah. Sorry, is what I would be doing if I wasn't programmed, like I always frequently tell my wife that if I was didn't have to make a living like if I just had infinite money. This is what I would do. So I guess this is the answer to this question. What I would do is I would develop a video game that's a spiritual successor to cruise in the USA because I really want that. I'm very aware that most people don't want that. But I would probably work on video games. That'd be cool. And who doesn't want a sequel to cruise in the USA? I've never heard of that. Let me see cruise and do a USA you never play. We used to play cruise in the USA crews in the world and crews and Exotica for Nintendo 64 constantly love those games. Ah, yeah, I know this game. I used to play this. It's funny. I thought it was something when I was a kid. We had this like, like when I was in kindergarten like, like you used to have like a DOS computer before windows 95 we had this game called cross country Canada. It was like it was like Oregon Trail but instead of like, instead of like dying from dysentery you would like get like shanked by you would pick up hitchhikers maple syrup. Like Yeah, they would steal maple syrup and you pick up hitchhikers and they would steal from you or you forgot to luck lock the truck overnight then you would get robbed It was not I think about it. I wonder if it's still online cross country Canada. Someone didn't say sorry to you. After wronging, you 1991 it came out. So it just google cross country, Canada on YouTube. It's, it's hilarious that this was a game, I'm gonna check it out. Okay, last one is from Nick Roach, as a freelance developer, what

43
00:50:16,170 --> 00:51:45,960
Scott Tolinski: are some good questions to ask a client before taking on their project? There's a lot of questions. Because if you take on and agree to a project, and then you find out afterwards, that this thing sucks, it's way harder to get out of it than it is. So obviously, budget grant the budget, talk about, you know, if your time goes over, if the amount of time that you would have to work on this project is there room for extra budget, you got to talk about things like feature creep, like where they just keep adding on and adding on and adding on. So you're gonna really want to have a good idea of what this thing is exactly, and what it needs to do. Like, let's say, Oh, it's just a blog, and then all of a sudden, it's a blog with a web store, and this and that, and then that's way outside of the agreement, right? So you're gonna want to make sure you have a really good handle on what exactly this project is, what the scope of it is. And you're going to want to make sure that you and the client, both are on the same page in that regard. So again, asking the scope of this project, how big do they see it getting? What do they see it looking like? Do they have designs already? Is this a full on this is just a dev project design project. You know, I also like to talk about preferred communication methods. So much of this is like the problems that come up in freelance projects end up being Yeah, on occasion issue. So do you like to do you want to do like a weekly overview, or actually just learned that bi weekly? is technically every other week? Right? Is it? what's the what's the word for no price? weekly?

44
00:51:45,990 --> 00:52:14,130
Unknown: monthly, bi weekly, twice weekly? Yeah, whatever, twice weekly, or however long? It's, it's totally inconsequential to this conversation. But yeah, so so exactly how they like to communicate, what are their best ways to communicate? What do they want to know? Do they want micro updates, macro updates, how you're working? Do they want to see progress? Do they understand how the progress that you're showing them is going to look? But again, getting communication stuff defined in in up front is going to, you know, be a big deal? I think.

45
00:52:15,360 --> 00:55:33,870
Scott Tolinski: Yeah, I agree as well. I think, in addition to that, some important questions is to ask your your client is like, how do you make money? And that was the thing I always ask them, because at the end of the day, usually, this is someone that's running a business or a cause I also did. It did a website for like a big Food Bank locally here. And like, like, what's the end game? Like? People need to figure out how to use the food bank? And people need to figure out how do I easily donate to the food bank? Right? Those are two major goals. And it's important that you as a developer, don't just be like, Oh, do you want to use sass? Because using sass has no, it doesn't have any matter to the end game of them trying to feed the hungry and, and get access to unused food, right? Or, like a real estate agent. At the end of the day, the real estate agent wants leads, they want people to find their website. So search engine was really important there. They want people to fill it out with their email or their phone number. Because once you got that, then then the real estate agent has them right. So you really need to talk about like, what is it that you're trying to do with this website? And then get into the the important things of like, Okay, do you need a map? With all of all of the listings on the page? Do you need the ability for people to buy things? If if you need people to buy things? Do you need the ability to manage your inventory on the back end? What does shipping look like? And you really have to go down the rabbit hole of finding out all of these questions, because if someone just says, a store, or an image gallery, then it becomes it becomes really blurry. And that's where disagreements can contend to arise, as well as they might not necessarily know what they want, right? Like you. It's your job as a web developer to ask the right questions, to figure out what they need. And then you will come back and propose things to them. Right? Like, I remember when responsive design came out. It was really important for me to ask questions about like, who their customer was and and come back to them and say you should do responsive design because XY and Z not do you need it to be responsive because they don't know, right? You told me I always hate that. I always hate that when we have people come work on our house contractors or, or I learned in the UK they called builders. And then they just ask you questions like, oh, like, what do you want here? What do you want? They're like, I don't know. You tell me. You're the expert here. I need you to help me. Yeah. And say like, do you want? Or this technical term? Yeah, I don't know. I don't know. Yeah, you tell me. Also things just like simple things like a logo. I can't tell you the number of times people assume that a website comes with a logo, right? And like that's an entire entirely separate process, entirely different skill set and like the whole branding thing people just assume often if they do business, they don't have anything. And you can, it could be an opportunity for you to upsell them on things like a business card or pamphlet or design system or things like that. So ask as many possible questions as you can just because otherwise you're gonna get burned. And I always hate hearing stories of people where I tend to find a lot of people in freelance, it's always like them against the client, or like, Oh, my client doesn't understand this and your job, you're running a business, your job is to be on your client side, and to help them through that entire process. And that's what's gonna make you a good Freelancer board.

46
00:55:34,170 --> 00:57:06,180
Unknown: Yeah, nailed it. dope. All right, that's enough questions for today. We got a whole bunch more here. But please keep submitting them. We're gonna move into some sick pics. dick pics, I got a sick pic here. This one comes from one of my best friends in the entire world. His name is Devin current, his company is good hertz, good hertz, Co. and hertz is spelled h e r t z, good. h er Tz Ko, they do audio plugins. And these are like some of the most inventive brilliant audio plugins on the planet. You can even just tell from going to their their homepage that based on the design and feel of these things that they're not messing around, these aren't like, these aren't your audio VST s from you know, 10 years ago, these things are all brilliant, every single one of these plugins is interesting, exciting and unique in all sorts of ways. So if you're into audio production at all, if you're if you're, you know, hobbyist or whatever, you're going to find some really, really cool stuff on good hertz. And, you know, again, he's, he's, he's my buddy, but I'm endlessly impressed with all of this stuff, the amount of just, I don't know, exciting ideas coming out of his company is just mind blowing a he is like more so than any one like the person that I look at his work and be like, dang, I need to step up my game, because he's killing it right now. So check out good hertz.co. It's brilliant, brilliant, brilliant stuff used by a lot of famous musicians. So check it out.

47
00:57:06,330 --> 01:01:10,920
Scott Tolinski: Cool. My sick pick today is a book that I just listened to for the third time. And I recommend that you do the audio book of this one. It's by Derek Severs. And it's called anything you want 40 lessons for a new kind of entrepreneur. And it's only an hour and a half this book. So you can really easily digest it. It's almost like a podcast and Derek Severs is the guy behind CD, baby, where back in the day before, before, when you had a CD, if you wanted to be able to sell your CD online, you couldn't really do that unless you're part of a label and then later on when you want to get your your music into iTunes, you couldn't really do that. So CD Baby was like kind of one for independent artists in that and guess it's just got this fantastic outlook on life, about how to approach business and and how to do it so that you're enjoying life. Like sometimes I find myself like I'm running a business so that I can have the life that I want to live. And sometimes I forget that and like I get stressed out about, oh, my my advanced react course is taking much longer than I had hoped. And I'm really letting people down. Because it's not out yet. And oh, I really want to like get it done before I leave on vacation. And then then I realize like, oh, like the reason why I am running my own business is so that like I can go at my own pace. And I can make sure that I put out the quality that I expect for my customers and I don't have to sweat this or I don't have to hire employees or I can do whatever it is that I want in order to make this an enjoyable thing in my life. Right That's where I'm running my own business. So yeah, he's got this fantastic outlook on life really, really big fan of big fan of their servers. He's the one that put out that quote. If it's not a hell yeah, it's a no. Which I I've been living the last couple of years, which is like as new things come to me. It's if it's not a hell yeah. If it's like maybe Do you want to come to this conference? If it's not a hell yeah, it's a no which is is such a good good mantra for for when you have too many things coming your way. So check it out. It's called anything you want by Derek Severs. And I recommend that you grab the audible book because it's written by him and he's he's his just voice the way that he his voice just fits the the tone of the buck perfectly. Do you subscribe to audible? Yes, I do. I I kind of like it. Sometimes I get too many credits because and then they don't let you keep more than six credits. just annoying, but audible also will refund a book, which I've done many times if the book is no good. You just ask for your money back so there's no there's no sweat in getting a book that looks good. And then and realizing No, it's not like I got this book called The 10 x rule and not good at all. Got that refund. It sounded so good. 10 X. I want to be 10 x one x right now. Yeah, but it wasn't feeling it at all. So I i refunded that one now you subscribe to Audible. I don't but I'm considering it because I've just been buying And do google play store just like whenever I want one, I'll just get it. And I feel like I've bought more than one a month. So, or at least one a month at what it would be. What is the audible subscription? I think it's 15 bucks a month. Yeah, I would it would be cheaper for me to have an audible subscription. Definitely the way I'm doing it. So yeah, I gotta do that. Any shameless plugs, shameless plugs, shameless plugs? When is this coming out? coming out next week? Yes, yes. Okay, my courses are still on sale, I extended it a little bit just because I kept getting emails about people missing it, which is one funny thing that happens, I'm like the it's running out and then feels like I missed it. So I've put it on sale, it's selling really well. All of my courses are currently on sale right now as I prep for my advanced react course. So the advanced course is going to touch upon using Express and express middleware. So you could learn a note, if you want to brush up on that, it's going to be using ESX It is so you can learn ESX for everyone, it's going to be using a sink await, which is also an ESX. And then obviously, it's going to be using react. So if you are shaky on any three of those things, spend the time leading up to my advanced react course, brushing up on whatever it is that you need to do

48
01:01:11,040 --> 01:02:55,950
sick for me, by the time you're hearing this the electron, I'm changing my branding up a little bit from being electron for everyone, it's going to be level one electron. That way I can keep things coherent, because I always have level two things. Yeah, like people were like, well, I got level two, where's level one? Like, ah, yeah, okay, this step there. So it's gonna be called level one electron, it's going to be out this week, the week that I'm currently recording this. So by the time you're listening to level one electron will be out, it's gonna be available on level up tutorials.com forward slash store for purchase, it's going to be on a limited time sale, or you can become a levelup. Pro get access to that along with every other series that I have. There's tons of other series, but the electron series is awesome. We are building an in react with create react app, and we build a markdown editor. That's like a journaling app. So it has metadata. You can create an edit already existing markdown files, you you point it to a folder, so maybe you sync that folder with Google Drive or something. And it's a full on journaling app, it feels very much like some of those apps like let's say like Ulysses or some of those journaling apps, but it's it's ends up you can build a cross platform. It's all in JavaScript react. And you learn a lot of node stuff, we read and edit files, save files, autosave change between files, build the whole interface with styled components, it is really super slick. And I even have a cute little icon for the application too. So at the end of the day, you end up having a little icon in your dock and a fully working markdown application that you can take and really really turn into something very real. So check it out level one electron available

49
01:02:55,950 --> 01:02:56,760
Unknown: now.

50
01:02:56,940 --> 01:03:22,530
Like Scott's laughing I say wicked so much. That is legitimately wicked. Thanks so much for checking out syntax this week. And as always, make sure to tweet us at syntax FM hit us up on Instagram. I'm at Wes Bos Scott is at lanky Delinski stilinski stilinski. Yes. Or at level up tutorials. Yes, get them through that 10,000 Mark, and we'll see you next week.

51
01:03:22,710 --> 01:03:23,580
Please

52
01:03:26,460 --> 01:03:36,210
head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you liked this show.

