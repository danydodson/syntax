1
00:00:00,360 --> 00:00:23,550
Unknown: Monday, Monday Monday open wide dev fans yet ready to stuff your face with JavaScript CSS node module BBQ Tip Get workflow breakdancing soft skill web development hasty as crazy as tasty as web development treats coming in hot here is Baracuda Bosand Scott El Toro Loco Tolinski

2
00:00:23,610 --> 00:00:24,480
Totally at ski.

3
00:00:25,920 --> 00:00:49,680
Scott Tolinski: Oh, welcome to syntax and this Monday tasty treat. We're gonna be talking about my new website. I got new website, and I tell you all about it. Other than the previous episode, we talked all about what's his new website. My name is Scott Tolinksi. I'm a developer from Denver, Colorado and with me, as always, is the aforementioned Wes Bos. Everybody. Hey, dude. How's it done?

4
00:00:50,160 --> 00:01:00,900
Wes Bos: Good. I'm excited to hear about your new website stack. Yeah, yeah. Let's talk about this look. And spelt. Oh, hey there, look at you. Yeah, yep.

5
00:01:00,930 --> 00:14:21,000
Scott Tolinski: You know, what else is looking spelt is Sentry our sponsor today, Sentry and Sentry.io is the error and Exception Handling tool that is going to really give you the visibility into what's going on your project that you might need, like what is actually happening? What are your users hitting, in fact, I see a little graph qL error popping up in mine right now that says photo ID is required. But a string was not provided letting me know that somewhere in my site, even though it's only occurred, let's see twice here in the past 24 hours. Something happened here where somebody is expecting a photo ID and a graph qL query and it's not hitting them. So now it's up to me to select that error. Hey, I can see that this was introduced in the latest release, I can see exactly when that was being hit. And I can dive into why exactly this bug is happening. Once I have completed this bug, I can say it's fixed in the next release, I can push it up and I can check for regressions, if this thing comes back, you know, I'm gonna get an alert, we're getting an email sent to me that says, hey, you know this thing you thought you fixed? Well, maybe done, you didn't fix it. So Sentry is one of these tools I absolutely know and love myself, we use it all the time both of us do here at syntax. So you're gonna want to check them out, use the coupon code at tasty treat all lowercase all one word, and you were going to get two months for free of Sentry. So check it out. So I think it's so funny that we I don't know when the last time you created a website was for yourself. But the last time I created 2014, we Yes, mine was 2015. So 2014 and 2015. We did not coordinate this. You've been working on yours for a long time. I had been working on mine for about a day or two. And we just so happened to launch them within 24 hours of each other somewhat, or 48 hours of each other within that coordinating that. And we took very different approaches. So we heard all about your approach in the last episode. So this episode, we're going to be talking about the approach that I took to build my site. my brand new website, my previous website, let me tell you was originally written in blaze with Meteor for no reason in particular, other than I was just using Meteor at the time, I didn't even need a database. In fact, it was so so much not needing a database that in 2017 I rewrote it with Gatsby to just get rid of the database. Gatsby version one knows pretty much it. It's like I don't need a database, the hosting is going to be like free to cheap, whatever wanted to use from style components. I did a nice little visual refresh at that time, too. And yeah, I mean, I've largely used my own personal website as a playground of sorts. But what happened was it just sort of sat there and sat there and sat there as these things do. And I didn't want to touch it because it was Gatsby version one, I didn't feel like being a playground because I didn't want to like learn anything with it. So it just sort of just stagnated. And so instead of taking the approach of like, well, I need to carve out some time to make a bigger website, I decided to do our f d relaxed fit development, where I just sort of toss some code at the screen and then push it up whenever I feel like and if it's okay, it's okay. And if it's not, who cares? Because that's the only way I'm going to get this site done. Best way. Yeah, right. Yeah, honestly, just get it up there who cares about it being perfect or whatever, just get it up. It's better than having a website from 2014 or 2015. And that's it. That's largely like my outlook on it. I'm never going to do it if I need to sit down for a couple hours and like really grind on this thing. So I just thought, hey, it would be a good opportunity for me to do this. I obviously want it to be some sort of a static site generator at this point, because there's no database, there's no need for that kind of thing. If I'm doing blog posts, they're probably going to be something like markdown. So I started to look at different projects. I could have done it and all sorts of stuff. I could have just done it in Gatsby, but since I wanted to do something fun with it. I chose sapper, which if you are not familiar with sapper, it's sort of the next .js equivalent of word nuxt equivalent of the spelt world. And it has built in static generation out of the box, super easy static generation. It does the folder route thing that next JS does in many of these other platforms where your folders are sort of determined the whole routing system, the site, it does a lot of stuff for you. Let me tell you, spelt does so many little things for you that it just makes developing in it and a breeze like I haven't had to go hunt for any extensions, any extensions to spelled itself because spelt does the animation portions of things. Like for instance, I have all these different page transitions. And these are all built into spelt itself. I didn't have to go hunt for a specific animation library. I didn't have to hunt for anything. I'm not using anything like styled components, really just CSS. I'm not even using sass on this. It's just straight up CSS. We're using just markdown files for all of the individual blog posts, which is kind of wild that I'm even doing a blog because I've never done a blog before really. In fact, the only reason I'm doing a blog for this site is not so that I maintain some sort of a blog of constant posts, but so I can use it as a digital garden. Are you familiar with this concept of a digital garden? Is that like the CSS Zen garden where you can restyle the thing? It's not, it's not like that? No, what is it? Okay, so I first heard about this from Joel hooks. And then I've also heard about it from Sean swix. And so I've been hearing this this topic, a lot of just around about a digital garden and like what this whole thing is. So I don't know if you are familiar with Maggie Ableton, she does all those really neat illustrations for a cat and a bunch of other people. But so she did this really amazing Twitter thread her her Twitter is at Maple tons. She did a really amazing Twitter thread a few days ago about digital gardens. And it was like a multi step one where she showed off a bunch of different people's digital gardens. And it's you could think of it as like a personal notion like a personal brain dump, of if you're reading a blog post, or you're watching a video, you pulling out the key concepts like taking notes like you would in school, but like your bullet points, and then just throwing them on a page. And like, it doesn't matter if it's a well formatted blog post, it doesn't matter if the English is good, which are all big pluses for me, and considering I'm not a good writer, so I just throw a bunch of stuff on a thing. And it's like our own personal blog space that is SEO friendly. But it also, you know, access a place I can go back to for information anytime I want it. So I built this with the idea that it could be a digital garden for me, easy to update, easy to add posts, easy to do those things. It is no API, no database, it is hosted on Netlify. So that's really nice and easy. You know, we have that continuous integration stuff that they have their CDN all their stuff that you don't want to set up. So I'm a big fan of Netlify, as we know. And of course, if I'm going to host a site like this perfect place for it. Okay, so let's talk a little bit about the site. I used to have a dB. Did you ever have a I guess you did. Because your previous I was on WordPress, I dropped that DB DB life in 2017. And have never looked back. Because that's like DPLA. Yeah, I don't need a database for my personal site. It was just, you know, my personal site was like, three or four additions of my personal site. So I used to redo it all the time on Drupal. And I just remember thinking like, what a heavy handed approach to that. Yeah, you think you get like all those neat things with the image compression and whatever. But like, dang, that's a heavy handed way to do that. I don't need to CMS. Yeah, that's a lot to maintain. It is. And since I'm a dev and I want to just throw a markdown file and just throw a markdown file. So I'm largely just using this as the playground for sort of wild animations that I don't normally do that I'm like too afraid to do on actual things. So I have this like really neat animation that's sort of ghostie it, like stretches, and does all this neat stuff here and fades away and blurs and this is all done with spelt default animation library out of the box. It's really nice and easy. You can do really custom animations with it. How does it stretch it? Because it's, I guess, just with the Transform, hey, so I'm doing a blur and doing a very slight translate. I'm doing a a scale y. And I change the origin to be the top middle so that it starts at the top and pulls it down. And then I'm doing a slight skew as well. But and then maybe not so much. And then an opacity change. So just like random stuff. I was trying to get it. You won't be familiar, but you might be familiar with this. If you've ever played the video game doom. Yes. Oh, yeah. Actually a long, long time ago. Obviously. It's a super old game. Yeah, there was like some transition and do Where does that like stretches out look kind of neat. There's this like desert and stuff. So obviously it's not going to look the same as mine. But that was definitely the inspiration for this. I was definitely going as furred terms of visual design, which is certainly not complete yet. I was going for brutalist. I wasn't going for like, ugly, but I'm definitely going for more brutalist, it's clearly like a black backdrop I text large text, I'm using the CSS color blue, which no one does when they're doing brutalist design nowadays, there's something just blue, yes to blue. And that's pretty much it. The whole thing is just meant to be just sort of a place for me to goof around, which is, you know, something I'm into. And let me tell you, one of the coolest things about working in spelt here, let me pull this up. I'm going to pull up the homepage. Let me refresh this homepage, this whole thing. Let's see, it took 150 milliseconds to load. And it looks like 60 k bees total. So really pretty small site here. I'm trying to even see where those 60 k bees I bet all of those 60 k bees get to guess what? So my site is 60 k bees to load, right? Guess how many of those cavies are from a font? How many 40? Wow. So two thirds of the download time of my website is spent downloading a font. And so the actual site is tiny. And that's really part of the benefit of using spelt, the whole thing compiles away, and you never have to ship the framework. It just ships code ships JavaScript running anywhere you want. And I'm a huge fan of this platform overall. You know what I might even it seems wild considering I just push this thing up. But Sean swix is done some sort of spelt SSG thing himself. Yeah. Might take a look at what he's doing because he describes sappers approaches a bit heavy handed. And I think this is maybe just extrude up SSG. We're sappers trying to be, you know, server side platform if you need it. That's it. I haven't done Oh, yes, he has a YouTube video giving a talk on it. And I know it's still pretty early days for his project here. But yeah, might give this a try. I know I think his website itself is doing that. I know his website is on its felt. So yeah, pretty cool stuff. Man. I'm a big fan of this, I think there's a large opportunity for me to improve it based on mobile styles and whatever. But you know what, like I said, relaxed fit development, it's going to just be here, it's going to be easy for me to add my talks, my appearances and all those things on here and just drop them in whenever I want. That sweet continuous integration from Netlify. Totally, I think 2020 is the year of the personal website. Right? You know, there was, um, tilbake you ever hear of tilde a club? A No. So tilt a club. It was like an exclusive social network, which is basically like trying to be like a web ring, where they had limited spaces in here. And it's funny because I actually got a tilde a club, or the whole thing of a tilde a club is like only runs HTML and CSS. And the goal of a tilde a club was to take us back to the web of yesteryear. Oh, the website is tilde a dot club. And my tilbake club that I had, when I had it, I don't know if it's still even exists. Let's see if I can find it as 20. I don't even know what it is under. But my today club was much more like this current iteration of my website than my actual website was like, I had this tour de club several years ago. And it was to do all of the things I was to, like, I don't want to say scared because I wasn't literally scared. But I didn't have the guts to do on my actual personal website. You know, I thought my personal website had to be this pristine thing that had to just exist and be, you know, perfect to attract customers. And guess what? I don't care about attracting customers. I don't care about that stuff. I just want to have some like neat place online. Just like I did back in the days of MySpace. Awesome. Yeah. Oh, that's pretty cool. Check it out. What is it? He didn't I don't think he even said the URL Scott to lynskey.com. Scott to lynskey.com. The link is, is everywhere. I have it in the show notes if you don't want to figure out how to type my entire last name.

6
00:14:22,620 --> 00:14:26,940
Wes Bos: Awesome. Well, thanks for sharing that out. I'm excited to see what else you add to this thing.

7
00:14:27,210 --> 00:14:31,050
Scott Tolinski: Oh, yeah. It's gonna be fun. The whole thing is for it to be fun. That's the goal.

8
00:14:31,590 --> 00:14:32,280
Wes Bos: Beautiful.

9
00:14:32,460 --> 00:14:36,120
All right. Thanks for tuning in and we'll catch you on the next one. Please.

10
00:14:39,210 --> 00:14:48,960
Scott Tolinski:  Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

