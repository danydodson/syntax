1
00:00:01,319 --> 00:00:21,990
Unknown: You're listening to syntax podcast with a tastiest web development treats out there. strap yourself in and get ready to live ski and West boss. Welcome to syntax. This is the web development podcast with the tastiest web development treats with me as always is Mr. szalinski. How you doing Mr. szalinski? Doing good. How you doing, Mr. Boss?

2
00:00:23,070 --> 00:05:00,000
I'm doing good. I'm doing good excited to get into this potluck. If you haven't listened to a potluck before. It's where we answer your listener submitted questions. So if you've got a question you'd like us to answer on a show a lot of these questions today are actually just follow ups from previous episodes. It's just kind of cool. You can submit your own@syntax.fm. And there's a button in the top right hand corner it says ask a potluck question you submitted in there, we find those really helpful because it also gives us ideas for just entire shows as well. Sometimes the questions are so good, we've put them into an entire episode. Yeah. So thank you. For anyone who submitted a question we are like, if your question isn't answered, I should state that we are consistently overwhelmed with the amount of questions that come in. So there's a lot of questions to get here. So if we have not answered yours, I'm very sorry. But there is a lot. So we picked some of the ones that we think are going to be the most useful for you today. You want to get it kicked off? Yes. Oh, first, we should say today we're sponsored by Sentry, which is going to do all of your bugs and error tracking, as well as Freshbooks, which is going to do all of your invoice tracking and customer payments and whatnot. We'll talk about them both partway through the episode. First question we have here is from Mr. or Mrs. Anonymous, what advice would you give somebody wanting to get involved in the open source community coming from closed source full time work? How do you make time to code on the side with the balance of life? And family? This is a good question. Because I think we get this question a lot from people where they're like I would love to, but I'd simply do not have any time left at the end of the day. And I feel like it would probably be worth it for me in some way or another. We'll talk about that too. Get involved in that open source. So what do you think Scott? Yeah, so for me, we've talked about this sometimes on the show before, for me, I think that you should not spend a lot of time away from your family to work on open source. And now I think some open source, people have the ability to take that extra time. For instance, when my wife was getting her PhD, I had a lot of downtime, and I had a lot of time to work on projects, right. But if if your family sort of waiting there for you to hang out with them, then hang out with your family do family stuff, in my opinion, it's probably better to negotiate some time at your work at your nine to five to work on open source stuff, you can market it as personal development time, time to become a better developer. And honestly, your employer should be happy that you're looking to become a better developer. Now, honestly, I'm realistic here. And I don't believe that every employer is just going to be like, sure, take some time and do some open source work. But I think it's at least worth having that dialogue to say, Hey, I would really like to be more involved in the open source community, it's going to make my work better, it's going to make the company's work better. And it would be nice if I could have a certain amount of time a week to do this open source work while I'm at work, because honestly, it open source isn't worth taking time away from your family. I think the question is, I think you should ask yourself is like why do you want to get involved in open source is it because you have these great ideas and you would like to you have a library or some examples or something that you want to just get out there and out to the open because you think it will help one developers in general or is because you're trying to just sort of boost up your own resume, because many potential further jobs. I think that it's important to note that most developers probably don't do open source work, it may seem like everybody's out there, creating these amazing libraries and whatnot. But I would say it's probably in a minority of actual web developers out there, a lot of developers don't necessarily have time, or they're they're working at a company where like legal just will not let them take part of their businesses code base and put it online for free for the rest of the world to have. So like Scott said, I think it's probably worth having that conversation with your employer saying like, this is what good developers do. I think we can make our product better by taking this little utility that we built for our website, extracting out into his own library, and then putting it up online, I think it's going to help our codebase in general, as well as it's going to help the greater good of the web sort of move forward. So it's worth doing that and seeing if you have it, if not, I think if even if you don't have necessarily time for building something, putting it out, even just doing things like blogging, posting side projects, everybody has to have a personal website. So you could throw that up on GitHub. I think that's a sort of a good start where you could cut your teeth in there. Yeah, I mean, there's there's a lot of stuff here because, honestly, you could spend a good amount of time open source working at any point right in work or out of work. It's funny because we live in sort of a fantasy world where we don't have to deal with legal jargon.

3
00:05:00,359 --> 00:09:40,170
We don't have to deal with that stuff. I remember when I worked at a job that had to deal with legal departments, we had to get every single library that we used in the project approved by legal, we had to if we wanted to use a library in our application, we had to send it to legal, they had to check out the license and make sure everything was okay for the project that we're using. And I don't know that it's funny because the world that we live in is so far removed from how that works is, I know a lot of developers do struggle with that sort of aspect of thing. So it's a it's definitely an interesting conversation about what stuff you can open source and what stuff your company's even going to allow you to do there. Okay. So the next question here is from Andrew McKeever. And the question is, in better living through side projects, which was one of our past episodes, for those of you who are first listening, go check it out. You mentioned making your life easier as motivation. My question is, how do you get your data from sites that have may not have an API, web scraping any tools that you would recommend my wife and I are currently searching for a new apartment, I'd like to be able to pull all the new apartments from these into one nice app, but I'm stuck on how to get all of the data. So we have a show on some of this stuff. And I think it would be really helpful you know, check out if you haven't already Show Episode Number 60, which is the undocumented web web scraping private API's proxies, alternative solutions. So the alternative solutions and web scraping bit are probably going to be your your your best friends here. And there's a lot of web scrapers online based on your level of commitment or involvement to the project. There's some that do a lot of stuff for you. Yeah, I'll just talk real quick about how I did it. In this case, you can go back to the undocumented web example to hear sort of all of the possible options but so I scraped Kijiji, and I scraped Facebook. And how I did these is first for Kijiji they have they don't have an API, but they do have a RSS feed that is instant. So previously, in the past, I had scraped Kijiji, which is online marketplace, and they their RSS feeds were only updated every hour or so, which wasn't enough for me. So in that case, I just scraped the page. And then and then how it works is like you almost just use like document query selector. You select everything with a class of like item or like you have to do a little bit of investigative work to figure out like what is each one of these wrapped in whether it's a class or it's a descendant selector, or each of them have like you, maybe you find the h2 and then you find the parent of that h2. So you got you got, I gotta get clever with it. And then sometimes they change their markup, and your whole scraper will break I've built a in this is like six or seven years ago, but we built a daily deal scraper, and we broke, we just wrote these profiles, that would be really resilient. And then when they broke, we just had to go in quickly and update the profile that would adjust to the scraper. So that's, that's one way. The RSS feed is another way, what I did there is i just i parse the RSS feed into JSON, which is there's lots of node modules out there that will convert XML to JSON. And that was pretty simple. For the Facebook marketplace, they use graph QL. And at first, I was frustrated because they don't have an API for the marketplace at all. Facebook does have API's for almost everything else, but not for the marketplace. So in that case, I opened up a, I think the one of the best things you can do first is open up an incognito tab and try to take your whole like logged in authentic ation out of it. Because you could you could accidentally be copying some tokens that are sensitive, and putting them up on GitHub. So I opened it up. And luckily, you can access the marketplace without being logged in. So that was one good one. And then what I did is I just did little searches. And then I watched the Network tab for what was happening. And I sort of like reverse engineer the graph qL API, I still haven't figured out pagination on it. Although you can see the pagination working as you scroll, I could not figure out for the life of me how to actually pass like I was passing cursors, which in graph QL. If you have a cursor, what that means that like items one to 10, and then you can pass a cursor for, it'll tell you what the cursor for number 11 to 12 is instead of saying give me page two, you just say gave me 10 items after this cursor after item 11. So that's how it worked there. Which is pretty interesting. But you kind of got to get a little bit sneaky with it. And even then you sometimes will get blocked, like I was running it too frequently on my own machine. And then Facebook just blocked my IP address from accessing it. So I had to turn it back. And then when I put it on my server, my server had a fresh IP address. And I think I'm running at once every 10 minutes for Facebook, and that that hasn't been an issue for running for about a month now.

4
00:09:41,220 --> 00:10:00,000
It's funny because the Network tab I think is sort of underrated in terms of how good it is, or really understanding the websites and how they're working. I mean, you can see everything happened in the Network tab. You see every single request that's made and I use the Network tab so much when I'm investigating how a website's working, what it's doing, where it's

5
00:10:00,000 --> 00:11:12,570
Loading assets how it's loading assets from. I mean, particularly I, I'm in the business of video streaming here, and I'm interested in moving my video streamer, right. So I'm checking out other websites, and I'm looking at their network tabs, and I'm seeing how they're streaming their videos, what their, what their strategies are, and stuff like that. I think it's just a really interesting place to dive into websites. It's underrated in terms of just how much you can glean from a website from the Network tab. Yeah, I particularly like the right click Copy as fetch. in Chrome Dev Tools, you used to be able to just copy as as curl and in a curl as you can on the command line. And then you had to convert those equivalents. But if you copy as fetch, it will copy over all the headers that are needed. And generally, the way it works is that you get like 300 headers that were sent or like 20 headers, and then I slowly just, I make sure it works in a fetch request. And then I slowly go delete header by header by header. And then as soon as it breaks, I know that header is actually did it almost always, there's only like two or three different headers that are actually necessary. And the rest are just like overhead and tracking and things that aren't necessary for the request to go through. This is like CSI, web dev, CSI.

6
00:11:14,220 --> 00:11:31,830
I think it'd be fun to do a video on like, one point, maybe just throw on my screen recorder and be like, Look, I'm trying to figure out how this thing works. They don't have a public API, but I'm going to proxy it myself. So maybe next time that I stumble upon that, I'll just throw my screen recorder on show my process for doing that. Yeah, that's very 2019 I'd be watching.

7
00:11:32,910 --> 00:13:28,320
Awesome. Alright. Next question we have here is from Dom from Munich, Germany. The question is, do you think react aims towards a world with functional components only, or will class based components always play a role, by the way, keep great show Keep it up. So I think this has to do with react hooks, where previously before react hooks, we had react components were like they were class based where you had class, my component extends react component, you have a render in there. And you can add all these lifecycle methods as well as add your own methods to that class, then we had functional components, where we're simply just takes in props, returns JSX. Now that we have hooks, you can have that secondary type. But you can also introduce things like state and lifecycle methods and all that good stuff that comes along with react hooks. And now people are asking, does that mean classes in react are dead? Or do you think about that, Scott? You know, I don't think they're dead it That said, it's funny. I want to preface this i i don't think they're dead by any means. Because folks were just released a couple of weeks ago, and giving functional components or function based components that much more functionality, but to be honest, since hooks have been released, and even when hooks are an alpha, still, I have not been writing class components. I've been only writing function based components. I've been using hooks instead of lifecycle methods and state. Yeah, I don't know. I think it's too early to tell. But I personally have not been using classes, and I haven't necessarily found a huge need to be using them. So maybe they are dead? I don't know. Yeah, I don't want to be the person that says classes are dead and react, you know, I don't want to be that person. The official response from react is from the Facebook mothership is No, they're not dead. They are here to stay. This is just an additional syntax. And then sort of what you see from our industry, which is people who love to switch things up every six minutes is that you are talking about me and I feel personally attacked.

8
00:13:30,330 --> 00:14:47,550
I'm subtweeting you right now. But people just say like, Okay, so this is a new way to do it. Therefore, the old way is terrible and undead, and why would it even be that way? So I don't know, I think that we will see most people writing stuff in the future with hooks. But that said, you still if you're learning react at this point, I think you still need to learn both. Because if you go into any sort of code base that was written that was not written in the last week, it's going to be entirely written in classes and just regular functional components. So Oh, yeah. Yeah. No, I still advocate for learning classes. Absolutely. Yeah. Yeah, absolutely. Those aren't going to go away anytime soon. Maybe we'll follow this up in like six months or so and see where we're at. right with that? Yeah, definitely. I'm interested in this very much. I mean, I just recorded my hooks course. And I've been using hooks and I've been using function based components. And I'm totally sold. But again, just like the React team is recommending I believe it or not, I've not been rewriting my entire app to use hooks. Yeah, I've not been refactoring everything. I've just new components here and there to use hooks. I'm excited that we get to add into the title of this podcast is our classes dead? Yes, exactly. That is the click Beatty title ever.

9
00:14:49,140 --> 00:15:00,000
That's great. One of the things we don't want to be dead is your website. And one of the ways you can find out if your website is dead or not, is by using some error tracking tools and one of our favorite error tracking tools.

10
00:15:00,030 --> 00:16:22,440
Over here at syntax is century. Now Wes and I both use century This was one of those sponsors that came to us. And we were immediately like, yes, we would love to talk about your tool because we both love, love, love century century is a, it's an error tracking tool that keeps track of all of your bugs. And it puts them into a nice final interface that allows you to track whether or not they're completed allows you to understand see some visibility, see what browser who look kind of user did this, what were they doing the error track, and you can send this error directly to GitHub to keep track of it in sight of GitHub issues as well century is one of those tools that you just want to try out you want to experiment with you want to use, you want to see how it improves your life, we definitely want you to check out century@century.io use the coupon code tasty treat and get two months for free. Seriously, put this code in your back end, put it in your front end, check your errors and find out about these errors before your users let you know that they're happening so you can fix them. Thank you so much for century for sponsoring this episode of syntax. Yeah, can I want to add one little thing to this? I'm just looking at my century as we're going through this right now. And there's one specific error that I have here that's only showing up on Firefox for iPad, is that even a thing? It's gotta be right. Is it is

11
00:16:23,610 --> 00:16:52,950
this. So like, usually, like if you have something on the iPad, the errors are the same in Chrome and Safari because it's all the same engine. And the same with Firefox as well. But this is a little issue that's only happening on Firefox for iPad. And I think that's such an interesting little piece of information. It's happening to quite a few people, I can see that 39 different people have had this specific error. And I'm gonna have to take a look at that as a new one that just popped up for me. Nice, bizarre.

12
00:16:54,330 --> 00:19:41,130
I love buying through century it's, it's addicting. To me, it's very addicting. And this is outside of any sort of ad read. I just like go through it. And I like this book is occurring frequently. I need to take care of this right now. So I'm a huge fan. Cool. So this next one was really, really nice little message here. So somebody really had a nice message from our home automation episode that we just did. If you are interested in home automation, go check that one out. They said just feedback on the recent Smart Home pod cast. I really enjoyed it. I have about 48 Hue lights throughout my home. Wow. And use If This Then That applet on my ring doorbell so when someone rings, the door, all of the lights in the house blink so I can see when an Amazon package arrives or someone is at the front door etc while I'm working. wearing my headphones. He mentioned his Bose QC three five. I one ones those noise cancelling headphones. I'm getting qc 35 version two they have like Amazon Alexa or Oh, yeah. on them. Yeah, I have seen those. Yes, that's nice. And of course, listen to your podcast. Thank you. I'm a huge fan of the podcast and federalist number I really commend. But you guys are great. Thank you. Thank you again. And thanks for all the stickers. Well, here's the if this and that link, we'll put that link in the description of this video. Wow, you have 48 q bulbs. I have a question for you. How do you get people and by people, I mean, my lovely wife to stop turning off the light switches when you use the hue bulbs. Because when you turn off the light switch the hue bulbs don't work. That's a huge concern of mine. I'm like thinking about getting smart switches just to prevent that from happening. So yeah, how you do that? That's awesome. That's that's really cool usage of this stuff. Yeah, I was like we hear from a lot of people what another thing that a lot of people told us is that I was concerned about the hub not reaching across the entire house. And a lot of people told me no, the bulbs work as a mesh network. So as long as one ball is close enough to the hub, then they will create a mesh network throughout your entire house. And they don't all have to be close to the hub which is awesome. I first of all, I think that this flickering all of your lights is absolutely ridiculous. The best way possible. And second, the other if you turn off the switch then the ball doesn't have power to actually run itself and then that's like one reason why I don't like it is because then you can't just use a regular light switch to turn these things on and off. That's a problem that I have with my my ring floodlight cam. If someone turns off the switch, then the camera powers down because there's no power to the actual the the unit on the side of the garage. So the way that ring remedies that is they give you a sticker that says do not turn off your light switch.

13
00:19:42,570 --> 00:19:59,550
But I think that the the best way to probably remedy that, as Scott said is just to like wire that thing always on and then just have some sort of switch. You can put these switches anywhere that just allow you to flick it on and off and it's just a it sends a signal not it doesn't actually cut the power to the actual switch. You know, it's funny

14
00:20:00,000 --> 00:20:44,940
Episode that we recorded I've been I when you mentioned routines and Google Home. I did I, I admit, I did not know that routines were a thing. And Google Home is pretty new. Yeah, I've always done my routines in the apps themselves. So I had a Philips Hue routines, I had smart things, routines, I had routines built in there, but I didn't know that Google homes routines are so dang awesome. Last night, I spent a whole bunch of time I made a routine. That's my like, get ready for the day routine, where it turns on a desk. It sets the temperature correctly in our house. And it plays a 90s rap music playlist on my Google homes so that when I'm getting ready, I can listen to some jagged edge or something.

15
00:20:47,700 --> 00:24:59,820
That's great. I like that a lot. So thanks a lot. I know that wasn't a question. But thanks for the feedback. And I was like hearing what other people have their setup. We use Twitter for this a lot as well getting people's feedback. If you aren't on Twitter, maybe you you should. We're at syntax FM, a lot of the after show banter and a lot of like really helpful follow up comments from people get retweeted on the Twitter. So if you aren't following it's at syntax FM on Twitter. All right. Next question we have here is from Shay mylol. This is not a question I just want to say love from Israel. I love your podcast so much. You to speak so loud and clear. Thank you a about interesting stuff. So I thought that was cool. But just keep that in there. Anyways, the next question from anonymous, nobody giving us their names today. What do you do in the event that your client sends a thank you card along with cash that is much lower than what you were preparing to invoice from? Would you remove it from the invoice ask them what they prefer etc? I'm stuck in an awkward situation that doesn't cover it doesn't even cover the hosting costs. Thank you. So I thought this question was ridiculous. Don't use your card with cash inside of it. What would you do? If someone a client who you are going to build sends you cash in a card? Yeah, I would. Okay, first, how much lower rate is the invoice for 10? grand and they sent you a couple hundred bucks? That would be that's what it sounds like? It sounds it says it doesn't cover the hosting. Yeah, very disturbing. If it's okay, so if it's like 50% of the invoice or 20% of the invoice, what I would do is send a second invoice with the remaining amount owed, make it obvious, if it's obvious that they aren't going to pay you in that the disparity is so huge, you need to have a tough conversation with this client, I would start this conversation in a non judgmental non assuming way. And I would say hey, I noticed the invoice wasn't paid in full. Would you like to break up the remaining payments into smaller chunks? Would you like to put it on a schedule? How do you want to finish paying off this invoice? I don't assume that they're immediately not going to pay you. It sounds fishy. It sounds like maybe that's what they're doing. But again, I would take approach to word sort of a little bit lighter. Make sure you have that expectation. nice and clear. Our next episode coming on Monday is about communication. So maybe you can learn a little bit about some of the communications suggestions that we have in that episode. But yeah, this one's tough, because again, I wouldn't immediately jump to they're trying to screw you, you know, if you pay me kind of situation, but I would make it very clear that you expect it to be paid in full. Yeah. So something fishy is going on here. I think the the key in this question was that it's much lower than the than what you were preparing to invoice them. So it sounds like he hasn't even sent the invoice yet. And they just sent something ashover. So I think communication is key. Do they even know what the invoice is for? Did you even communicate to them? This is going to be this much or did it was a kind of wishy washy because they might think that this is what it's worth, and they might not it might be a gift. And a lot of lots of cultures like to give just cash gifts. That's that's something that maybe they are appreciative of what you're doing. And they're just giving a little bit extra because they appreciate the hard work they put in. So there's so many more questions that come up from this specific question. But I think that it's important that you just make everything as clear as day and just communicate with the client as to what's going on. And these things can generally be avoided and solved quickly without trying to play like guess what's going on with them. Yeah, yeah, interesting one and I think some of the details here are very important some of the details that we we didn't get in the question, but again, tread lightly. Make it clear that you expect to be paid again if you haven't said that invoice yet then I wouldn't necessarily assume anything but just yeah, communicate. So this next one is from Zubair Thank you Zubair for pronouncing or giving us a pronunciation that was zu hyphen, bear. Like you're seeing a zoo and a bear in a zoo. And I really appreciate that because those are two words that I can say, kind of like the bear series we had a couple of months ago and just like the bear seers, just like that. So thank you Zubair. I've heard a lot of good things about next JS what

16
00:25:00,000 --> 00:28:34,950
exactly is it? How does it compare to just using create react app? Is it worth to migrate a small side project that I have to next dot j? s? Yeah, I think that we should probably answer this one assuming that they had listened to our last episode on what is next Jess versus Gatsby, because we went into that you can go in that episode was really well received one of our most popular episodes yet. But one thing we didn't cover in that episode is like, what's the difference between Gatsby index versus something like create react app? You don't take a stab at that? Yeah, I mean, the big difference is that create react app is really just a platform for getting started getting up and running with react, it builds your application. And it can be really great. If you just want a there's two parts of the question here. It's what's the difference? And should I move my app. So the difference is really that next j. s is a platform that gives you some additional things in web developer in web development, for instance, it gives you server side rendering, it gives you an opinionated routing system, and it gives you data fetching, or it gives you at least a lifecycle method for doing data fetching it. Basically, it makes some decisions for you to make your life easier. in some regard, if you want to do server side rendering, I don't necessarily recommend taking your crate, React app, and then messing with your web, pack config and writing all the SSR stuff. Because I've done it, it's not a ton of fun. So should you migrate the project, I don't know, I wouldn't migrate the project. If it's a side project. SSR is great for a lot of things. But if you're not looking to have this be like a serious, serious thing, then I don't necessarily see any reason to, not to mention, if you already have the side project up and running with create react app, chances are you already have a routing system in place, you already have some of your data stuff in place. So you would have to be rewriting a little bit of code and maybe restructuring your app a bit just so it can work with next j s and then out of it, you get additional next JS features. But do you need those features for the side project? It's a great thing. It's a great platform for building sites on but I don't necessarily think I would migrate something that is just a side project to it for no reason. Yeah, I think the main difference for me with create react app. And next is, if you want to get up and running quickly create react app is really good. So the idea behind create react app is that it just works right away when you create a new app. However, if you do want access to all the guts of your product, the Webpack config, the Babel config, your es lint settings, all of that stuff, if you want access to that you have to eject from that. And then it will give you access to all of the config files. And you can you can do it however you wish. I don't wish ejecting on anyone though, just because of the pain that is having to do your own Webpack configs. and whatnot. I'm a big believer that you can just use tools like you can just use create react app without having to eject in most cases, or you could just use next jass without having to do a custom config in most cases. Like Scott said, the router is a big one. Because next js is opinionated and comes with a built in router. Whereas if you just want to do it yourself if you want to get up and running or maybe even like if there's just like a little application on your website, like maybe just a part of your website is built in react react, you can do that with next j s but that might be a good use case for just doing that little piece in in create react app as well. So it's kind of like a weird area, but I wouldn't move it over if I were you. It's probably not necessary. Yeah. Next question we have here is from Tim Smith. I take tutorials all the time for web dev. I've taken many of both of your courses. Thank you they are great. Thank you everyone's buttering us up today. Is this feeling really good?

17
00:28:36,300 --> 00:30:00,000
I am completely self taught and have zero comp site education whatsoever as well as your courses and other tutorials have taught me various languages libraries, they do not prepare me for real work, interviews or job no offense How do I make the jump from tutorials to real life? I think this is an awesome question because yeah, there's this like whole area of like hand holding which is taking tutorials and whatnot and just typing what we type and following along and then there's the real world where you get thrown into the pond and say swim swim back or build me build me this thing and there is a there's a little bit of like even as someone who who takes tutorials as someone who builds tutorials I'm not going to say like take this and you're going to be absolutely job right I get emails all the time from people saying like, if I take your course will I be hired for react and unfortunately no no you have to like actually put in some hard work yourself. So what do you think about this Scott? Yeah, this is one of those ones that I think is very important actually mentioned this a lot in my my content specifically because I think it's very important. It's something I've always done when doing tutorials. If you are following a tutorial, whether it's video or post or whatever, do not follow that tutorial, one to one I mean, you can but maybe watch it again and don't follow it one to one. Usually what I try to do when I'm watching tutorials is I try to take the source material

18
00:30:00,000 --> 00:35:00,000
They're working with aka, we're building a to do app, and I like to modify it slightly. Alright, what sort of like a to do app, okay, maybe a grocery list or maybe a resolutions app or something like that I take it and I do something slightly different than what they're doing. Reason being is, is that the moment that you stop following it and just just parroting out the code 141. Even if you're changing variable names from being something like to dues to recipes, even though it's like the exact same thing, kind of in the context of the application, even if you're changing those words, just ever so slightly, what it does is it makes you focus on what you're typing just a little bit more instead of just parroting out the code. So I really think that taking the source material, and veering away from it, and even trying to do some stuff that's maybe even a little creative. While you're following that tutorial. Hey, they're building a to do list app, that's just a simple one list checklist sort of thing. What about instead of a to do list app with that I can add maybe a To Do With a description below it and a date or something. So you're adding on to the content, making it a little bit more challenging to you. That way, when you follow along, you might hit some bugs. Now, this is a good approach for those of you who don't mind being in the weeds a little bit. And being in the weeds a little bit is one of those things that is going to come in so handy as you're growing. Because the time that you learn the best is typically the time when you hit a snag, right? When the tutorial isn't working, I get so many people that come and say, Hey, this is broken here. Here, I followed the tutorial Exactly. And the error message says clear as day, you know, recipe errors is not defined, well maybe, maybe read the error, the error says respires. Did you mean recipes? Oh, that's the answer. So you shouldn't have needed me to solve that issue for you. And you should take the time to read the bugs, get in the weeds feel the stress, not the stress, necessarily, but feel that sort of that pain point of trying to struggle through something a little bit, and you will learn and appreciate tutorials much more, I've always taken the strategy. I've always made them about something else than what they're actually about. And it's always paid off for me. Yeah, I agree. I don't necessarily recommend that for people who are just learning a new tech via one of my tutorials, because sometimes they go way off, and then they bring me their bucket of problems. And I have no idea where they're at. But I think once you've finished the application, hopefully your mind is swimming with ideas of Oh man, I can build something off of this, that is similar to the thing I was hoping to build, right? And and you just get lots of ideas. I see this all the time with my tutorials, even the JavaScript 30 where it's just tiny little things you do every day, people take the drum kit, or the speech recognition or or the video player. And then they apply that to something because that's how I learned my as soon as I like learn something new, my mind is racing with ideas of how I could apply it in, in possible different ways. And I think that's really where you should aim to be as a developer, who is going to be constantly learning. Yeah, that application is just so so important. And if you're tired of doing job applications, after job applications, and you want to get into freelancing, you should check out some of our freelance episodes. And you might actually realize that you need some accounting and bookkeeping services. So I think that's where you might want to head and check out one of our sponsors today, which is Freshbooks. Yes. Freshbooks is this small business accounting software that makes billing painless. So I was actually just looking back at our freelance episodes, and they are some of our most popular episodes in the last couple months, which surprises me there, because it's amazing how many web developers are freelancing, or they just want to make a little bit of extra side money, vacation money, beer, money, coffee, money, whatever it is. And if you are in any of those camps, you obviously need to keep track of all the money that's coming in all the money that's going out, especially when tax time rolls around, you shouldn't have to spend more time than it's worth, because I've even heard from a lot of my friends who were doing like a couple side projects, or they were freelancing. And they don't understand how taxes work, or they weren't making as much as they thought, and they're frustrated by all the work that goes into bookkeeping, and then they just quit. They're like, ah, screw it, I just want to develop websites. And me too. I don't want to have to do any of this stuff. So if you're in that boat, check out Freshbooks for all of your cloud accounting@freshbooks.com forward slash syntax. Make sure you use syntax in the How did you hear about a section you get a 30 day unrestricted free trial. Thanks so much to fresh books for sponsoring. Nice, thank you fresh books. The next one is from Braden go. Do you have exercises to warm up your brain before you start coding? I always find it a bit difficult to jump straight into a project. I would never start working out before warming up. I feel like that's also true about web development. I think this is a super interesting question. I don't necessarily do this in any regard, but I do warm up a little bit. My warmup increases.

19
00:35:00,000 --> 00:36:40,020
adds a to do list like getting my to do list written, and maybe going over my GitHub issues, maybe communicating with my team, maybe answering emails, my warm up is definitely a little bit more administrative than it is technical. And maybe that's an interesting idea that you should maybe tackle an easy bugs here or there, maybe there's a nagging little CSS issue you can fix or something to get you really nice. And in the groove of things, I think this is a nice idea, I haven't done this, maybe I'm going to try to do an experiment of making the first code related task I do a day to be an easy one rather than a difficult one interesting idea. Yeah, what I've heard in the past is some companies, this is not totally related. But a lot of companies have, you must deploy something on your first day, or you must deploy something by the end of your first week. And that gives you that boost of feeling productive, and it makes you want to keep doing more. So they make sure that the first day of all their employees, they have some sort of bug, whether it's just like fixing a CSS issue on a button. And that gets you rolling, right? Yeah, I think that's really good. And I think like, Man, this would have been a good ad read, but maybe just go into your century and mark a whole bunch of things as easy fixes. And every morning, pick off one of those little easy fixes and do that and that'll sort of get you rolling and all your development tools will be set up and you just be in the right headspace for doing it. So I personally don't do this myself. But I do tend to look at my to do list and move to the top of the list. Some of those easy wins that are are going to get me rolling for the day. So I'd love to hear what you think, tweet us out syntax FM, if you do anything like this little mental warm up for the day before you get into coding, do some code yoga, whatever that may be.

20
00:36:41,940 --> 00:39:59,850
Cool. So this next one is from RJ How do developers deal with depression and mental health? I thought this was an important question. I think the only answer to this is talk to a professional. And I don't just say this, because my wife is a clinical psychologist. She's an educational psychologist, but she's you know, she's a doctor of psychology nonetheless. So I have been around the sort of the space for a long time now. And I think it's extremely important to talk to a professional, they are very good, they will have the answers for you. And they will help you along with everything. When I I don't I don't guess I don't talk about this a ton. But when I got my concussion, which I have talked about on the show before, one of the things that did was that it sort of knocked loose a bunch of things, I had really bad post concussive symptoms for a long time, and some of those have never gone away. So like one of the post concussive things I had was depression. And part of that it was I was on antidepressants for a good amount of time. And then I went off of them. And, you know, working with Courtney, it was really nice to be able to check in with the actual psychologist and talk about things and develop a plan and work through it. And sure enough, you know, as things maybe got a little bit tougher, earlier, last year later, last year, I went back on a different antidepressant with the conversation with both my doctor and my psychologist, which is happens to be my wife. So I highly recommend talk to a professional, it's very important today you do there shouldn't be any said there's like a, I don't know why if there is a stigma, but like, they're there to help. They're awesome. They're just very interested in helping you along. And it's extremely important that you do so. Because life life can be a lot better. Once you have those systems and tools in place to help you along. Whether that is just a plan or medication or whatever, there needs to be some some plan in place or a system to help you. I think that's that's really true. I think sometimes our industry can be very much push harder. Listen at two acts, work the weekends, you know, like, just go go go. And if you're not feeling great, just push harder through the thing. But I also at the same time, our industry is really good about talking this sort of thing. So like Scott says, make sure you reach out if you do need some help to someone who can help you out. Yeah, yeah, absolutely. Cool. So to end this up, I think we want to get into some sick sick pics or the section of the show, where we talk about stuff that we think is totally sick. And this can be anything can be podcasts can be TV, it can be actual things can be books. Yeah, I have a sick pic. That is an app is for iOS and Android. I don't know if you've ever used the app mint before. In the past, I used mint and personal capital, personal capital is great. It's still what I used for maybe an overview of things. But this app is clarity and clarity, money. I think it's actually clarity. Money is the proper title for it. clarity. Money is not only a beautiful app, like if you download this app for nothing other than checking out some of their design or just look at it. It's gorgeous. The app is gorgeous, excellent work by the developers here. But this app really the whole point of it is less of like here's a here's a chart of account like here's all of your accounts and how much money you have. No this is more like Here's your money and

21
00:40:00,539 --> 00:44:11,310
Here's the ways to set up a budget, here's where you're spending, here's your income, here's your your all your stuff. And they do it through very, very beautiful graphs charts shows you all of your spending in different categories. As far as budgeting tools go, this is better than mint or personal capital. As far as maybe like Chart of Accounts, I might use personal capital still for that rather than mint or anything. But in terms of budgeting apps, and seeing where your money is, clarity is awesome. It also does really cool things like allows you to cancel reoccurring payments through the app itself. So it will say like, Hey, we noticed that you subscribe to Netflix, here's $14 a month. Here's some other things you subscribe to Is there anyone you'd like to cancel and you can cancel it directly from the app. So it gives you a lot of visibility into your stuff. And it makes it all beautiful and easy to find. So clarity money, I'm a big fan of this app. Check it out. Awesome. We talked about these these cameras on the home automation, but I'm gonna properly sick pick it. This is the wise. Oh, yeah, I'm going to send you Oh, yeah. So I've got one of the pan and tilt ones. And then we've got one of the the cheaper ones which are stationary, you can just tilt it. And we switched out the the panning one to the just the stationary one in my daughter's room because we had like a baby monitor and the baby monitor started cutting out because my daughter rip the antenna off of it. And his baby monitors are like 100 bucks for video one. And they're so terrible. So we switched to just we just put one of these in the room. It's like 25 bucks, and we put one of them in the room. It comes with this little magnet that you put on the wall and then you just slap it up on the wall on the magnet, which is really cool. And we put it in the top right hand corner of her square room. And you can see the entire room without having to pan or tilt this entire thing. And I think the best part about it is that like she has a sound machine in this camera and a couple of things and they're all based on USB. So it just like got a USB splitter and they're all can be powered off of this one little USB splitter. You can run up the wall there's no need for like custom cords and power bricks and all this annoying stuff that often comes with the stuff that you put in kids rooms. And it's it sucks because the kid Molly's my daughter grabs it down all the time. So big fan of these wise cameras, there is no monthly fee to actually use them which is really cool. You can put a little SD card in and it will continually record it. I am just about to take our new pan one and attach it outside with this like third party weatherproof cover and I'm going to see if that will that will work or not because I think it one downside that is to the the ring ones is that they don't continuously record they only record on motion. And that's a little bit annoying because I would love to even just do a little what's it called, where you take a video every you take a snapshot every 10 second time lapse. Yeah, even just to take a time lapse of me like shoveling the driveway or something I thought would be really fun. To do. So I'm going to mount this rotatable one outside outside and see if it can hold up to the Canadian winters. Nice. Yeah, I wanna I want to hear about that. Cool. So any shameless plugs for you today? The shameless plugs are the section where we talk about the courses that we create. Wes and I are both content creators, we create web development tutorial series, and we sell them so Wes, any shameless plugs for you today, I am going to shamelessly plug my CSS Grid course at CSS grid.io. It's a totally free course just cracked 80,000 people have taken the course. Yeah. Which is amazing, not taken signed up in at least watched a couple of others making a five star review. They they slammed that five star review, but they slammed it. So check it out at CSS grid.io. I'm patiently awaiting two things. In order to update it. It's not out of date. But cool. Two cool things that are coming to CSS Grid are sub grid and the ability to animate grid. And those two things are you can get the animation in Firefox right now, but not subgrid in anyone. So probably in the next six months. Ah, I'm so excited.

22
00:44:12,510 --> 00:45:00,000
Very excited. I love I've been waiting for this for a long time. So I'm very, very excited about it super duper, duper cool. It's like the that for me is like a bigger thing than subgrid is so really cool. I'm excited about that. Cool. So my shameless plug is going to be my react hooks for everyone course that is now available on level up tutorials comm forward slash store for purchase or if you become a level up a pro by subscribing, you will get access to that course along with 12 other courses that come out this year, and all of the 20 some premium courses that exists on level up tutorials right now. And let me tell you react hooks for everyone is a great place to learn not only about what react hooks are, how you can use them. we dive into some practical examples, we build

23
00:45:00,000 --> 00:45:22,920
Some reusable hooks that help you understand a little bit better about all of the little subtleties in hooks, but also just in general how to use them in a practical way, so check it out, level up tutorials.com forward slash pro react hooks for everyone available now, and I got nothing else. Oh, do you have anything? That's it. Thanks for tuning in. We'll catch you on Monday.

24
00:45:25,860 --> 00:45:35,640
Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

