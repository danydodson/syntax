1
00:00:00,359 --> 00:00:24,480
Announcer: Monday, Monday, Monday, open wide dev fans yet ready to stuff your face with JavaScript CSS node module BBQ Tip Get workflow breakdancing soft skill web development hasty as crazy as tasty as web development treats coming in hot here is Sarah CUDA, Bob, and Scott L. Todd. Total in ski.

2
00:00:25,890 --> 00:02:26,580
Scott Tolinski: Oh, welcome to syntax and this Monday tasty treat, we're gonna be talking about better living through side projects, aka how to make your life better by utilizing the skills that you have as the developer. And there's a lot of bonuses here, which we'll get into later in this episode. Now, if you want to be monitoring some of your projects, aka if these projects turned into things that are not so little anymore, you're going to want to go ahead and use century at Sentry dot i o Now, Sentry is really just an amazing place to monitor and keep track of all of the errors, exceptions and bugs in your site. It gives you amazing information allows you to mark things as resolved, ignore them, and basically give you full visibility into what is going on in your site. I recently got an email from Sentry letting me know sort of the status of the bugs or the errors in my application over the past week. And I thought that was really nice to have a nice little aggregate view of that. You can also view stats, you can view activity, and you can bookmark issues and then write to GitHub, all that good stuff. So if you want to check out century, which we highly recommend you do, I'm a huge huge fan myself, use it personally, head on over to sentry.io and sign up using the coupon code hasty treat all one word, all lowercase, and you will get two months for free. This is something again, the proof is in the pudding, you're gonna want to go ahead and check this out. sentry.io. Again, you know, if you have any sort of project that's online, people are using it, don't let your users be the first one to tell you that there's a problem with it, check it out. sentry.io coupon code, tasty treat. So let's get into this a little topic about side projects here. And I love side projects side projects have taught me so much in my development experience. So let's get into some of the why why the heck do you want to go ahead and have a side project, maybe even on work time or home time or some of this time that you have available to you that you're not superduper? Busy?

3
00:02:26,610 --> 00:04:29,490
Wes Bos: Yeah, maybe we should just like bream this episode of why we came up with it. So I talked in the past how I like to buy and sell bikes, and I don't do too much anymore. But I also love a good deal on the classified website. So in Canada, we use one Coco Gigi does, obviously Craigslist Facebook marketplace is coming up, let go is a is okay, it's a lot of people use it. So there's stuff on there, I don't really like it. But I don't like unfortunately, people use it. And there's a lot of frustrations across all of these different ones. And my wife and I are looking for a whole bunch of stuff right now. And what so what I did is I built like the sort of aggregator that would go off every couple of minutes and search all of these different sources, come back with the listings and then put them into a database and then display them for me in like this card layout. And then we can now we can just check them off and say no, I don't like that. And we'll never see it again. So we have this nice interface for all of our searches. And and I thought like this was just something that was bugging me on Friday, at lunch. And by Friday at three o'clock, I had a little prototype up and running, I showed my wife, she's like, this is awesome, like so much better, we're gonna get a hold. But we already got one like really good deal because of it. Because as soon as something's listed every two minutes, you can check it. And if something's weird, like 20 minutes new, you can jump in the car and go grab that thing before anyone else is going to be because most of the good deals are gone within a day. And the stuff that you see after just searching is not that good of a deal. So that's my idea, I scratch my own itch. And at the same time, I was like teaching myself how to do more advanced react hooks, all of the side effects, context, all that stuff. I think that side projects like this are really important to your professional development. Just because you're having fun, you are invested in it, it's solving a real problem that you have. And it's something you can do to kind of do quick and dirty. It's not something that has to follow best practices or, or be the most like email, have to think of every single use case, you just got to hack something together. And I attribute a lot of my skill set to having these problems and trying to solve them as just being a developer. Yeah,

4
00:04:29,510 --> 00:06:32,220
Scott Tolinski: I learned so many things through these kind of side projects. So I mean, you really hit on a lot of the points that we have here. Like why would you want to pick a project to scratch your own itch that's maybe not something that you can sell or not something that is going to be like a business thing. I mean, again, you touched on all of these one, it keeps you sharp, it allows you to learn new things that allows you to take on new technologies and experiment with them in a way that it has low, low, low stakes it all you know goes belly up. There's no problem about it right and it You're also building things that are useful to you right there, you're building things that are going to make your life better. And we, as developers, we do all this stuff, right to build things. And we're building interfaces. And, okay, here's the homepage, blah, blah, blah, but you have the ability to build things that are actually going to make your life better as a developer, even if you don't realize that. And I think I first realized that when I started getting up into some side projects based on my hobbies, so I guess that comes up to our next point, which is, how do you come up with these ideas? Right? How do you come up with a side project that is going to be useful to you. And for me, I always look for things that are a pain point in my life. One of the side projects that I'm considering making here is sort of like a recipe app for my wife and I, and we have a hard time picking recipes each week, like stuff we want to have, it'd be really nice if I had a little system that had all of our recipes in it, not necessarily the recipes themselves, just the meals, right? Like here are all of the meals that we make and like, yeah, maybe even some restaurants or whatever. And then you could say, What haven't we had in the past month? Okay, give me things give me only options, type of food that we haven't had here, that would be so incredibly easy to throw together. And it could be just customized to what we want, right? It's not for other people, we wouldn't have to have like an auth system or something like that. It's just it would just be for us. And it would be superduper easy. And all of our recipes would be in there, all of our meals would be in there. And maybe even just say, hey, auto generate me five recipes. And then you could swap some of them out based on when you last had them or what you actually want.

5
00:06:32,370 --> 00:07:23,520
Wes Bos: That's such a good idea. I find myself starting little side projects, just whenever it is that I like I just explained we had a problem with existing websites, the interface was really frustrating the their notifications, were too slow. It didn't span all of the Facebook marketplace and Kijiji In my case, and I wanted to pull them all into one. And it's cool because you can like get a little bit of a competitive advantage in life. Being a developer is amazing. Because you actually have the tools to do stuff. I always get jealous of my friends who have carpentry skills or home renovation skills or like small engine skills, like some of them will just buy a lawnmower and flip it and make a couple hundred bucks and like, Oh, I wish I had that. But then I realized like, Oh, I actually do have a very, very good skill set. And that's the ability to pay anything on the internet. And yeah, you know, like, well, this

6
00:07:23,520 --> 00:07:44,670
Scott Tolinski: smart, connected home stuff, your skills to build literally anything that you know can control so much of just like, Man, it's so funny. You could have Oh, when a bike of you know, a certain bike in a certain price range comes on Kijiji all of the lights in your house could start flashing. And you could build all that. Yeah, pretty easily with your skill set. It's ridiculous.

7
00:07:44,880 --> 00:08:29,160
Wes Bos: Yeah, so figure out what it is. And I hear from people all the time, especially people who aren't developers, they say, I'm super into paddleboarding, or kayaking, or breakdancing, or they have a hobby, and they have this thing that they think would help them become better at their craft, or make their life a little bit easier or track their recipes, like Scott was just saying, and it's cool, just go ahead and start to make some you don't have to make it a huge public thing. It might not go anywhere, but a guarantee along the way that you're going to, you're going to build something and you're going to learn a lot for whatever it is. It's kind of interesting. I even people take my courses, I often see them take the the app that we build in the course and then they modify it for whatever it is that their pain point is.

8
00:08:29,270 --> 00:11:02,520
Scott Tolinski: I always encourage that. Yeah, I always encourage that say, hey, if you don't care about, like TV shows, and I'm using this TV database, yeah, go ahead and do like literally any other API that you want to use for this thing, because we talked about that our learning episode, a lot of the times you learn stuff so much better when you're invested in it for some reason. So don't like try to force stuff that you're not interested in, because being interested in being excited about is going to be not only just good for your learning of whatever you're using the side project for, but you're actually going to want to work on it. Right. And I think that's a big thing. I often pick things that are based on hobbies. Again, you mentioned that as like people are into stuff, right? How many web developers are into specific things like everyone has their own hobby, right? But how many web developer B boy breakdancers? Are there? Maybe 100. So I don't know. There's not a ton. And so that leaves you open to say, hey, there's probably not a good app in this space. Because the people who are in this space probably aren't web developers, or even like smoking meats. I had one of my co workers at one of my agencies was so into brewing beer. And he had his whole setup via Raspberry Pi's he could check everything. And it was just sort of like you are the perfect person to do this. Because you have both the knowledge of brewing these beers as well as the knowledge of this web app that you can throw together. Yeah, so I use my hobbies all the time in this one of the things that I built was I've mentioned it before on this show was called B boy tools. And I'm a breakdancer for those of you don't know I've been breaking for like six 10 years or something a long, long time. And in a competition, all the music is random, you don't know what you're going to do ahead of time, you sort of have to be in the moment. But at the same time, if you do one round of the competition, the next round of the competition, you can't do the same moves you just did in the previous round, because the judges are going to be like, Okay, this guy doesn't have any moves, he's got one, one round of moves. So what I built as an app for me, that allowed me to basically have all of my moves, categorized and organized, they could build the sets for me can tell me what to do. But I can also check off if I've done them in around or have done them in a battle so that when I'm preparing for my next round of the competition, I can look at this app and see, alright, this is all of the stuff I haven't done yet. This is the stuff I can do. And I'm not going to repeat any moves, I'm going to still look good with what I'm doing. And it like, to me, I also use this thing as a training tool. It like fires the air horn club air horns down every 30 seconds. So I can pack this, like being really hard on for 30 seconds and hard off for 30 seconds and resting. I know the West is laughing I set that up. Alright,

9
00:11:02,550 --> 00:11:04,260
Unknown: carry on. Carry on.

10
00:11:04,290 --> 00:11:17,370
Scott Tolinski: Yeah, and I absolutely love this tool. And I built it for me. I actually have Austin there. So anyone can use it. But I built it for me. And it does all the things I wanted to do. And I use it all the time. Yeah,

11
00:11:17,370 --> 00:12:02,340
Wes Bos: I think we've got our point across here, find something that interests you find a problem that you actually have, find something that can make your life better and try to build that thing, you're gonna your skills will come along, because along the whole way, I told myself, I'm going to build this thing. But I'm going to only be using stuff that like new new tech. And for me it was I was using all the React hooks stuff, I had to use react hooks like quite a bit already. But like this was just different situations that I had found myself in with react hooks to how to fetch data and store data and be able to refresh it. And I think that's really where you start to get it because you can you can read the docs, you can watch a tutorial on how react hooks works. But until you are actually implementing it and running into specific situations for how you're building your app. I think that's where it's really going to set in.

12
00:12:02,610 --> 00:12:04,350
Scott Tolinski: Yeah, you always get into stuff.

13
00:12:04,380 --> 00:12:05,190
Unknown: Yeah. Okay.

14
00:12:05,190 --> 00:13:07,560
Scott Tolinski: So if you were starting a project like this, what would you use, I know exactly what I would use. Because I have a stack that feels very nice to me, I use Meteor, I would use Meteor in a heartbeat. For any of this stuff. One, you get built an auth, you don't even have to do anything for auth. It's just there, you get a database built in, you don't even have to do anything, it's there. You can hook up graph qL if you want to go that route. And I probably would just because that's what I've been using lately. And then you can throw react on there. And to get set up with something with off with a database would take maybe like five minutes if that and I could start cruising from there saving stuff, the database. Meteor has this really like fun, insecure mode, which is obviously not something you want to use for anything meaningful yet, but allows you to do database inserts from the client side. So if you really want it to get going really quickly, you can write all these Mongo inserts directly from the client side without even have to worry about setting up an API. And it's just superduper fast. So I grab Meteor and all sorts of times like this. And that's probably where I would go,

15
00:13:07,710 --> 00:14:10,140
Wes Bos: my sort of go to when I want to build something real quick like this is I grabbed next jass, which allows you to get react up and running without any setup is create a pages directory, you create a components directory, and you go from there, I usually whip up Express on the back end. In this case, I used just express and this package called disk dB. And this DB will allow you to just save anything, no schema or anything to JSON files. And it has a very similar interface to MongoDB. And that way, if I wanted to go ahead and swap it out in the future, I could The only thing I don't like about that is that I found myself writing all of these like refresh queries and whatnot. And I thought like, oh, if this was graph qL, I could just have a subscription directly to this data. And they would just update it in real time. So I think that what I want to do now that I've got it up and running is figure out how can I port this to graph qL? I know what my data looks like now, which is sort of a frustration with some of these things you need to know you need to know a schema ahead of time, when you're just trying to prototype stuff. You don't know what the schema looks like.

16
00:14:10,170 --> 00:14:12,720
Scott Tolinski: Yeah, that's another word for Meteor. You don't need the schema.

17
00:14:12,780 --> 00:15:01,920
Wes Bos: Yeah, there you go. So maybe I need to try something like that out. And that all obviously there's no auth as well. So I don't even have like people asked like, do you have like a starter file for this? And like, No, I just create a front end folder, I create a back end folder npm install, express npm install next, and I'm up and running. So I think what's important here is you just maybe just use what is fairly comfortable to you, but is going to push you a little bit over over the edge so you don't learn a brand new stack unless you've got lots and lots of time. But for me it was I just have this afternoon. I'm super excited about this, this thing right now. And I want to get it up and running. And then what I'm doing now that it's actually something that my wife says she'll use is that I'm going to spend maybe one more day on it just making, taking her feedback and getting around up and running. Nice. Yeah, I

18
00:15:01,950 --> 00:15:34,980
Scott Tolinski: think this is great. This is really super cool. I think this is something that people will probably need more of in their life. Personally, I attribute so much of my like extreme growth in areas when I'm like trying to learn something new. A lot of my growth comes directly from the side projects that I hustled on. So I think it's a an important opportunity. And it's something again, if you don't have the time, don't stress out about it. But maybe you can throw an hour here or there into something, or maybe you have a weekend and you can dive into something. But again, fun, learn stuff and make something useful. Awesome.

19
00:15:35,010 --> 00:15:48,800
Wes Bos: So I think that's it for today. Hopefully you stop this podcast and immediately go start working on something after this. Let us know what your side projects are maybe things that you do yourself to scratch your own itch. Tweet us at syntax FM, and we'd love to hear those.

20
00:15:48,990 --> 00:16:04,470
Scott Tolinski: Yeah. Also, in addition to your projects, let us know what they're built on. I want to know what people are building these projects on what are some capital systems? What are some easy things to get up and running with a nice little side project. So yeah, share some code if it's open source to share some project or just tell us about it. I want to hear all about it.

21
00:16:04,650 --> 00:16:09,750
Wes Bos: Cool. That's it for today. Thanks for tuning in. We will catch on Wednesday later these face.

22
00:16:11,730 --> 00:16:21,510
Scott Tolinski: Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

