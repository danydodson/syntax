1
00:00:01,320 --> 00:00:10,530
Announcer: You're listening to syntax the podcast with the tastiest web development treats out there. strap yourself in and get ready to live ski and West boss. 

2
00:00:10,560 --> 00:00:58,560
Wes Bos: Welcome to syntax. This is the just someone put their name is Scott berlinski on this q&a I just saw that when I was laughing anyways, welcome to syntax. This is the podcast with the tastiest web development treats today we've got a potluck q&a, we got some really good questions since since we last did a potluck I thought like man, there's more here than I would like to answer. So thank you for sending them in. If you want to send in your own questions to the episode, go to syntax, FM top right corner, click the potluck button and submit your question that way. Today we are sponsored by Sentry which is going to do all of your error and exception tracking and Freshbooks which does your cloud accounting with me as always is Mr. Scott Tolinksi. How you doing today?

3
00:00:58,740 --> 00:01:00,210
Scott Tolinski: Hey, do good. It's

4
00:01:00,210 --> 00:01:08,880
winter wonderland outside. I'm on my new 16 inch MacBook Pro, of which we're gonna have to talk about at some point, but uh, ya know, I'm feeling real good.

5
00:01:09,240 --> 00:01:20,100
Unknown:  Yeah, I got mine today. So excited about it. I just did the typed on the keyboard of it. And I thought it was amazing. And Escape key is great. And the arrow keys are great.

6
00:01:20,339 --> 00:01:21,090
Yeah.

7
00:01:21,090 --> 00:01:56,400
Scott Tolinski: Do you know what my favorite aspect of the keyboard is that I don't think people have been necessarily talking too much about what is that the keys are further apart. And I have kind of fat fingers. So like my finger will would often hit multiple keys at once the keys are further apart, right? So you get air further apart and get a nice separation when you're typing. It also feels a little bit like I feel like my fingers still aren't attuned to like where to reach to hit certain keys just yet. But I know once I do, it's gonna feel really good. Because so far I've been getting a lot better separation. And me particular I'm definitely a you know, just go to type.

8
00:01:56,400 --> 00:01:57,120
Unknown: I don't know, I

9
00:01:57,120 --> 00:06:17,970
Scott Tolinski: want to say recklessly I guess this is how I do things. And yeah, if this is much better for my reckless style of typing than the previous one was, yeah, it's the same. I use a I use a magic keyboard just on my desk. And it's the same keyboard. That's what I always loved about it. And I think if I fix it even took a key cap off of a magic keyboard. And it fits perfectly on the laptop. It's just a little bit taller. That's the only problem. Oh, yeah, I it's I'm so happy with it. And we'll we'll do a full episode kind of talking about its people always ask like, what's the best machine for being a web developer? And we I've been saying recently, like, not the MacBook Pro. That's for sure. And let's see get an old one. The Chromebook pro the Yeah, yeah. Or whatever. It's like if you like what did you you made some joke about? You're eating a crunchy granola bar. Yeah, nature Valley book. Right, exactly. Yeah, if you eat a rice cake in the same building as the MacBook Pro, it will fail. So I'm so happy that they're fixed. And it will do a whole episode on on like hardware and just kind of reviewing them because it's such a such an integral part to being a developer is having like a rock solid laptop. So stay tuned for that. Um, so you want to you want to grab the first question here from Scott solinsky. Yes, this question is from Scott berlinski, or boss Lynskey. Hey, guys, this is hopefully a quick one, I'm potentially starting a new job as an Angular developer, modern Angular, but I am scared that even though I will continue to stay on the cutting edge in my personal project, using Angular in my job will make it harder to get a job. After that with more modern tech, like react, do you think there's any truth to this? Well, I think the the biggest problem with this question off the bat is that Angular, modern Angular, whatever, that's modern tech man, I the only thing I would say is not modern tech is using like jQuery plugins, and, uh, you know, sort of hacked together away or something. So right there, I'm gonna go ahead and say that I don't think there's anything that you have to worry about. There's a billion jobs that are Angular jobs. I mean, Angular is probably a billion. Yeah, yeah, like the second largest job market, if not the largest job market for developers with react. And so modern Angular, and you can make a great career and a great living right now, doing Angular is straight up. I mean, there there is a huge amount of interest in Angular, just because maybe, sometimes people like us don't talk about it as much, mostly because we don't use it. But I don't think you have anything to be worried about there. And also, Angular is to TypeScript. So you're still like getting all that goodness going on? That's true. I don't take anything that you hear on this show. As, like Scott and I are react and node heavy. And that's not a representation of web development. In general. That's a representation of Scott and I who use react and node. So no, this is totally fine. Plus, like, I know, modern Angular is awesome. Like, we obviously love to make Angular jokes here because they're funny, but modern, Angular is amazing. And you're going to be a badass JavaScript developer by the end of it, and you'll be able to pivot into whatever framework comes next at your next job. Don't sweat that at all. Yeah. And also, I mean, any modern framework, like Angular is all component based anyway, so you still, like most of the concepts apply. It's just different syntax and different ways of accomplishing the same goal. So as long as again, you're getting those little nuggets and you're you're learning Yeah, you're gonna start you know, still progress. Next question we have here is Yo guys sauce soy sauce stirred up quite the controversy. lol What are sending developer disagree with you? On Twitter, I like posted like soy sauce. Does it go in the fridge? Or does it go in the pantry. And I got like 4000 votes and it was 5050 for almost the whole time and then pantry pulled ahead. And like, I always put it in the pantry and my drives my wife crazy, but hot sauce in this pantry. When I was growing up, we put ketchup in the pantry, which I agree is weird because it gets like, you get like that weird sauce on top. So that that's weird. But like I put everything in the pantry, it's not gonna kill you, especially soy sauce. And like Scott comes swinging, that he puts it in the fridge because that's what the label says on the label that it's a label like, hey,

10
00:06:18,180 --> 00:06:19,500
Unknown: they know I didn't

11
00:06:19,500 --> 00:11:16,230
Scott Tolinski: make this soy sauce. I don't know, all of the ingredients they put in it. You know, I know what soy sauce should be me. But I'm inspect the label. I didn't say I'm gonna Trader Joe's but in their soy sauce as a preservative or if it needs anything or whatever. I honestly have no idea. But all I know is that it says refrigerate after opening and so you know what, I'm going to refrigerate after opening because I don't want to get any any. I know before people lock up on their soy sauce command me about this. I really don't have a like a specific dog in this fight other than the fact that the label says to do it. So I I followed that rule. That's big fridge, big fridge lobbies for soy sauce, so that you need a bigger fridge. It's all a scam anyways, so like, I don't know, I thought that was pretty fun. Because like, Twitter can be a bit of a angry place at some point. And it's it's fun to get riled up about something like soy sauce. Totally because it's funny, right? And everyone's got their I don't know soy sauce wrap on there. That was really good. Yeah, I like that. Thank you. What are the actual developer disagreements we have? Like, I think like me and Scott very rarely have disagreements in terms of like what we have. And it's not because we're like totally in line. But I think it's just because like, we're both kind of like, I could see why that would work for you. Or like that would work for somebody else. So I don't really have super concrete opinions because I'm I'm often wrong. And things that you like, even when we did we talked about tailwinds. And we say like, yeah, it's cool, but not for me. I got so many people are like, Whoa, like you hate. And he's like, no, it's, it's cool. And like, we might be wrong about it. It's definitely gaining some serious momentum. And so we talked about it. I don't know, what are some other disagreements that you have about web development, I think I might be able to start some disagreements here. Because I've changed some of my, we had like a, we had like one episode a while back where we were talking about our dev opinions. And we were trying to disagree on stuff. And we ended up agreeing on everything. But I've since changed some of my viewpoints on some of those things. For instance, I don't use semi colons anymore. I've abandoned semi colons, I turned them off in my ies lens settings, and my pretty here settings and it removed in for me and you know what? I'm still here. My application still works. It still works. It's beautiful. Unbelievable. And you know what, I don't have to have those stumps me cones. Anyone? I can read the code still. So I think some people are like, I can't read their code. Yeah, I don't know. It's been absolutely fine. I've had absolutely no seconds lost to removing semi colons in my codebase. And absolutely not. Another one is I've actually, somebody made a really good argument for why you should use tabs over spaces due to accessibility reasons. And it swayed me. So I haven't converted my project to tabs, because that's gonna goof up all my commits. But like, I think I'm swayed to tabs. So I just pulled up the article here, and it says, using a tab width by just using one tab, then you can customize it in your editor as to how wide to display that thing. So for some developers, they like to jack up the font size, because I don't know maybe like I personally do this. I keep my font size pretty big. I always get comments, people saying like whoa, that's pretty big in half. That's because I record a screencast I just leave it large and half is like I kind of like it. I keep mine pretty small and then I shoved my nose into the screen. I just get really close. But if you have if you jack up the so Like using like, pixels for padding can because if you jack up the font size, then also the padding and everything Jacks up as well, which is not necessarily what you want. So if you use a tab, you can jack up the font size and then and then really clamp down on what actual tab character looks like in your editor. So that's a valid argument. I like that. Yeah. And I was just thinking about it. And I was thinking, yeah, I guess it makes enough sense. And it really gives me no detriment. Right, it gives you no detriment. Also, somebody said your file sizes are smaller. Like, I guess that's fine to not like, like, I got a two terabyte hard drive on this thing. I don't care anymore. Can't imagine all the space here saving without four tab characters. How many node modules can I fit on this hard drive? Also, like that's, that's not really true with G zip or minification? Right. I don't know if that's really a valid argument. Well, I mean, I think I'm not like file size loaded. But file size on your hard disk is what I was thinking. Oh, yeah. But yes, of course. So I don't know if we disagree with those things. But those are two two little bits that we used to agree on that I since changed my opinion on. I don't know if I swayed you in any sort of way here. I didn't make an argument for semicolons. Other than, you know, I just don't like them anymore. I just mean, me and semi-colons. No longer my best friend.

12
00:11:16,409 --> 00:15:53,039
Yeah, I could see why you wouldn't want it. And like I might change that at some point in time. But I've never felt so moved to try to convert somebody on on some of these things. But it was the episode on a bike shedding. That was where we talked about all these silly things. Yes. Yeah. It's just just not my personality. I really couldn't care. Just enjoy what you do. Yeah. All right. Emily says in JavaScript, bang equals equals is the same as bang equals, but I was told there was a slight technical difference. I cannot find what that difference is. Can you elaborate on this? love the show? It's been a huge help. Thank you. Thank you, Emily. Okay, so this question is related to the whole triple equals verse double equals in comparisons in JavaScript. As you may know, in JavaScript, there is some sort of interesting behavior with comparisons. For instance, if you had a double equals A numerals zero would be true if it was equal equal to the string of zero, which obviously, is kind of unpredicted. Like that's not something that you would commonly think of as being the same, right? Yeah, once a string once a number, right, right, the value is the same, but not that the type? Exactly. So it leads to some interesting sort of situations, right? So what it really comes down to, is that whether you're doing the triple equals, or the double equals and whether or not the bank is in front, it's still a strict check like that. That's really what it comes down to is whether or not this this is a strict check. And what more is there to really say on it, then then that's it. Yeah, yeah, it's the bank double equals will check for type. And value in the bank equals will only check for value, right? That's it. I don't know, when I was a more of a newbie programmer, I was doing less strict everything because it was seemed easier or something. And in reality, it just led to more issues and bugs. And yeah, and I've since been changing my thought process and becoming more strict on everything. Especially I've moved my project to TypeScript recently, and I, you know, strict everything on TypeScript. And at first, it was a giant pain in the butt. And then as I saw the benefits of TypeScript, and then I saw the benefits and then tried to use TypeScript without most strict aspects. I started being like, wait, wait, why would you even use TypeScript without strict checks? So, again, I'd become more strict in checking anything, whether it's comparisons or types, or whatever. So that's sort of why we always say use the triple exclamation or triple equals just because it's more clear of what it's asking for. But, you know, I don't know. You're gonna run into all kinds of bugs. If you always use the triple equals, that's my role. That's what I put in my beginner JavaScript course. Yeah. The only use case for the double equals if you want to check if something is undefined, or no, that double equals will work there. But I think that's the only use case you should be using it for totally. Uh, next question is from E Piff. It says rap artists, check out my music if he likes a little little SoundCloud drop right there. Oh, thank you. What are your rules on using other devs repos as boilerplate example, using Wess advanced react starter files you just utilize for my own project. I just want to play fair and not step on any toes. So this always comes down to what is the license of the code? So you have to check what the license is. Actually, this is probably bad. I don't even know if I have a license on some of those but it's fair game. Yeah, the rules. I get people email me all the time. Hey, can I use this in my like startup, or can I use your your starter files in a project of mine? Or can I like post the code to GitHub Absolutely. Totally fine. Almost every on GitHub has a license attached to it. You just double check it, and almost everything is fair game to go ahead and keep using yourself. Word. Yeah, that's really it. Again, it's always check the license. But as long as the license is good for it, and didn't go for it, I mean, that's why it's there. That's the point of open source. And then there's a ton of repos that I always consult with, even if I'm not straight up jacking the code, and maybe I'm taking some of it to apply the techniques. And I think that's, you know, entirely within the legality and ethical bounds as long as the license allows you to do so. This next question is from Ryan, Tracy. What music do you listen to while you code? as an extension? Could we crowdsource a dev playlist and hosted on Spotify that actually might be a lot of fun, I could be in charge of the rap playlist, and West could be in charge of the scream screamo playlist.

13
00:15:55,559 --> 00:19:01,140
It's a funny thing music like, I don't know, I like hung out with my buddies at the cottage on the weekend. And like, I tried playing my own music for like 10 minutes. And like, nobody, nobody enjoys other people's music unless you like you like the same kind of music. And it's a weird thing to try to like push your music on somebody else's. Yeah. Because it's like, it's the same. I feel the same way with editor themes. Like I never tried to, like sell somebody on using my editor theme because I'm like, hey, if you like it, go for it. But if not, I don't care. It's all personal. It's just it's my own personal preference. So I don't know what I listened to mostly hardcore. I have a couple public playlists that are getting pretty popular with devs because one's called the retired scenester metal core. And then I have another one that's called head Bob, which a lot of you have subscribed to after I mentioned it last time. And it's basically just music that you Bobby head to and he puts in the in the zone. There's no screaming in that one. I listened to the two genres I probably listened to the most would be like golden era rap music. I have a playlist called the Golden Era we can share. And then I have a show notes. Yeah. And then I have a rap music Dakota which is like modern rap music. And what else do I listen to? To code to I guess I listened to a lot of ghostly artists, I used to work for record label, ghostly International. They do a lot of electronic music. But it's it's techno sort not techno based. But the label has techno roots like Matthew dear sort of stuff. So I listen to a lot of one of their new artists is drama, all caps, and it's really good to cotu because it's sort of she has electronic music that just doesn't really take too much of your concentration out of you. And it's just really nice. A lot of that music like Tyco or any of that stuff is really good for me. I've been recently getting into this is like sort of a weird genre of rap music, but it's like just stoner rap music where these guys put out 1000 mixtapes a year like currency and burner and whoever they put out, like 1000 mixtapes, and they're not necessarily the most creative or most interesting. In fact, I don't want them to be because they're just like, just a sort of relaxed bead and some guy basically just talking about who knows what, and because they've released so many billions of music, they're not saying anything important. They're just talking about, went to the store, and I got my car. And it's like, so I don't I don't know what it is about it. But it's so mundane. I can I love coding to it in a way that I don't know, it's it's funny. So I'll put some of this music up in the show notes. But that's really what I like, I just made a playlist. And I made it collaborative. So anybody can add music to it. It's called syntax coding music. So we'll put a link in the show notes. You just search it and go ahead and add your fav tracks for coding L and make sure you follow that playlist. It'll be fun. They'll be Oh, that's, that's sounds like a great time.

14
00:19:01,440 --> 00:19:02,700
Unknown: Yeah, cool.

15
00:19:02,700 --> 00:21:24,990
Scott Tolinski: What also sounds like a great time is setting up your error and Exception Handling so that you don't have any bugs in your project any more. because let me tell you, I can't live without century. And century@sentry.io is one of our favorite sponsors over here. All our favorite sponsors, we love our sponsors. But century is the exception handling tool that works with just about anything that you could possibly want to use it whether you just connect it to your application, it can log in and connect exceptions, you can track them to specific leases, so you can tell when a bug was introduced so that you can make sure that if you need to rollback that commit or that release, you have that bug right in front of you or you can say okay, I fixed this bug and then in the next release, you can mark it as a regression of that bug pops up again, and all this within a really nice and easy to use interface that looks great and allows you to basically see any issue that you're having right in front of your face. So Head on over to century AD century.io. And use the coupon code tasty treat and you will get two months for free. That is a tasty treat all lowercase all one word, let them know that you You came from a syntax. We over here it's syntax, we, you know, we advertise for the companies that we use in love. So I'm a big fan of century I use it on all of my projects, and a huge fan of the project in general. So check it out. Thank you so much for Sentry, for sponsoring. Next question from one Gonzales, how do you go about working with different technologies in stacks front end related when you have to accommodate for client or other developer biases towards specific things? Like you have to learn a different set of tools in a new project? Because someone doesn't like what you use and says x is the better tool for a job. hope that makes sense? Yes, this is every developer ever has opinions on what's what's the best stack. And often you'll have, like a senior developer who makes these choices and has opinions or like something that's better. And then you also have like this whole web development sphere that changes their mind as to what is the best stack every three minutes. And you have businesses that actually need to make money and can't keep changing it. And the answer, my answer to that is that you can obviously try to change their mind. But almost always, there's smart people that have made these decisions. And just because it's something that you don't know, doesn't mean that it's bad. And your job as a developer is to learn that thing and to work with those tools.

16
00:21:25,170 --> 00:26:25,200
Yeah. And that's, I mean, it goes along with even what we've talked about with working with designers too. Because it may seem like this at times, I know, I've been into some pretty heated dev conversations, heated dev moments, as you might say, where people are just really getting into it over what the stuff they liked uses. And again, I think it needs to be a conversation, it's hard part one personalities clash, because some people are just really just, I don't know what the right word is, but just aggressive towards what they really like to use. And they think it's the only way and they're not going to listen or budge. And maybe it's nice to have a moderator involved if there's multiple people, but at the end of the day, it's a lot about learning why they like something, and then hopefully they'll do you the same favor of learning why you like something, and maybe you can chat about it. I remember one time we had a project, and the project was initially created with less. And we had this huge, like a for dev discussion of our SAS versalles and was sort of leading the charge along with another developer and saying, you know what this project should really be in SAS, because Hey, man, less doesn't really do as much as SAS does. And there's better SAS libraries out there. At the time, it was, you know, grid framework for all the rage and the SAS SAS frameworks like Suzy were way better. So we had a talk about and we went through the pros and cons. And we sat down as mature developers, and we talked out and worked it over. And at the end of the day, it's a group project and you need a group result, sometimes you need to give a little. And sometimes you need to push down a little harder. But at the end of the day, be respectful to your co workers. Nobody has the necessarily right answers. Everybody just has different opinions. So yeah, that's all I got to say about it. I think we had a fall. Next question is from Andrew Gilliam. And dear boss and scooter man, people come in these names today. legit podcast mad respect. Yeah, mad respect back, Andrew. I know there is no magic SEO silver bullet. But what are some of the best practices for implementing SEO into your website or web application? Now this one is, it's kind of tough, because as your SEO stuff changes all the time, you know, Google can sort of change or tweak their algorithm or DuckDuckGo, or whoever they can change to tweak their algorithm all the time. And really, some things that are important a couple of years ago may no longer be important today. Think about back in the days we used to spam keywords into our site until Google's like alright, people are just spamming keyword. So let's adjust the algorithm right. So I don't even know if that was Google back then. No might have been AltaVista. AltaVista might have been adjusting their algorithm. But yeah, one thing I like to think about SEO is it's never going to hurt you to have proper HTML semantics, and proper HTML structure at all times, using the correct tags whether or not something really truly is an h1. And following those rules, Article section, main header, footer, nav, all those that ellos semantic elements in HTML, learning why people use them, what they're used for, and using those appropriately is one of the biggest things. And that's not going to skyrocket you to the top of search rankings because that's not how it works. But having those core fundamentals is going to help as same with anything that's performance based. You want to fast website you want a mobile first, not as a mobile first, but a mobile responsive website. So it has to load quickly. It has to work well on mobile and it has to be okay semantically as a base foundation. Before you tried to do anything else within your SEO, yeah, that's honestly all I do is just have good. Like, it's not even amazing, but just good HTML semantic structure. Because like at the end of the day, you have to remember that Google is trying to find their users the best possible result. And as soon as people catch on to tricks, yes, like backlinking and stuff, they change it, and they will, they will go out for it. So so don't go any down any rabbit hole of tricks, surely those work, and surely those will change over time. But honestly, just just putting out the content. So it's easily accessible. It's fast. It's mobile friendly, things like that. As long as that content is accessible, and good quality for your users. I think that that's going to really help out I get people asking me all the time, they're like, hey, Wes, how do you get that like little box at the top of Google? Where if you search, I used to have it? If you search, let verse cons. I think Tyler McGinnis took it from me, oh, hey, just again, if you'd search, let verse constant Google, I used to have the box for about a year. And then I googled that a couple months ago, and Tyler McGinnis took it. And now it looks like a medium article has it? So I don't know what they're doing there. But I think we're all just trying to provide good info. There might be something about my article was from 2016. And Tyler's article is from January one, so maybe keeping that up to date.

17
00:26:25,200 --> 00:27:01,110
I've heard that works as well. It's funny, one of yours always comes up when I'm looking for good examples for default parameters. And rest verse bread sort of stuff. I think yours always comes up. And I think it's just really content is written really well. I mean, that's another huge thing if your content is good, and your content is what people are searching for, and people find it, they're going to link to it. It's just going to continue to move up in the rankings. Like Like he's I mean, it's all about the best practices, right? Who are tricks for Wes? Who are tricks for

18
00:27:01,350 --> 00:27:02,460
Unknown: checks? There's what

19
00:27:02,550 --> 00:27:04,320
they're for kids man tricks are for kids

20
00:27:04,320 --> 00:27:05,280
jerks ever kid? Yes.

21
00:27:05,280 --> 00:28:49,770
Scott Tolinski: Yeah. Don't leave those leave those tricks at home. That's, that's not the answer. Anybody ever wants to hear now it same with like, they're like, how do you like her? How are you hacking sales and getting Twitter followers? And like, honestly, just that's the long game. Just good content? That's unfortunately, I don't have any other tricks there. Yeah. All right. Next question we have here from cmoh. Hi, gents. Love the podcast. It has given me lots of inspiration ideas, when dealing with responsive sites, how do you go about respecting the request in iOS Safari to show the desktop site? So this is on Google Chrome on mobile, as well as if you are on a website, and you click Show request deck desktop site, like what happens there? Like how are you the developer implementing it. And unfortunately, responsive sites don't respect that. Because all that is doing is changing the user agent string of the request. And a lot of websites will take in the user agent, user agent string is this little piece of data that comes along with every request in it, it gives you information about the browser that is requesting the website. And then based on that either in JavaScript or in on your server, you can serve up different websites. And that's what a lot of websites do. They have a mobile site and a desktop site. And by doing that, they they change the user agent to a desktop browser. And then it tricks the website into loading the desktop site for you. Fortunately, you can't do that with responsive. Yeah, I mean, that yeah, that is that Yeah. Okay, next question is from Daniel, bro. Hey, code, Kings, or Hi, code kings.

22
00:28:49,770 --> 00:29:30,540
First of all, I love the soundboard effects on your show. Oh, they love the show. But then the sound effects soundboard effects are in parens. I got a quick and simple question from a newbie myself, I get confused about your usage of the word app. You don't make iPhone or Android apps, but you often throw the word around like I would create a node app or some apps I made etc. Is it just website applications? Or how exactly should interpret the word node app or web app compared to mobile app? Keep the episodes come in peace from Denmark pacement Denver,

23
00:29:30,720 --> 00:30:08,670
Daniel, we, we just use the word app primarily as web app. I'm not a native developer. I know I've worked in React Native. I've built things in React Native, but largely, I'm not an app developer on the App Store, so to say, however, I do make web applications now what is the difference? Well, the difference is, they're hosted on or created with web technologies. Now with the addition to T are they called t essays for whatever web progressive web apps that can go in the Android store pw A's, the progressive web app, but there was like a lite version that we talked about a while. I think it was TSA.

24
00:30:09,060 --> 00:30:43,050
Yeah. Where you can now actually Store apps on the app store that are written in web tech. So largely, when we refer to applications, we're referring to web sites that have more than just straight up HTML and JavaScript and maybe JavaScript to do like a little toggle here or there or something. We're talking about things that are primarily using JavaScript to write the application to fetch data from an API to do things like handle accounts. It's, it's just websites that are advanced. It's just a different language for the same thing.

25
00:30:43,410 --> 00:32:28,320
Yeah, that's it's just there's words in programming like app and state, and order some of those other words that you just use, and they mean a different thing. It depending on the context, yeah. It just means application. And that that's what API is another one. Yeah. Like think API is, is like a like an endpoint where you fetch data from but then API is also just like a set of functions that you can use to interact with something right? Like API just means the way that you interact with something. And unfortunately, those words are often loaded. And and then you you have the added benefit of someone like Apple coming around. And like just taking the word for themselves. And saying, like, okay, apps are now like iPhone apps, there's something that are bundled up and push. So that just means code that's put together to run somewhere. Yeah, yeah, that's it. Beautiful. Next question is from Robbie, thank you for the thank you for the pronunciation. Robbie, Doyle, yo, oh, all of these questions are like, hilarious. Yeah, I think we I think we have successfully appealed to the younger demographic. Scott, based on some of these questions, yo, oh, holy crap. My two favorite tech guys have a podcast and I didn't know it. Thanks for all you do. I wanted to ask you, for your thoughts on transformed class properties from people heard heard the cast on react state, I found it mind blowing when setting everything up without constructors. What the question here is they wanted raw be wanted our thoughts on transform called property properties. Yeah. Okay. Can Can you explain real quick what what are class properties.

26
00:32:28,740 --> 00:33:16,080
So in the context in which Robbie is talking about is within react. And oftentimes, when you're setting up your class based component, you needed a constructor to pull the props in or do things like that, and modify or set up the state. And what this allows you to do is have properties like an object property would be on an object just on a class. And typically, you'll see this being used as like, like static properties, or something like that. But basically, instead of defining your state is this dot state, whatever you're defining is just state is equal to an object within your class directly. And that way, you don't have to use a constructor to get that initial state said, then it has been so long since I have written a class component. And I'm just feeling like,

27
00:33:16,080 --> 00:34:26,190
I like don't even remember that I can't even picture the code fine lines, I need to like, go look it up. It's so fun. I just did a tutorial on it. I can like it. Because it works in Chrome now. Like, you don't even need this plugin. I yeah, it just works. So like when you have your class, and you have your your methods on your class, which would be prototype methods. But if you want a either an instance property, meaning that a property that is unique to every instance, not on the prototype, or if you want a static property, which means that it doesn't exist on the instance, it just, it only exists on the class like array dot from is a static, that's a static method. But so like, how do you do that? That's what the class property and you just do n equals inside of the class. So you might, sorry, previously, like Scott said, you'd have to set those properties in the constructor, and then then your constructor just starts looking a little bit like weird, you know, like, you've got so much junk just thrown in your constructor. And class properties allow you just to it's very much just like a property on an object, except we use the equal sign instead of a colon. Yeah,

28
00:34:26,360 --> 00:34:27,960
Unknown: yeah, exactly. But yeah, so

29
00:34:27,960 --> 00:38:58,140
Scott Tolinski: what are our thoughts on it? I used it extensively, and exclusively, when I was still writing class components, so I like it. I like the syntax. It's cleaner. It's nicer. Yeah, it's it's funny. Like I don't use classes a whole lot. That's the classes are more of like an object oriented approach to it. And I think Scott and I are a lean a little bit more towards like functional total JavaScript devs. Yeah. So we don't use them a whole lot. I did include them in my course. Just because, like, I think I once did a poll on Twitter. I'd like to use classes and it was 5050 split, just like soy sauce, right down the middle. Just and there was a very classic, very divisible sauce. Some people put it in the pantry and some people put it in the fridge. And if you want to keep your soy sauce fresh like mine, and that not not fresh, like Wess in the pantry, you'll keep your soy sauce in the fridge. And not just joking, I don't have strong feelings. But you'll probably want to use fresh books to keep track of your expense when you buy soy sauce for the office. Because we all need soy sauce in the office. So I'm just telling you right there, Scott, if you were to buy soy sauce in Canada, for the office, you'd only if it was food, you'd only be able to write it off for 50% unless it was part of a sushi party which you are giving to your employees. And you could write off the soy sauce 100% How do you keep track of how much of an expense to to shoot you write it off? 50%? Because it was a meal? Or it? Should you write it off? 100%? Because you are providing as part of a party that's tax rules in Canada. And and how do I do that? Because sometimes I just go out for lunch when I'm traveling, and I can only expense 50% of that. And sometimes I we have like a Christmas party with me and my wife at the end of the year Exactly. And I use Freshbooks to track all of that, including my soy sauce purchases. So check it out@freshbooks.com forward slash syntax. And make sure you use syntax in the How did you hear about a section you'll get 30 day unrestricted free trial when you check that out. Thanks so much to fresh books for sponsoring. It's coming up on that time where we got to get all our expenses in order and all those things. Looking forward to it. Although I'm working with a new new accounting service this year, so I think it's going to be a little bit better. Okay, next question is from the SAR moon in a sir moon asks Hola, Wes and Scott, big fan of both of you. I'm a beginner, I have mostly learned front end so far HTML, CSS JavaScript react, should I first get pretty good at these before learning some back end? Or should I start learning some back end and have a basic knowledge of both front end and back end? Thank you in advance. Um, it depends. Depends on what your goals are. If your goal is to just get a job as a front end Dev, you just get get that expert tag and just work really hard on the front end stuff. But if your goals are to be a better developer and have a bigger understanding of the web overall, Hey, no harm, throwing a little bit of a note in there. And I personally do it because that's me. And I'm like a little too, all over the place and scatterbrained to stick to one thing for too long. But it all depends on what your goals are. If your goal is specifically to get a front end job, then I would just get good at those front end technologies. If your goals are to be a good, well rounded developer, then pick up some note as well. Yeah, honestly, if you you should at least build some small app in Node. If you want to take my learn node course that would be perfect for you. Just so that gave Candela Yeah, getting little Sally Sorry about that. couldn't resist. I think if you're a front end Dev, you should at least understand how the server works. And if that means just building one thing, you might love it. And you might be like, well, I'm gonna be a suite full stack dev now. And I love building the back end and the front end like you can't hurt you're only it's only a benefit by learning at least one project in the back end, you'll either say Good, I'm glad to understand how that cycle works. Or you might say, Oh, I really enjoy going from backend, the front end and doing react in jobs. I love doing it all. And that's me and Scott. And I'm super glad that I'm not limited by plus, like you probably have your own ideas. You're like, Oh, I wish I could build an app that did X, Y or Z scraped bikes or something silly like that. Then you can build it you can being able to build and fix your problems as a developer is one of the best parts. Cool.

30
00:38:58,140 --> 00:38:58,650
Unknown: All right,

31
00:38:58,650 --> 00:40:42,380
Scott Tolinski: next question from Gabe. If for some reason react died today and you're no longer able to use it. Which framework would you pick to use full time view or Angular or something like svelte, I would pick view? I would, I would probably pick you because the community is large. Ya know, it's like one of those things that, you know, if the communities large and it's growing and there's energy behind it, then chances are as people paying you money, right, or projects that need to be built in view, there will be projects out there, there will be jobs out there, right. You can't necessarily count on there being spelt jobs out there right now. That said, if I'm going purely on dev experience, I look for more. I like spelt more. It's different enough. I don't know it's a very simple and it's very nice. It has a lot of wow factor to it. But again, depends on what my goals are. If I'm building something for me, you know, I build something for me, then I would probably go out. That's hard to say. I don't know. We have enough experience building real world apps with either of them. All I know is that the view community is definitely larger. So that those are my thoughts. Next question is from anon. Not not the name anon, but a n o n anonymous. What habits, strategies or specific tools do you rely on to prevent your hard drives from filling up with useless files? Um, that's funny. We joked a little bit about this. I use spaces. That's what I do. No, I, I use an application called the daisy disk that has a really nice visual representation of that's what I use. Yeah, I've been using Daisy disk since like,

32
00:40:42,630 --> 00:40:53,130
Unknown: 2003. Since since the public school era. Yeah, no, just like a rappler. I forgot what song though. And that's Biggie Smalls party and Bs. Yes. That was one of my

33
00:40:53,130 --> 00:45:36,930
Scott Tolinski: favorite thing. In here. That's my one party trick. My one party trick is I can rap every word of party and Bs funny they can pick that Oh, yeah, I was when I was in high school. We had like a super long bus ride. And I was like, I'm gonna learn every word to that. And it's like the best party trick is every party I was like, Whoa, like totally did not expect you to know everywhere to party and Yes, I can. I could I could rap ludicrous is welcome to America. That's my my party trick, which is not even like a ludicrous single it's, it's, it's like just some random ludicrous og. So that's my party trick. But yes. I believe the correct therapy is that I've been a terrorist into the public school air. Is that what he says? Yeah, yeah, bathroom classes, cut. Back, bathroom passes, cutting classes. Squeezing lemons, keeping school is a daily routine. Something he insists 13 chubby guy on the scene. Yeah, I used to have a trade Deuce and the deuce Deuce and the bubble goose and now I got the bag in my backpack lounge in general so the thing is, like half the words I can't say yeah, no, that's that's correct. You need a nice nice a cool song like a wild wild west by Will Smith because he doesn't need Jim West West right up. roughrider don't wait, man. I got that song. Jim West. roughrider. Oh, man. No, man. I'm gonna try. Don't want none of this. None of this six gun running this. damsel in distress. Let's be out of that dress when she meets Jim West. Okay. Oh, yes. Well, okay, we have a podcast together. Brian arch at react athon. We will wrap on stage. Yeah. I can bring my soy sauce wraps. Okay, so what habits and strategies I use Daisy disk, I look at this thing all the time, because they did like, especially for me with a lot of video files, they take up a lot of space. So it makes it really easy. Especially my my node modules folder or Meteor project folders, that stuff can fill up pretty huge. And this thing at least gives you a perfect view as to where to dial down to find all of those, I also use an application called the clean my Mac, which I've been using for a number of years, which deletes a lot of cache files. It's Yeah, system utilities, stuff that you don't need. It checks on permissions, it resets all sorts of nice stuff, and generally is a nice utility to have. So those are my two key apps is Daisy disk and clean my Mac. Yeah, I use Daisy disk a lot just to see where everything is. I also have anytime I'm coding something that I know is temporary. I'll just name the folder delete me. And then I know later if I find a random folder, I can just delete it. Yeah, I know that it was just a temporary thing. There's the thing I use I forget the name of the package, but it would delete node modules that are older than 30 days because no module Yeah, if you I don't know like I I personally have probably 300 projects on my computer. And if everyone has node modules, then I don't know that's that's gigs and gigs of README files that you don't need on your computer. Totally. The biggest one for me is archiving video, because they're huge. So what I'll do for that is I'll put it on an external drive and I'll upload it to an off site backup I use backblaze B to for that. So I have to if I ever need to pull them back down I'll do that. And then I also have a policy of nothing is safe on the desktop or downloads and every now and then I'll just select everything on the desktop, everything on in downloads and just blowed away those are just temp and then yeah, if if it matters to you don't put it in your downloads folder I see people do all the time when I used to teach at boot camp, people would like work on their project out of their Downloads folder and then like it would be called like, like GitHub master or whatever. They would accidentally delete them like oh, like have a good Yeah, like have good folder structure right. And then and then also archive old folders like I had like WordPress is from 10 years ago, I just uploaded them all to, to backblaze b two. And then I just delete them off my computer. So I have space. So I almost went for the two terabyte MacBook, which I think you went for right? You bet I did. I have a good reason for that, which I'll get into, if you want. Yeah, I'm curious to hear Yeah. What is it? Well, I like to, I like to play games. I know, you're not a gamer. I'm not necessarily no gamer, either. But I have a huge Steam library, as many people do, and only work on Windows. So the two terabyte drive, I'm gonna throw 600 gigabytes of that thing into Windows and say, Hey,

34
00:45:37,019 --> 00:48:03,930
have that Oh, that's a great idea. Yeah. And so now I'm gonna have a decent Windows machine. Because from what I've seen on reviews, and the benchmarks, the gaming performance is on is really good. And since I got the, the highest video card, this thing's gonna be really good as a gaming laptop. I didn't buy it as a gaming laptop. But I used to have a hackintosh that I used to Game on. And I haven't been able to since taking that down. So I have an Xbox controller, and I'm going to hook it up via Bluetooth. And I'm going to play me some video games at a high resolution on my laptop. How about that? That's cool. Yeah, that's great. I didn't go for the one terabyte because my old laptop is one terabyte. And I want to I've many times I've needed to bring my computer into the shop. And I just Time Machine restore the entire computer to my old one. And then I have absolutely everything I need. And so it's just a one to one copy in. I've had it in the past where where the machine I was backing up to was or restoring to was smaller than what I had and then you can't restore to it. So ended up going one terabyte although it sure would love two terabytes just to not have to worry about deleting stuff. I haven't even NAS drive. So I'm kind of always moving stuff over there. Like I never let my hard drive get above like 500 gigabytes full. And I really got the two terabyte one just so I wouldn't have to feel bad about losing six. Windows. That's great. Yep. So that's really my thoughts on it. Um, next Oh, I also I should say, to remove my node modules. I have an alias to remove those node modules. We talked about another episode, we can make sure that alias is or at least the command that I run is in their show yet, so I'll make sure I have that in the show notes. Okay, uh, Nick Richmond asks the last question which we picked off of Twitter because we thought this was funny, which j s library is most like the Tesla cybertruck. If you haven't seen the cybertruck by now you probably have because this is it was out last night in an event and it is like the most brutalist looking vehicle ever been created. Et is absolutely absurd. It looks like a giant triangle pyramid thing. And I absolutely love it because I think it's super ugly. And, you know, that's sort of how I roll. What, what JavaScript library is the most? Like the cybertruck Oh, I got a good one.

35
00:48:03,960 --> 00:48:04,740
Unknown: You got a good one. Please

36
00:48:04,740 --> 00:48:43,110
Scott Tolinski: go with your good one. Because I'm, I'm struggling to come up with one. Oh, man, it this is the clearest. It's RX js. So RX js is a observable based. I don't even know how to describe it. Reactive extensions library for JavaScript. So it's basically a coating with observables which it's it's a great way to actually code and why do I think that is similar to the truck? Because it's, it's misunderstood. Often, a lot of times, it's fast. It's performance minded. It looks ugly at first. And lastly, the people who use it and talk about it are insufferable.

37
00:48:45,660 --> 00:48:46,230
Unknown: Oh,

38
00:48:48,210 --> 00:50:41,400
Scott Tolinski: the new vegans they said oh God, they are not good. You can't say anything. Like you pointed out one minor thing about a Tesla being I honestly like are they buying bots or something? Because like, like there are certainly like Tesla's are great. I would love to have one because they're the Bitcoin there are people there are certainly flaws and like, same with Apple people, though, like apple, people do not want to hear about Apple's flaws. Like they just don't want to hear it. Yes. Like these personality cults or something. I have no idea. So I'm not saying you're a cult, if you're an atheist, I'm saying cult of personality. Okay. My pick is not going to be it's going to be a VS code theme. Which is, I guess, not a library, but who cares? I can't think of anything. This is the synthwave 84 code theme. It has a nice beautiful glow on it. It has a beautiful look. It's my favorite VS code theme currently. And just it's just out runny. It's outrun. It's cyberpunk II. It's all of those things. The cyber Yeah. If there was if there if honestly, if there's a Robocop j s, I'm gonna look up Robo Robo cop .js cuz, you know, I just do that you can type in a word and then there is a Robocop .js. Okay, of course there is because I had no idea. Robocop .js is something about JavaScript at data schemas. It's a great name. I'm gonna say Robocop .js. Because this cybertruck reminds me exactly of the movie Robocop, which is a favorite of mine. Robocop? For those of you who don't know, it's a really, really awesome movie. If you like, very violent movies, it's very violent. So if you're into that action movie, and you haven't seen Robocop make sure you get it on blu ray. But yeah, I don't really have anything else. That's pretty much it. The tight cyber trunk is my kind of ugly and I'm here for it. So

39
00:50:41,609 --> 00:50:42,540
Unknown: that's all I got.

40
00:50:43,049 --> 00:50:43,770
All right,

41
00:50:44,219 --> 00:55:23,190
Scott Tolinski: let's move into some sick pics. All right, I'm going to sick pick a crewneck from everlane and it's part of their like a critic is just like a like a sweatshirt without a hood on it. And everlane has this like uniform line which is stuff that is put through the washer hundreds of times and they test it out and they guarantee it for a year 365 so if it becomes faded or stretched or anything like that, it's it's just an awesome quality clothes. And I honestly don't think a year is all that impressive. Like I would hope that a nice sweatshirt would last you for for many years. But it's I've been loving it. It feels great. My wife is really big into ethically sourcing of of where the clothes actually come from an anti fast fashion. So she got this for me when we were in New York and I was like this is awesome. So check it out. It's called the everlane uniform crewneck I got the green one. It looks sweet. I'm going to pick pick something that I sick picked in the past and well i don't know if i actually did sick pick this and that has me have talked about this. This is a keyboard the key Tron k one, I bought this keyboard as a Bluetooth Mac mechanical quote unquote keyboard. It's got these weird, tiny little switches. They're not like full on mechanical switches. It's like a low profile mechanical keyboard feels really nice. I've been a huge fan of this keyboard. Well, I purchased it before the 16 inch MacBook was released because my Chromebook pro was giving me double T's and every time I hit the spacebar it put a comma in because that's how a computer should work. And so I got this keyboard, the K Tron key one A while ago and the sensitivity was totally off. If you rested your finger on a key it would trigger a key press instead of when the click happens. So it was a total mess to use. Despite the typing experience being pretty nice. Well, they have rereleased it with the third edition of it. So if you purchase this thing, make sure you get the third edition, do not get the second edition or you will have a crappy keyboard. And this thing is great. It looks good. It's very fancy. It's got some really beautiful RGB, you know, fancy when I press a key like radio that's got some animation. I mean, I have a sucker for that stuff. I love it. I love the globe. So it's got this beautiful glow on it. It's a nice keyboard. And then now that the switches actually work, it's actually a nice keyboard. And there's not too many one Bluetooth keyboards that are mechanical, but two Bluetooth mechanical keyboards that have default neck settings and Mac bindings and Mac keys already on them. So this really, you know, checks a lot of those boxes. And I really like it. The typing experience is great on this thing. So a big fan of the key turn key one key cron, B cron. So I'm gonna shamelessly plug my beginner JavaScript course at beginner JavaScript comm If you or someone you know, Oh, is this out, it's it's not out as of right now. But by the time that this it should be out otherwise, sorry if it's not, but I've got four more videos to record. But like out of this has been my life's work for the past year. And I'm really excited about I think it's going to be like one of the best ways to learn JavaScript. So if you or someone you know and i think that I'm kind of banking on people who listen to this podcast already know JavaScript, some people are gonna take it as just a refresher just to fill in the gaps. But check it out beginner javascript.com cool. I'm gonna be plugging my Black Friday sale that's going to be ending like today is when you're listening to this, this is December 4. So we record these episodes in the future so it's like hard to put myself in future mes shoes here. But this sale will be ending tomorrow and it's going to be 50% off of a level up tutorials subscription for the year so sign up for that right now. This is going to be the cheapest price you can get the level of tutorials scription for all year, so make sure you sign up head to level up tutorials comm forward slash pro the course that I had just released in a couple days ago as you're listening to this and November 30th. Of course I just releases react and TypeScript for everyone. So that's the latest level up tutorials course you'll get that along with animating react. Next j s nine and react. Gatsby calm Every single level of tutorials course I've already released along with any ones that I released over the course of the next year. So if you are interested in learning all that stuff and shaping the future of levelup tutorials, head on over to level up tutorials comm forward slash pro and sign up for the yearly price for Black Friday and save big money is all right, sweet. Thanks so much for tuning in and we will catch you on Monday.

42
00:55:23,609 --> 00:55:24,870
Unknown: Hey, bass.

43
00:55:26,790 --> 00:55:36,540
Head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

