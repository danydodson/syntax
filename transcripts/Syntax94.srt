1
00:00:01,319 --> 00:00:10,560
Announcer: You're listening to syntax podcast with the tastiest web development treats out there. strap yourself in and get ready to live ski and West boss.

2
00:00:10,589 --> 00:00:19,980
Wes Bos: Welcome to syntax the tastiest web development treat podcast out there. My name is Wes Bos. I'm a full stack web developer and with me as always, is Scott Tolinksi. How you doing today, Scott? Hey,

3
00:00:19,980 --> 00:00:28,980
Scott Tolinski: I'm doing super good. It's snowing like crazy here today. So it's a nice little winter wonderland out there. Can't wait to get out to the mountains at some point. How about you?

4
00:00:29,009 --> 00:00:43,170
Wes Bos: That's exciting. I'm just laughing about the snow because last time this year we're talking about Blizz x. Oh yeah, I just bought a new set of winter tires to go on our car and I bought Blizz x because I thought of how hilarious That was last year, you

5
00:00:43,170 --> 00:00:45,509
Scott Tolinski: just have to shout blizzak baby

6
00:00:45,929 --> 00:01:23,280
Wes Bos: Liz. So I got the got the blues x getting put on on the shop right now it was snowing a little bit this morning. But we sometimes don't get snow until like January, February. About half the years we get we don't get it until the new year. So we'll see if we get some this year. Nice. This episode today is sponsored by two types of books. The first one is Manning books is coming on for a couple episodes to sponsor they are sponsoring today with their react in action book. It's gonna teach you react from a book. We'll talk a little bit more about that. And then the second type of book is Freshbooks. is sponsoring today. And they do it's the cloud accounting, I can

7
00:01:23,280 --> 00:01:26,700
Scott Tolinski: tell you really proud that two books.

8
00:01:28,020 --> 00:02:07,440
Wes Bos: two books are sponsoring today. Fresh books and Manning bucks love it. So today is a potluck, we're going to rattle through a whole bunch of different questions that you submit. If you have anything that you'd like us to ever talk about on the show, even if you think it's a big topic, put it in the potluck button, which is that syntax RFM you can fill out the form, put your name in, put your question in, and we will answer it on the show some of these questions are really good ideas like somebody asks, How do you handle licensing? And what are the different licenses mean? Or like that's a good idea, we should do an entire show on all the different types of licenses out there and how to properly attribute work that has been licensed under something.

9
00:02:07,470 --> 00:02:27,240
Scott Tolinski: Yeah. So if you're if your question doesn't get answered, it might get answered in more detail over the course of an entire episode. So don't worry about that. But also just feel free to submit anything we have. It's an infinity room on the question button. So just go ahead and submit all your questions, and we will pick the ones that we think are going to be useful to everyone.

10
00:02:27,600 --> 00:02:59,789
Wes Bos: All right. First question is from our Lemieux which brother to Mario Lemieux? Yes. That's the only thing I know about hockey. Yeah. The question is, I listened to your episode on freelancing. And I was wondering how to justify an increase in my hourly rate, you mentioned that you increase to 100 bucks an hour and nobody griped. But I seem to have a steady stream of clients who want things for free or nearly free. And I usually have that fear that if I charge them more than it won't get business thoughts.

11
00:02:59,819 --> 00:04:34,130
Scott Tolinski: Yeah, this one's tough, because obviously, you don't want to just be like, Alright, here's your invoice, it's $100 an hour now pay it because that's gonna piss people off. So I think they're the real thing here is don't increase your rate, dramatically one, so don't increase it dramatically, too, don't increase it in the middle of a project. Like if the, if the project was agreed upon, at one rate, finish out that project before increasing it, I think in an ideal world, you would be doing some value based pricing. And that way, you're not haggling over an hourly rate. That way the client is paying for the value in that way. Maybe you can low key set up what your hourly is in maybe a more favorable manner for you that regard. And you could present that as well. The project's here, I think would be better off if we were to bill on like a project basis or something for the next project, and then try to get your clients agree to that rather than have them agreed to All right, well, I was paying you 50 bucks, and now you're going to be paying me 100 bucks. So I don't think that would work very well. Another thing is I wouldn't jeopardize a reliable client. Now, if it's an unreliable client, again, someone who's asking you to do a bunch of stuff for free, it sounds like I might jeopardize that client and just straight up, tell them, hey, my rate has now increased to this amount for the next project and see how they respond. I don't for me, the fact that the client is asking for a lot of stuff for free is kind of a red flag. I guess that is sort of their duty as a business owners to try to get it as cheap of price for things as possible. But I don't know that that makes me a little worried.

12
00:04:34,320 --> 00:06:28,350
Wes Bos: Yeah, I think the way that I did it was new clients get new rates. So as you bring on new clients, when I said that I increased mine from 50 to 100 bucks an hour, I didn't just go to all my existing clients and do that. And at that time, most of my clients were doing value based billing already. But for those who wanted hourly based billing, because you were working on a larger team, and you couldn't really just like work on a feature and quote it out because there are so many moving parts. Just new clients would get that that amount And then existing clients would would just get like maybe every, I think every year, I would just do an increase of my hourly rate and say, Hey, this is my amount, I always wanted to make sure that you're okay with it, let me know your thoughts on that, and increase it, maybe 20 $30 an hour going up on there, at some point, you might have to say, See you later to some of your clients just because they, they just can't afford it, or they're not willing to do it, or they don't value your stuff. And that's fine. Because you're gonna have, you're gonna have turnover on your clients. And you're gonna start to weed out some of these bad clients that sounds like that you have that are expecting things for free. That might not also also be the case, then a lot of people think like, Oh, I'm going to be totally gone, and my business is there. And if that's the case, you're probably not worth what you're charging. But it's worth trying, trying it out with your clients. It's kind of like a game of chicken, because your client doesn't want your rates to go up. And you do want them to go up. But your client doesn't want to see you go because you're likely doing good work. And they don't want to have to find someone and train them and skill them up. So we have to do this with our sponsors this year as well. Because next year, our sponsors aren't going up 200 bucks per episode. So we have existing sponsors who want to come on for new ones, and we say, hey, the price is going up. Are you still okay with this? And here is why, here's why we're getting much more views than we were initially, you're getting really good value out of it. So just want to run that by you as well, in most cases, if they're still seeing value, if the calculations still work out, then then they'll stick with it.

13
00:06:28,410 --> 00:09:40,260
Scott Tolinski: Yeah, I think that's a good a good point to the whole value of everything the value, like selling the client on the value of the work, right gsra. Over time, you've gotten better at your skills, and therefore you're potentially in in more demand and can request probably faster, probably faster, right? So you're, you're able to provide the same amount of value in a shorter amount of time. So I think those are all all key things to think about here. Okay, next one we have is from AJ. AJ says, I started a YouTube web development channel. Recently, I was approached to produce content for money for another website. For some reason, I immediately thought I might be taken advantage of, I'm pretty new. And to be offered something like this so quickly know, if accepting, what do you think? Should I create content for a small website that I've never heard of, or continue with YouTube? Or both? I have a lot of unique thoughts on this, specifically, because I've ran a YouTube channel and I've done content for myself, and I've done content for other publishers, YouTube does not pay the bills. First and foremost, you can have, you know, 200,000 subscribers, and YouTube is not going to pay your rent, you know, so I wouldn't rely on YouTube to make a ton of money that people that you see making a ton of money on YouTube, or most likely making money outside of YouTube via brand deals and sponsorships. So again, I wouldn't rely on YouTube to make money, I would have YouTube be more of a marketing tool, have it be for fun, have it be to provide free content for the community, that sort of thing. For as terms of working with a publisher, I did a course for an publisher that I'm going to not name and they paid me $1,000 advance. And then well turns out I learned a big lesson in royalties, even though I sort of understood royalties at the time, I actually, I did royalties for a record label, I for some reason did not take into account the situation. And basically, I wasn't getting paid anything additional for sales for my course, until the percentage that I earned, which was the small percentage paid off the advance that I received. So even though the advanced is only $1,000, it took a long time with the rate that I was getting from the core sales, and I wasn't seeing any money. So it was really frustrating to see that they sold, you know, hundreds of copies at this price. And I was getting nothing for this still. Now that said fast forward. You know, five years later, I'm getting $200 in the male every quarter for royalties for this thing that met my limit, but I would definitely say that definitively wasn't worth it. I think you need to calculate whether or not to quote an excellent movie if the juice is worth the squeeze right? Because like if it is worth it, if it's worth your time your new person maybe you're going to get some experience doing this if it's worth your time go for it right just be you know, way that the benefits to the the outcomes. I don't know about getting scammed here. Again, just make sure you have contracts, make sure you understand the agreement, and make sure you understand what you'd be getting paid. That's it level up tutorials is looking for new content and creators. So if anyone is doing good content and would like to get paid to do it for level up tutorials, reach out. Yeah,

14
00:09:40,320 --> 00:11:17,700
Wes Bos: yeah, this is an interesting one because I get contacted all the time by people who want me to the biggest one is people with these unknown platforms want me to take my content and put it on their platform and they'll take a generous 80% cut or 50% cut or whatever it is that they want. The reason behind that is because it's free. It's really hard to find content creators that are both really good. And they're willing to do they're willing to do it for somebody else. Yeah. So what they're likely doing is that they're, they're just cruising YouTube, looking for people, like your stuff is probably really good. There's no link here, but I'm assuming they said, this guy's brand new, but the stuff is really, really good. This is some undiscovered talent, I'm going to try and and bring them on. So that's good. Because you could if you want to make a little bit of money, if you want to get some experience in that regard, it's it's, it's a way you could make some some quick money on that. But in my career of making content, and I go back to writing blog posts, over the years, I've spent, I've written maybe four or five blog posts for different people around the world. And for that, you get a couple hundred bucks. And in the long run, it's almost always been worth it for me to write the blog post and put it on my own platform, and then get the long tail effect of that have links to my courses, people finding it in SEO. While I didn't get like a huge bang right away the long tail of that the Twitter followers, the the site traffic that link backs, all that stuff was was well worth it in the long run. Hey, that said there's been Sorry, go ahead.

15
00:11:17,880 --> 00:11:30,510
Scott Tolinski: I was gonna say like, what what about exclusivity deals? Like, what if they were to say, hey, we'll give you $200 to put this on our site, but you can also put it on yours? That seems like a that seems like a win win? Does anybody do that? Yeah,

16
00:11:30,570 --> 00:13:32,610
Wes Bos: like a redistribution? Yeah, I got actually an email in my inbox about that right now. Or somebody just wants to take some of my free stuff and put it on their website. I see this all the time with universities who want to package up my courses and offered as part of the curriculum in there. So it's hard to say because like, I've also like, early in my career, I wrote a blog post for CSS tricks on Sublime Text. That was huge for me, I got tons of traffic, I made tons of sales, I got tons of followers from that. So obviously, if there's something big, like CSS tricks, I would totally go for it. But I think if you're not hurting for money, it's definitely worth just trying to stick it out and stay on your own platform and sort of own the content yourself. Because I think in the long run, it's gonna be well worth it for you. Word. Yeah, I know, it's kind of an interesting thing, where there's lots of people out there who are trying to just like gather content creators. And then there's, there's lots of people out there who are content creators and just want to do it themselves. And if you have the time, I say do it yourself. But also like, like egghead just rolled out this they got Did you get the email Wes Bos as a service they rolled out, which is apparently a problem that egghead is having is that people are looking at, like people like me who are selling courses by myself, and saying, like, why would I do a course for you if I could just do what Wes is doing and do it by myself. And the answer to that is that I've spent years building my own course platform, I have my own audience and stuff like that. Whereas like most people don't necessarily have that an egghead is going to provide infrastructure and marketing and design support and, and all of the e commerce that comes along with it, and the support email and all that other kind of heavy stuff that's hard, that don't necessarily always talk about which is part of running it. So there is a spot for people who are trying to help you with your content. And then at the same time, like you've done videos for sketch as well, sometimes people just contact me and say, like, I just need someone to go through our own product and make tutorial videos on how to use our product, we need to be able to send them to this to our clients.

17
00:13:32,640 --> 00:15:27,210
Scott Tolinski: Yeah. And that's always been in been great for me to do content for companies like that, that need tutorial material. Again, I think it's for me, creating content isn't that difficult, especially on things that I use every day? So it's not like a huge time sink for me to make some of those videos. It's a good return. Yeah, again, it there's a there's a lot of factors to be considered in regards to any of this stuff. But I think we think we nailed it on most of those. Next we have from Richard Kaufman. The question is I've read on Twitter, that react context can be a good replacement for Redux. Why? And I think the the key word in your question is can because it absolutely can be a good replacement for Redux. I think a lot of things can be a good replacement for Redux. And other ones, maybe not so much, right? Redux offers, for those of you who don't know, basically a way to manage your state throughout an entire application in one sort of large store, that's easy to sort of understand, it's easy to understand where the data is being loaded, how it's being loaded. There's some nice little features with the dev tools and getting that sort of time travel stuff. But the reason why people would say context is a good replacement for Redux is specifically because it allows you to manage the state of your application and take state or data from one part of your application and use it in another part of your application without an external third party library. Now granted Redux is very ingrained in the React community is that Really like you're adding something that who knows if it's going to go away at any time or whatever. But it basically allows you a lot of those features without having to add an external library is I think the big thing. It's part of react, right. So I think that's, that's why people would say it's a good replacement. That said, it doesn't replace all of the functionality. Again, it's a different way of doing your your state throughout your application. But again, it does provide you with that ability.

18
00:15:27,510 --> 00:16:13,080
Wes Bos: I think people use Redux just for the ability to inject it via the high order component. Now, the fact that you can just inject data, wherever it is that you want, with contacts is really good. And now with hooks, we did episode last week on hooks, we have the ability to use reducer. So you can even take some of your complex reducer logic, and and all of your actions and stuff that get fired off and dispatched, you can just move that into its own. So I definitely see between hooks and context and the suspense stuff that's coming up. I don't really see a lot less people reaching for Redux in the next little bit, which is great, because I think that for most people Redux is too complex. And it's unnecessary in a lot of use cases. So it will be exciting to see that the stuff gets easier.

19
00:16:13,110 --> 00:16:47,909
Scott Tolinski: Yeah, well, I use Redux when you can use something fresh like hooks, that brings me into our first sponsor today, which is fresh books. I don't sincerely mean that you can Redux is great. Still, I don't want people to think that I'm like, use hooks don't use Redux. But yeah, so fresh books, as longtime sponsors, sintex. And let me tell you, that's just a great way to manage your accounting, which I should know, because I actually worked as an accountant at one point in my life. And it was no fun, probably because we weren't using fresh books. So it's a little bit more about fresh books is Wes Bos.

20
00:16:48,149 --> 00:18:38,060
Wes Bos: Yeah. So if you are trying to get paid nice and quickly from your clients from anyone that is there, trying to collect money from Freshbooks, is what you're going to need to in order to do that. So I use Freshbooks. Myself, I just log in, I create an invoice, send it over to the user able to pay via credit card, if I have that set up, I've a bunch of different types of currencies that people can pay me in. Sometimes I have to fly to the UK, and I need to be reimbursed for a flight. So what I'll do is I'll put in my flight into my expense, and then you can take that expense, it automatically turn it into an invoice, you can attach specific expenses to specific customers, and that will then turn it into into an invoice for you, you can get paid in all those different currencies, you can have automatic billing reminders. So if someone forgets to pay it, they can do that. You can see if someone's seen your invoice yet. So if you log in and someone hasn't paid, you can say Oh, they haven't even looked at it, they didn't get the email, or they looked at it three times and haven't paid me yet. And maybe it's time to, to start knocking on their door to see what's going on. Bump, bump Bump. So if you're trying to run any type of business, you're trying to log your hours, you're trying to send invoices trying to manage all of your expenses with the different types of taxes. I love Freshbooks for this because at the end of the year, tax time is coming up in a couple months for me and I just need to simply export all of my all of my CVS or CSV files. And my accountant is super happy with that. So try it out@freshbooks.com forward slash syntax and use the code syntax and how did you hear about us, you can get a 30 day unrestricted free trial. And that's not one of those trials where you have to put your credit card in and then they start charging you when you forget about it. You don't even need a credit card to sign up for this. So check it out. Thanks so much too fresh books for sponsoring.

21
00:18:38,520 --> 00:18:48,350
Scott Tolinski: Thank you. Next up we have a question from Christopher Robin. Christopher Robin asks, yeah, Wes Bos is smiling. Are you smiling because of the Winnie the Pooh thing?

22
00:18:48,630 --> 00:18:51,180
Wes Bos: I'm pretty sure it's Winnie the Pooh that asked us Yeah,

23
00:18:51,240 --> 00:18:54,830
Scott Tolinski: okay. I'm sorry, Chris. If you've been getting that your entire life.

24
00:18:54,830 --> 00:19:00,320
Wes Bos: I'm sure that if that's his actual name, his entire life, his people making Winnie the Pooh jokes at him. I know.

25
00:19:02,970 --> 00:20:12,990
Scott Tolinski: I don't want to perpetuate that. Here's the question. What's it like running a podcast? And I love this. This is a fun question. We often do a lot of technical questions were is is a fun question. Because running a podcast is a lot of fun. You know, personally, it gives me an outlet to just blab on about things that I love without having to bug my wife about it, right? So like, I can't even count the amount of times I've been like, hey, Courtney taught Let me tell you about this technical thing that you don't care about until just like gloss over. Right. So for me, it gives me an outlet to just blab about this stuff without having to I don't know, we're getting to talk to what is an audience that is also excited and interested about it, right? Because, to me a lot of this web dev stuff, the new things in web dev while you know it can often be seen as like maybe JavaScript fatigue, he or you know too much stuff to me, it just excites me. There's a lot of great stuff always coming out. And honestly, if I can just talk about it once, twice a week, whatever. It really sucks. me up. So for me running a podcast is a lot of fun. You get a lot of opportunities to spend some time learning things. And to be honest, it's just I don't know, it's it's been a blast. And I hope it continues to be a blast, because it's been great so far.

26
00:20:13,230 --> 00:21:10,710
Wes Bos: Yeah, I've, I've been really enjoying it as well. I think that for me, the biggest thing with the podcast is just a lesson in consistency. The fact that you I both have Scott to record with every week, as well as I have the sponsors who have paid for the episodes ahead of time, you need to make sure that you actually make the content. Otherwise, you're pooched. And you have to give the money back to the sponsors and things like that. So the fact that we've just been consistently doing it for what, a year and a half so far, and we've only I think we missed one week, somebody like did a visualization of our RSS feed over the podcast, and just showed that we've been doing it for so long. And there's only one week where we've missed it. And I thought that was pretty cool. Because we travel a lot, we get sick a lot. We've got kids, we have bad, bad sleep nights, and we've been able to make it work. And I think that's just a lesson for anyone where if you want to make something work like this, just keep at it and just do it. week in week out. It's not always easy. Sometimes we have unlimited topics to talk about. And other times, we're like, what should we talk about today? What's something that's, that's interesting?

27
00:21:10,770 --> 00:21:38,130
Scott Tolinski: Yeah, there's always that person that gave up one week too soon, right? Like, I've been making content for, you know, seven months, every single week, and I haven't seen any movement. Well, maybe you were like one video away from the one that like broke out and gained you a ton of subscribers or something like that. For me. Again, the consistency has always just been such a key thing and most things that I do. So again, yeah, I totally hear you with the consistency aspect of this, it's time to make the donuts

28
00:21:38,400 --> 00:22:48,720
Wes Bos: totally. Well. The other thing I really liked about the podcast is the community. It's interesting, because those who are listening to it, they listen to us like for probably an hour and a half every single week. And then you meet people at conferences, or you get emails from people and they feel like they really know who you are because they listen to the podcast so often. And this community is awesome. Because there's people that are sort of helping each other. I know that we don't have like a discord or slack or effect drum or anything like that. But even just like through Twitter, through people talking about the podcast is really cool to see that on Twitter sponsors is another really cool thing, like the people who sponsor this podcast, are mostly just web development companies trying to make the lives of us web developers easier, trying to make things like billing much easier. And I think that's really cool as well that we can have an audience and share things even like like Netlify is a really good example. as well. We can share these, these products that we're excited about that are actually helpful to our users and our users can discover them. So it's cool that you can help other companies grow as well. And I know that's sometimes a weird thing for people because like these are businesses and they're corporations trying to make money. But at the end of the day, they are meet the people behind these companies, and they're just trying to make it work and they're trying to help developers.

29
00:22:49,020 --> 00:23:08,730
Scott Tolinski: Yeah, we really do love our sponsors. I've never ever felt like morally questionable about, you know, doing an ad read or anything like that. I've never been like Garth from Wayne's World decked out and Reebok. Like it's, for me, it's like, always stuff that we use and love. And it feels genuine because it is genuine.

30
00:23:09,060 --> 00:23:48,120
Wes Bos: Totally we've and people say like, would you turn down sponsor like that? And the answer is, yeah, we totally would. But we also don't have anyone who's running these like sketchy companies willing to like it's expensive to sponsor this podcast. So it's only companies that know it's going to absolutely work work well for them. I also just like the like sick pics and everything just like the the stuff that is like tangentially related to web development whether how many people bought Scott's stupid drill brushes. They're awesome. How many people bought the squeeze bottles that are recommended a couple of weeks ago, like these are just like, we're all humans. And we all love the fun stuff like that. So I think that's a really fun part of the podcast as well.

31
00:23:48,150 --> 00:23:56,850
Scott Tolinski: Yeah, speaking of steak picks, my sick pick today is very wholesome. I can't wait is bordering on weird, but I'm excited for it. So

32
00:23:58,830 --> 00:25:38,160
Wes Bos: let's keep going to the next question. I like that one. Thanks for that question. Chris Webb asks, I've seen a rise in the term full stack designer. Is this the title you've you think will become a real thing? Is someone capable of overseeing a project from concept to prototype? Thanks. So it's funny that people always get bent out of shape over titles like this. And people say no, that shouldn't be a thing. Even the word full stack really irks a lot of people in it. I think with the exception of engineer, which I understand when people get irked about it because an engineer is someone who's in most cases, legally responsible and and goes to school for however many years to get the certification passed that job titles are just job titles. You can call yourself whatever you want. The idea of a full stack designer is kind of interesting. Like for sure, we will see people and there are lots of people who can design an amazing thing, prototype and amazing thing, pull it together, build up the entire scalable back end as well as do a really nice front end. I don't think That will be as popular as as you think it will be. Because just because like, that's a huge breadth of knowledge that you have to understand, what I do think that we are going to see is designers who can make a really nice thing, but also can implement it, maybe they can prototype with react or use some of these tools and build out the entire application. And then you can lean on the services that are maybe serverless functions, or, or maybe something like Sanity io or Netlify, CMS or any of these, like sort of like back ends that will do the heavy lifting for you. And you can sort of just lean on them to pull in the data. So that's my thoughts around that.

33
00:25:38,190 --> 00:26:07,200
Scott Tolinski: Yeah, I know, I largely see it as a vanity title. I mean, most titles are kind of vanity titles in a lot of ways, right? I know what you're saying, like with the whole, everyone gets hung up on the title, I get that, you know, I get it. Like, I became, quote, unquote, a senior developer early on in my career simply because the guy above me quit. I was in that role, right? Like, but if you were to put me up against another senior developer, who knows, it's all like, it doesn't really matter.

34
00:26:07,470 --> 00:26:14,490
Wes Bos: Yeah, some people want like the government to come in and start, like, controlling what people are called senior developers. Seriously,

35
00:26:14,490 --> 00:30:14,550
Scott Tolinski: I totally agree. And it's, I largely see this vanity, this full stack designer as like a vanity name or whatever, again, you're gonna want to have a lot of these skills if you're a designer, and no, it depends on the size of the agency or the company you're working at. Many times, I've worked in companies where a full stack, quote unquote designer was just a designer, just a good designer, right? It was you needed to be able to do all of those things, because there was only six people working at this company, and we don't have the money to pay, you know, someone to just do UX design, you better do all of it. So for me, it doesn't really matter. Again, I wouldn't get hung up on any of this stuff. Everyone who's a full stack developer has, like one area that they're the most strong in anyways. And it's going to be the same thing for designers. So again, like I could refer to myself as a front end developer, but I work on the full stack of my application. Therefore, I'm a full stack developer. Am I good at the full stack? I'm decent at the full stack? Am I the best at it? No, I'm probably not the best at it. But you know, I think again, it's worth saying that it's it's really just, it doesn't matter. It's vanity. You can call yourself whatever you want. At the end of the day, my first job title was an interactive producer. And I held on to that for a little bit. It was totally meaningless. Okay, so next up, we have Mike, I want to say this is Roche, but this is how my dad spells his first name aro ch and my dad pronounces it rock, there's a st rock in some sort of I don't know what the same rock is from, but that's how he pronounces it. So it's either Mike rock, or Mike Roach. I'm sorry, if people call you one or the other. The question is, what has been the most awkward situation you've been in as the dev I've been? I've been it's a fairly awkward situations in agency life. And I'm not going to name the agency or the people involved in this. But if any of my co workers are listening to this podcast, they've probably very aware of this situation. One time, we were in a meeting, maybe like a year into a very in depth project. It's a big project, big team. And we we were very intensely into this project. And all of a sudden, an argument broke out in one of our team meetings where there's like 30 people sitting around a table, and my boss, and it was basically, you know, our boss, who's the boss of the devs. And then there's three devs. below him, he starts going off at the project manager, like berating her, just like yelling at her in a very inappropriate way about Photoshop files, it was so meaningless. And he just he went off, and I'm sure he was gone through some personal stuff, or whatever that led to that situation. But it was super uncomfortable for everyone in the meeting, he then stormed out of the meeting, she quit the project. I mean, she didn't quit the company, she asked to be assigned to a different project, rightfully so. And then we just sort of came into work for two weeks, where our boss was then put on like a leave. And we came into work for two weeks without any knowledge of like, what's gonna happen to him? Or what's gonna happen to our project or what's gonna happen? And we just sat there we come into work every day. Do you guys hear anything get? I don't know, we'd see. Like, we'd see, you know, higher ups talking sort of by us and maybe pointing at us, like, was so uncomfortable for about two weeks. And then all of this is like two weeks later, the boss of our boss or I don't even know what this guy's roles he took us into a conference room. He's like, so your boss has been put on leaf for about a month, and we're just like, Okay, what are we gonna do? And then unceremoniously, like, a little bit through that time, they're just like, Oh, yes, by the way, he's been fired. You're just like, Okay, great. So we had no but I'm pretty stoked. Remember ever getting another we ended up just managing ourselves for the rest of the project, it was totally bizarre. And it was super awkward. And it was definitely an awkward couple of weeks while we were just sort of sat in limbo. That was that's definitely the most awkward situation I've been in as a developer.

36
00:30:15,060 --> 00:31:15,390
Wes Bos: I haven't been in a whole lot. But though the one that sticks out to me, that makes me want to stick my head in the sand is, luckily I didn't do this. But I was on a work in an agency during my co op, and the client was being really difficult. And the emails were getting a little fiery back and forth, because they just weren't understanding what was going on. And the PMO the project, replied all and they meant to just reply to our team on the thread. They said something about how like client was being dumb, and I think they put a swear in there. And like, like, 20 minutes later, once everyone realized what had happened, we're kind of sitting there being like, what do you do to come back from that? Or you just called out the client to their email? Oh, you don't. And they sent a follow up email being like, Look, everyone, let's get through this. I totally forgot what it was. But they save this somewhat saved it, but I I just, I'm just cringing right now. Just thinking about that happening again. And I was like, probably, like, 10 years ago that that happened. Oh, that's

37
00:31:15,390 --> 00:31:16,410
Scott Tolinski: so bad.

38
00:31:18,420 --> 00:33:29,460
Wes Bos: Yeah. Next question we have here is from Nate Spillman. Do you have any good resources on JW T, I'm unclear when my front end needs to send what to my back end to ensure sites, sites and only my sites can get the data requested from my server. Thanks for everything you do. Alright, so JW. T stands for JSON Web tokens. It's a way that you can do authentication from your client to your server. Basically, the way that it works is when you sign in, you get back this token from your back end, and you store that token either in a cookie or in a your local storage. And then every time you make a request from your back end, to your front end, then you send that jadibooti along for the ride. And that's how you know that you are signed in the database kind of cool as well. Because you can put information in uj wt things like you could put like an avatar, most likely, you're going to put your users ID in there, you could put a list of permissions, things that are just handy info about the user that you need, without having to make a round trip to the server to request info about the user resources on that I use it on my new advanced react.com course we do jadibooti from scratch so that it's not using auto or any like existing solution, or passport jass or anything like that. It's just right from scratch, surprisingly simple to implement. We don't implement all of the different features that you can, which is like you can like make them not expire, but you can make like a blacklist, Adam wathan has a really good podcast called full stack radio. And he just did a really good episode, let me pull up the name of it real quick, Episode 98, with Ryan chinky, securing single page applications that was a really good look into all of the different upsides and downsides to using jadibooti over something like sessions and cookies. But to answer the other part of that question, how do you make sure that only your back end can get data that requests a server that's where course starts to come in. Generally, when you set up your back end server, you will list a bunch of domain names that are allowed to make requests from yours. And that's that's how you make sure that you can only send them from that domain name and anyone else who were to get access to that JW t can't send them from different domain names.

39
00:33:29,790 --> 00:34:13,830
Scott Tolinski: Nice. Yeah, cool. And I mean, if you're interested in learning react via video, you can check out what is advanced react.com course. But if you're interested in learning react via a book. Well, I think we have a great place for you to do there you go. Yeah. Which is manning.com forward slash books forward slash react hyphen in hyphen action, aka react in action via Manning publications, is a great way for you to learn react if you're the type of person who prefers to learn from a book, which I know there is a ton of you because so many people messaged me saying I don't want to learn from video. And I say, well, tough because I can't write books. But Manning, they have authors who are very talented at writing books. So it's a little bit more about react in action as Wes

40
00:34:13,940 --> 00:35:26,820
Wes Bos: Yeah. So you want to check us out. I get this all the time as well, people email me like I would love to do your video. But that's not the way I learned. And I totally understand that not everyone likes to learn coding from watching videos, they might much rather just sit down with a book and a pencil and read through the entire book. So this is an awesome book, if you want to check out learning react via a book. It's called react in action by Mark Thomas. And it's a 360 page book. So it's a pretty hefty book. It goes into everything about from scratch. So you learn react, you build your hello world component, you'll learn about data flow, passing data through it, you'll learn about all the lifecycle methods inside of react, working with forms inside of react, integrating third party libraries for react all the way through if you go to the end of the series, Looking at using things like react and Redux together using different state managers using react on the server. So check it out@manning.com forward slash books forward slash react in action, and there's dashes where the spaces would normally go. Thanks so much to Manning for sponsoring, they're gonna they've got a bunch of shows coming up, and we're gonna be sort of spotlighting a different book on every single one that we have. So thanks so much to them for coming on for that.

41
00:35:26,850 --> 00:35:32,070
Scott Tolinski: Yeah. Thank you, man. First time bouncer. This is the first time they've sponsored an episode, I should say. So thank you.

42
00:35:32,100 --> 00:37:59,900
Wes Bos: Yeah. How do you move selected text horizontally or vertically in VS code? I've seen it and watched his videos. I tried to ask him on Twitter. But I'm sure that's a chore to keep up with. Yeah, sometimes people ask me questions late at night, or on weekends. And then by the time I come, my Twitter feed is much past that. So I don't see them all that come in my Google Aton. I didn't see any thing. All I found was an extension that adjusts auto indentation, which is not what I'm after. So this is a question I get all the time. It's one of my favorite features of VS code. I'll start with the vertical moving of the text. That's something called a call line bubbling. If you just Google Wes Bos line bubbling, I have a video on how to do it in Sublime Text. But it's exactly the same in VS code. Basically, you just select your lines that you want. So you could either just put your cursor on one line, or you could select multiple lines, then in at least in my editor config, you hold down the Option key and hit your arrows and just use your your arrow keys to go up and down. And that will just swap out your lines. I much prefer that line bubbling versus like cutting code and pasting it in. Yeah, like I can see where it's going. That's one of my favorite VS code shortcuts. The other one that I have is how do you move text horizontally, generally, what people are referring to because they see that they see me do this in my tutorial, it's where you you select a bunch of text on multiple lines, like if you have like a label, and the for attribute is like for name for a phone number for email, copy name, phone number, and email. And then what I'll do in that case is I'll just copy it, and then use my arrow keys to move my cursors to the right of that, and then I'll paste it in. And if you have the same amount of items in your clipboard as you have cursors on your page, so if you have three items in your clipboard, and you have three cursors on your page, and you paste it, then they will not pace that those three items three times over, they'll paste the first item on the first line, the second item on the second cursor, and the third item on the third cursor. That's one I think a lot of people know about. And it's extremely helpful when you're doing repetitive coding like like trying to do forms on a page. Where so yeah, big fan of that. That's how I do it. I will at some point, do a VS code course because people ask me all the time, how I do these things and these little tricks. And it's frustrating because I also use the Sublime Text, keyboard shortcuts. So if I even tell somebody what I'm touching on my keyboard, it's not not necessarily the same thing for them. I

43
00:37:59,900 --> 00:38:02,340
Scott Tolinski: know for vertically, it is option option up down.

44
00:38:02,520 --> 00:38:40,880
Wes Bos: Yeah, shut up down as with sublime, it was a different one. But I just used the VS code one, which is good. My only recommendation to people is that when you're trying to do something, just open up your command palette, and just type like, move up. I just typed move up, and I found it in my command palette move lined up, and then it tells you what the keyboard shortcut is. And there you go. So it's not this like hidden thing where I have access to all of these shortcuts that no one else could possibly know. It's the fact that if I don't know how to do something, I look it up in my command palette, and then I look at what the keyboard shortcut is. And then I use that and then I do that like 10 times. And then hopefully someday I will remember it and I don't have to look it up.

45
00:38:40,920 --> 00:38:47,850
Scott Tolinski: Yeah, and for those of you don't know the command palette is opened by Command Shift p, bring it up. And if you're on Windows, just

46
00:38:47,850 --> 00:38:53,460
Wes Bos: go buy a Mac, and then check in there's some keyboard shortcut, as well.

47
00:38:54,920 --> 00:39:23,960
Scott Tolinski: That's gonna get some emails. Okay, next time we have somebody who did not leave their name, but the question is good. It's also a question that we sort of answered before in the last episode, I believe so but I want to I want to take some a little bit more time on this one. The question is, how do you recommend providing feedback on bad code to a developer more experienced than you without coming off as uppity? No at all jr? Who just read a bunch of textbooks and digging into a codebase that is full on spaghetti not that not that tasty? Kind of like a little side note without like taste?

48
00:39:23,960 --> 00:39:33,300
Wes Bos: Oh man spaghetti looks a side note. Spaghetti is the only food in the world that I will not eat it makes me want to puke that's messed up. Disgusting. Yeah,

49
00:39:33,330 --> 00:42:14,880
Scott Tolinski: yeah, that's that's messed up full of enormous tightly coupled files, doing multiple things in lengthy terribly named functions and is sopping wet, repetitive mess. So much bad practices going on here. I have no idea how this is supposed to scale. It's a client product. So it is supposed to. I'm not an expert. I didn't build this house but I'm supposed to live here. So help. Okay, yeah. So this one, it's important because again, the thing you don't want to do is you don't want to go to the more experienced developer and blog WTF man? Like, what's up with this? Where why'd you do this stuff? Why'd you do this? Because you don't know the history of this project. If anything, I would ask them what's like the history of the codebase. And what's the situation, maybe they were given like, one day to do it and just had to cobble together something. Maybe they were handed this codebase, from another developer from who got it from another developer who got it from another developer, I've experienced all of these things in my time working in agencies, where you might think that someone is responsible for something but who knows, it was actually the guy for people before them. And well, they didn't leave any, any anything good behind. And everyone's just sort of been dragging this project along ever since every developer who's ever touched it. So for me, the last thing you want to do is start blaming or assuming that anyone in particular is responsible for anything. Next, I would say like how you said, it has to scale as in this is a long term project, I guess, to what extent does it have to scale it has to scale a lot, and you can provide the resources to start rewriting things, then I might go for that. But I would only do so with permission, I wouldn't say just start doing it going rogue, you're not James Bond going rogue here, you should ask your boss, whether or not like that's a good idea. Because you have some concerns. In either case, I think if you notice, this is a pattern with this particular developer, maybe you know, for a fact that they wrote this project, and maybe they wrote a couple of other bad projects, I wouldn't go to that developer anyways, I wouldn't do that, I would go to your manager. And I wouldn't necessarily say tattle on them or something like that. That's not what this is about, say maybe you have some concerns about so and so's projects for maybe these reasons. And maybe we could work together to resolve it. Because chances are, maybe it's maybe it's laziness, maybe it's the person, or maybe it's just the person not realizing that other people are looking at their code and thinking it's bad. But either way, I would take all of the blame out of everything. It's not a blame situation, it's a team thing, and you want the team to be best. So again, don't go to your boss and tattle on this person. But maybe just ask some questions and see if you and the rest of your team can work together to improve this code base.

50
00:42:15,030 --> 00:45:08,790
Wes Bos: I agree, I have nothing really to add to that. It's definitely a hard place to be in where the person who is supposed to be supposed to be able to mentor you and move you where the code is just not very good. And it's a hard place to get through. But I think what Scott said is really important to think about first. Next question is from Ryan, how do you set up an IP whitelist, I'm getting started managing databases, and I am using Mongo Atlas. So this is actually a bit of funny, you know, m lab, one of our past sponsors, and the host I've used for my own MongoDB host. They got bought like a week after we did the the sponsor podcast for them. And they got bought by MongoDB. They've had their own product called Atlas. Just kind of interesting, because MongoDB just bottom up, because m lab was awesome. That's an aside which people a lot of people have been asking, like, Hey, what are your thoughts on M lab being bought? And I'm like, I think I'm happy about that. Because that means that the quality of M lab will hopefully be moved over to the the product that MongoDB has, which is called Atlas, they require an IP whitelist for all connections developing from my computer is fine, because I can just add my IP to the whitelist. But what do I do if I actually want to make my API or website public? Just whitelist? Everything? That sounds like a terrible idea. All right, this is a good good question here. Generally, you do want to whitelist your your database, which means that no one can have access to your database, even if they have the username and password, unless their IP address is on a list of accessible IP addresses. And for a public facing website, you generally don't have your public directly access your database. Generally, what happens is that your your users access your server, and then your server just talks to your database. And in WordPress land, a lot of times your database and your your database and your your code is even running on the same machine. But in a lot of use cases, your database runs on one server somewhere and then your actual code runs on a different one. But you need to figure out what is the IP address of your server as well as what is the IP address of your your develop machine development machines. A lot of companies make you sign into a VPN before you even do any of this work that the reason behind that is because they only want access through their company's network, not through some random rogue coffee shop Wi Fi where you could be sniffed in the middle. So that's the answer to that is that you don't need you just have to whitelist your actual server as well as your development machines which are directly connecting to that. And then you don't have to whitelist your actual server itself. There's things you can do there in terms in making sure that you don't Get DDoS or someone doesn't take advantage of your API. That's a whole nother show. We'll probably do at some point. But you don't need to worry too much about that.

51
00:45:09,150 --> 00:45:25,770
Scott Tolinski: dope. Yeah, I think this, this leads into a bigger point is that we need to do an episode on security stuff which we have in our listing, I think it just needs to happen, sometimes sooner where we can talk about just some things as front end or full stack developers that you need to be aware of when dealing with security. And yeah,

52
00:45:25,950 --> 00:45:44,850
Wes Bos: I think that that's a really good point. It's just like knowing about all of these different things that you don't necessarily like these are the things you need to do what you should be aware of IP whitelisting, you should be aware of rate limiting, and you should be aware of like different types of rate limiting and, and what a DDoS attack is and why it could could pull you down. So coming up,

53
00:45:45,120 --> 00:45:53,760
Scott Tolinski: common app. All right. Also coming up is sick picks. I see you have a nice little sick pic here. So do you want to go first with your sick pick? Yes.

54
00:45:53,760 --> 00:46:59,070
Wes Bos: So a couple podcasts ago, I sic picked my feefo bottles for the kitchen. And I said I've got a whole bunch of little kitchen gadgets that I find really helpful. And generally my kitchen gadgets boil down to what do they actually use in restaurants, because that's, I think that's the most productive thing you can use and the best quality you can use. So my next one is on baking sheets and parchment paper. So in terms of baking sheets, I never like to use the like black colored cheap baking sheets, because the metal that's used in those baking sheets are really thin. And what happens is when you heat them up, if they're the really thin kind, they'll start to warp, which is not a big deal. But sometimes you hear like something in your oven go punk. And then because your baking sheet has has worked, and that's usually Okay, sometimes you got juices in that but the scary part is when you take it out, and it starts to cool down, it warps back. And if you've got like hot juices on the baking pan, I've had it happen to me before where it warps back and goes blank. And then and you get hot juices going everywhere. You

55
00:46:59,070 --> 00:46:59,910
Unknown: don't want that.

56
00:47:00,720 --> 00:48:05,580
Wes Bos: So that's my sick pick there. And then my real sick pick today is when you buy these baking sheets that are like silver, and they're like really thick. You I often put parchment paper down before I cook anything and it's a pain because the partial paper that you get at the store is not like cut to fit these like restaurant baking sheets. So what I do and then when I used to work at I used to work at Tim Hortons, which is like the donut shop the most Canadian job ever the most Canadian job ever. But we had these pre cut parchment paper that you would just grab a sheet and throw it on the the baking sheet and it would fit perfectly and then you just crumple it up and throw it out and you're done. And I love that because you never have to like have misfitting partial paper or sometimes depression paper doesn't rip off on the box properly. And if you have a big leaf of paper flopping around in the oven that can catch on fire. So I just went and bought I think a sheet 500 sheets of pre cut parchment paper. And it's like make makes my life so much better. So that's my sick pick today.

57
00:48:05,610 --> 00:48:10,140
Scott Tolinski: That's like yeah, Tim Hortons pro tip. Nice, sick.

58
00:48:10,230 --> 00:48:11,460
Wes Bos: Tim Hortons pro tip.

59
00:48:11,550 --> 00:48:24,330
Scott Tolinski: Yeah, actually, that's one of the things I miss about living in Colorado, because we had Tim Hortons all over Michigan right there. Because we're so close to the border right there. And Colorado. Nope, nothing, nothing. Nothing. There's

60
00:48:24,330 --> 00:48:27,510
Wes Bos: one in Dubai, which is funny. There's not even one in Colorado.

61
00:48:27,540 --> 00:48:45,180
Scott Tolinski: I don't know if there's not one but that they were like everywhere. And like they're in the frequency of Tim Hortons would be like not necessarily Starbucks level but definitely approaching it in in Michigan. And they're they're very frequently all over the place. Yeah, I'm sure there might be one here somewhere that I would have to like drive 20 minutes to get

62
00:48:46,140 --> 00:48:47,310
Wes Bos: or live in that good.

63
00:48:47,310 --> 00:48:48,810
Unknown: No, it's the kind

64
00:48:48,810 --> 00:48:51,450
Wes Bos: of the idea about Tim Hortons ears. Like that's okay.

65
00:48:51,480 --> 00:48:53,520
Scott Tolinski: Yeah, that's about it. Some timbits

66
00:48:54,030 --> 00:48:57,660
Wes Bos: Yeah, it's okay. It's fine. It's, it's, it's fine.

67
00:48:57,900 --> 00:51:06,330
Scott Tolinski: Yeah. Okay, so my sick pick is bordering on like, it's exceedingly wholesome. is the only way I can describe this. It's a YouTube channel. This YouTube channel has 600,000 subscribers. It's big time YouTube channel. And I don't know how to pronounce this. I'm guessing it's gel. J e Ll e gels. Marble runs, which is this is gonna sound absolutely ridiculous. And I'm already like laughing at the fact that this is my sixth pick, but it is YouTube videos of marble races. This guy sets up these courses have marbles racing. And then they have a commentator who is as good as any professional sports commentator commentating these things. All of the marbles have names, but they have fake stands in the audience where like there's a fake audience of marbles watching. And he refers to these barbells as if they're like human beings. So it's like the marble falls off the course. They'll be like, oh, they're gonna be thinking about that when in the offseason, and and the whole thing is bordering on complete. absurd, but I guarantee you, if you put one of these on, it is hard to shut off. I ended up watching, like I would be embarrassed to tell you how many marble runs I watched when I was sick with the stomach flu. And I was like I was maybe even delirious by the end of it. I was sitting on the couch, watching it and just cracking up. And currently you'd be like, are you watching another Marble Run? Are you actually sitting down to watch this? I'm like, I've been watching it all day. I have this on all day. These things are awesome. They have the marble Olympics, which are very entertaining. The marble Winter Olympics. They have just generic like runs down like a sandy Hill and then they have some like more ridiculous courses. Either way, this thing sounds like it's the most absurd thing on the planet. Just watch a video. It's totally Bizarro and in my opinion, extremely entertaining. I think that's probably exceedingly subjective. So check it out. If you are the if you're interested in some good wholesome YouTube content that may take you down a rabbit hole of watching marbles race each other for hours. Awesome. Shameless plugs. today. I'm

68
00:51:06,330 --> 00:51:36,480
Wes Bos: gonna plug my react course again, advanced react.com I also am going to plug upcoming Black Friday sales. So a lot of people have been asking me Hey, are you gonna have a Black Friday sale? Again? Answer that is yes. It will be around Black Friday. When is Black Friday? A couple weeks? We Yeah, I think week for now. I think maybe by the time this comes out, it will just be a couple days. So get ready for that. Yeah, all of my courses are going to be on sale for Black Friday. Look out for some annoying emails with big countdown timers from me soon.

69
00:51:36,600 --> 00:52:25,500
Scott Tolinski: Yeah, I'm gonna go ahead and also give a large black friday shameless plug here, I'm going to be doing Big Black Friday sales as well for both the subscriptions and all of my courses. So either way that you like to consume my content. If you are interested in a yearly subscription, I would suggest heading over to level up tutorials comm for the Black Friday sales. Again, all of the same things was just said with the big ol annoying countdown timer and stuff. So yeah, check it out. Black Friday's coming up. And I also have a new course this month, which was pro Gatsby to a recreated version of pro Gatsby in which we actually use Gatsby to and we spend a lot more time on the core foundational concepts of Gatsby to give you a little bit more of a knowledge base there. So check it out, level up tutorials, comm forward slash pro and that's all I got today. How about you?

70
00:52:25,500 --> 00:52:28,830
Wes Bos: That's it. See you next week, the PCs

71
00:52:30,750 --> 00:52:40,530
Unknown: head on over to syntax.fm for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

