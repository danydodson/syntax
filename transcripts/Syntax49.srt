1
00:00:01,319 --> 00:01:40,320
Unknown: You're listening to syntax the podcast with a tastiest web development treats out there. strap yourself in and get ready. Here is Scott Lansky and West boss. Hello everybody and welcome to another episode of syntax with me as always as Scotland ski Hayden today, Scott. Hey, I'm doing super good. We just had a ton of fan we had both sets of in laws. My parents Courtney's parents are both staying at the house and we do not have the accommodation to support that many people. So it was a tight quarters, but it was just a lot of fun to have everyone in town. Got to see a bunch of family. And yeah, it's just it was just really nice. Really nice to have everyone out here. How about you? How are you doing? Doing good. It's super nice out here is weird. Like in April, we had like a weird freak snowstorm. And then in May we've had like temps that are like, like it was 35 here the other day, let me convert that to American. That'd be cold. Cold here. Cold there was 35 is 95 Fahrenheit. So it's not cold. It's very hot. It's been like smokin hot last couple days. And I've been loving it. We're going up to a friend's cottage this weekend. And I can't wait. That's awesome. Yeah, yeah. So today we are talking all about what are we talking about today, we have a potluck going down today. So we try to do these potlucks once a month, where we take your questions, and we just talk about smaller things. Because a lot of times we want to talk about stuff that doesn't fit into a huge show. And we often get a lot of questions from you. So hopefully, we can rattle through all six or seven different questions and touch upon a whole bunch of different topics.

2
00:01:40,440 --> 00:02:13,710
Scott Tolinski: This episode is sponsored by fresh books, which is excellent cloud accounting software and coffee cup software, which has made an amazing CSS Grid tool. So for anyone working with CSS Grid, which should be many of you by now, because it's so excellent. You're going to be totally blown away by this awesome tool software that they've put together. So we'll talk about more about these sponsors later on in the episode. So let's get into it. What is the first item in the potluck today, Wes? Alright, this

3
00:02:13,710 --> 00:03:17,460
Unknown: one is from Andy boy, the kid. The question was, what is the best resource for staying up to date with browser related JavaScript? Ie any new or changing Dom API's? I like this question. Because often what happens when these browser API's are sort of in the proposal stage, I don't really care about them all that much. But once they hit the browser, either in stable or they are in sort of a proposed state, what I'll do is when a new version of Chrome comes out, or Firefox does a fantastic job at this, whenever they release a major version, what they do is they detail all of the things that are new in the browser. And some of that stuff is user interface. But they do often have a section on JavaScript, and that will detail these are the new browser API's that are available to the general public. And these are the new browser API's that are available under a flag, you might need to go in and turn those on. And at that point, it's like, oh, never heard about that. Never heard about that, then I can go in and do a little bit of exploratory and then if it's something that is useful, or something that will be useful in the coming years, I'll usually turn that into a hot tip on Twitter.

4
00:03:17,639 --> 00:03:46,590
Wes Bos: Nice. Yeah, I think it's a great, great tip. I mean, because that that information is made available, you just got to go looking forward to it be nice if there was like a, I don't know, maybe there's something like this exists, if you know of this, like tweeted out of this, like a blog that just would just only release those JavaScript part release notes or something like that, like, just so you could have that all in one central place, anytime anything comes out. I'm not sure that I would get interested in that if it exists. Yeah. Next. So let's go have another question here.

5
00:03:46,590 --> 00:03:54,120
Unknown: Let's grab one, let's say how do you stay motivated if you don't like your current project? And this is from Michael Hoffman?

6
00:03:54,630 --> 00:07:05,730
Scott Tolinski: The answer to a good question. It's a good question. And it's one that we've answered in kind of different ways before on the podcast when we're talking about something, maybe other things, but maybe not directly. So how do you stay motivated if you don't like your current project, and I have a lot of experience with this. Because when I was working for the University of Michigan, we were getting a lot of projects that it was essentially an internal agency. So internal companies, or internal sections of the the university would have to bid for projects. No, unlike a normal agency, where the companies that are bidding for these projects are all somewhat exciting companies. This was all just a department in the University of Michigan. So I had a ton of projects that I just did not have a great time doing because they were just so boring, right? Although the contents boring, the layouts, boring, everything's boring about it, there's not too much you can do about it because that's what the the client wants, and that's what the website supposed to be. So for me, I was always taking an opportunity to make it more fun for myself. For instance, you know, take a break Project and learn something like a sass or stylus with it right? Because the end result of the project does not matter what you know, as long as the thing works in the amounts, the specifications, nobody should be getting in your way to say that, hey, you can't try this, or you can't try that as long as it doesn't affect the outcome of the project or take up too much of your time. But I would work on things like maybe developing a new design system for myself, or new tools for myself to make the whole project faster. But either way, I would take it and try to build in ways to either make it more of a learning experience for me it technically, like if creatively the project wasn't exciting, and maybe make it a more technical challenge, right? Have you always been using jQuery or a built in JavaScript slideshow, hey, try building your own for this project. You know, you could take someone else's source and use it as a roadmap. But either way fine, little things about the project that you can now work on to make it more challenging for yourself and in turn more challenging will make it more fun. I think that's, that's really good advice. And I think, also, if you are maybe thinking about this in not in terms of like a work project, but in terms of a personal project, I think that there's a lot to be said for just doubling down and actually finishing stuff. So if you have a personal project, and like I often look look out and I see people who are like putting out like incredible amounts of content and you go like, how is it that you are releasing so much stuff, and I've talked about this before, but it's it's because those people are actually finishing the stuff that they work on in the last 10% of the project is always such a, it's so hard to finish projects like that, it's always so tough to get through that last 10%. And by the time you get there, you're just about ready to be done with it. But I say like, that's probably a really good skill to have as a web developer is being able to push through that last 10% that's really, really hard, just become a little bit more mentally tough, and be able to finish things because that's gonna make you a forex developer, or I don't know what sort of ex developer you can become, but definitely worth it.

7
00:07:05,880 --> 00:08:28,350
Unknown: Yeah, absolutely. This one's from Ron croute. Off Nami. Now, if I actually pronounced your name correctly, the question was, what is your favorite music to work to? And I can tell you, it's definitely not Drake. That's surprising considering where you're located. I thought I thought he was like the national, the National artists. That's Nickelback, but it's just something about Drake that it just cannot stand it. I listen to all kinds of music. And I would encourage you to follow me on Spotify, if you're interested in it. But I would say most of the music that I listen to is what I what is called hardcore metal core. I've got a playlist on Spotify called retired scenester. Metal core, because I know that I think about 80% of web developers are just retired band members or or roadies or something like that. So I listened to that a lot. I've been really into Dino Nyah, Houston is Yeah, yeah. This the audience who doesn't know he? He is like, a prodigy skateboarder at this point. No, he's like, what he's got to be in his like mid 20s or something. But he came up in skateboarding when he was like, a little tiny kid with dreadlocks. And his story is actually really fascinating. There's a documentary on Netflix called navigation about him. But yeah, he is amazing. He is maybe the most incredible skateboarder.

8
00:08:28,560 --> 00:10:39,299
Scott Tolinski: Yeah, he's unreal. And he came out with a new video he's on he skates for Nike. And he came up with a new video called till death. And it's gnarly as hell. And the music that he skates to is awesome. It's like kind of like it's rap. Which I don't listen to a whole bunch of rap but there's a playlist of all the music from his skate video called not Houston till death, and it is got some bumping tunes on there. bumping tunes. Yeah, what about you? I listen to it's all over the board for me. I listen to a ton of rap music, hilariously enough, one of my favorite things to listen to is the three six mafia while I'm programming. I really like the new Janell Monet album. I my favorite sort of like punk punk is this Jeff rosenstock I love pretty much love anything that Jeff Rosen stocks putting out my music tastes are sort of all over the board. I like good, good stuff. I also really like listening to music and like sort of dance on my desk too. So like zap and Roger where he got a little bit of talkbox and sort of like 1970s funk music that I'd be breaking to. I don't know, my rap music tastes are sort of all over the board too, because I like some modern stuff like Kendrick and like a Young Thug. And like, I don't know, I like a lot of random stuff. But I also like some really random rap music like this guy. A patchy Who is the flavor unit, which was a queen Latif his group? He's sort of a periphery member of this like soul. Yeah. And I could listen to the Apache released one album, and I could listen to that album over and over and over. You might, those of you who might know him might know him from his hit track. gangsta bitch that came out in the 90s. So, yeah, pretty much anything Golden Age, rap music, modern rap music. I don't know, as long as it's good, whatever. I also actually good. I have a level up tuts rap playlist on Spotify, too. So if you google level of tons of rap music, or something, I believe it's there. Oh, man, I

9
00:10:39,299 --> 00:11:05,070
Unknown: need to check that out. Actually, there's a couple more here that I've just been like, I have a bunch of music that I listen to over and over when I'm coding just because it helps me get into that flow state. And Levi, the poet who is it's kind of interesting. It's it's kind of some of his stuff sounds like rap. Some of this stuff sounds like, like foci. And are it's all over the place. But and it's all spoken word, but some really good music a big fan of that lately.

10
00:11:05,159 --> 00:16:02,010
Scott Tolinski: Nice. Check it out. All right, what's the next question for us? Next question. All right. So this is a this is a more technical one, in what order? Should developers learn tools and libraries related to graph qL? So in my mind, I guess this question, you know, you could think this is by I'm sorry, this is by Mark volkman. So, in my mind, the first step for graph qL anything is to just play around with graphical for those of you don't know, graphical is this really nice interface for playing around with an API, you should be able to find the graphical interfaces on any sort of graph, qL API, sort of websites, or documentations. And it's an interface that allows you to build the queries and see the results and basically hit real time modify them, one of the cool things about this tool is it gets you hyped for graph qL, you can see just how easy it is to build these queries. And why this thing is so cool with this system. So in my mind, you'd want to just test out graphical first. Next, you want to understand the core concepts of how graph qL itself is just sort of a specification, right? Not a technology or a library, whatever. And then you have your different libraries. So then you understand, hey, okay, now we have these different libraries. So at that point, you'd want to pick one, whether it's relay or Apollo, I think Apollo is easier for beginners, I think Apollo is a little bit easier overall, anyways, so I would pick Apollo, and then just try just Apollo client. There's a lot of API's out there, that are open to play around with. So you can play around with one of these API's that already exists with Apollo client. And then from there, you can go on to writing your own Apollo server and stuff like that. And then you can get into some a lot more of the additional libraries around Apollo or graph QL. Overall, I think one other thing I'd add, like, I totally agree with all that, and one other thing I would add is just go to graph ql.org. And click on there learn, almost always, I don't recommend going to the the spec website for a language just because it's almost always over people's heads. But graph ql.org has an awesome introduction to what graph qL is specifically because there's going to be a whole bunch of new concepts that you're going to need to learn with graph qL, you have queries and mutations and fragments and fields and directives and variables and all of these like new things that you need to learn about before you can actually use it. And I found that if you spend 1020 minutes reading through the documentation on the Learn section of graph ql.org, it's going to really help you kind of talk the talk. Yeah, absolutely. This one is from Ishaan Mathur. I think I got that one. Maybe I am comfortable with j. s, and brackets node on the server. Is it a good idea to learn other languages like PHP or Python? So I often get this email, or Twitter dm or Instagram dm, all the time where people tell me their life story. And then they say, should I learn X, Y, or Z? And at the end of the day, I'll tell you like, first, it depends. Meaning that it depends on what you want to work on it, what different types of projects that you work on, if you get a job that is in PHP, then obviously, yes, you're going to need to learn PHP. Or if you if you want to find yourself, you find in your area, a lot of the job postings are in Python, or maybe you work in a specific industry, or that's like the language. So really, it depends. And I also think there's a lot that you can learn by learning different languages and building stuff in different languages, because some of the best stuff that we have in JavaScript is only brought over to JavaScript because people have written in other languages and have come back and be like, okay, but why don't we have this? This is really easy in these other languages but I can't bring it over. That said if you are looking to just double down on Language, often what I hear from people is that I'm super overwhelmed with what I should do next. Should I spend more time on JavaScript? Or should I spend another spend some more time on PHP, Python, and I think like right now, in the last couple years, JavaScript has been exploding, there'll be some really good articles coming out, where I think the title of the article was, what if JavaScript is the standard language being like, it's probably worth your money tested right now, double down on going all in on JavaScript. Because you're we're starting to see if you want to write a serverless function, you have to write it likely in JavaScript. If you want to build a interactive front end for a WordPress blog, you have to build that in JavaScript, if you want to build some sort of really nice streaming service, you likely will probably build that in JavaScript. And I know that's not what a lot of people want to hear. But it's starting to seem that if you want to be very valuable in the next couple of years, I would just forget about other languages, and just double down on all all in JavaScript. Yeah, I

11
00:16:02,010 --> 00:16:56,490
agree. And in fact, I don't think you're going to regret doing that. And if it is me, like, okay, so the only reason I would pick up something like PHP, or Python, for me at this point is, is if there's some inherent reason, like there's a specific job that I want that uses it right, then I would really need to get you know, those skills up for a job that I'm applying for. But right now I can do everything that I need to do in JavaScript. So taking the time to improve my JavaScript skills are only going to benefit me more in the long run. If I were to learn something else, an additional language, right, I would pick something that is like a surrounding language to the JavaScript ecosystem. Like I would learn something like reason, which is, for those of you don't know, it's like an Oh, camel. Is it Oh, camel, it compiles to JavaScript. It's, it is it is reason based on Oh, camel or is reason? Oh, camel. That's a good question. That's

12
00:16:56,490 --> 00:17:05,160
Unknown: a good question. I, I haven't really looked into that at all. But it's one of those things I keep hearing about. And that's probably one of those things I'm going to need to check out pretty soon.

13
00:17:05,279 --> 00:19:47,460
Scott Tolinski: Reason lets you write simple, fast quality typesafe code while leveraging both JavaScript and oh, camel. Yeah, I know, you can have JavaScript in reason. But either way, I would learn something like a periphery to JavaScript, something that is going to be in the same community, this same world. That way, again, you're just always increasing that that same sort of nucleus of skill set. So speaking of things that we want to double down on, I think CSS Grid is one of those tools. And one of those skills that the more and more you emphasize and put it into your workflow, the more and more you're going to get out of it. And one way that you can get more and more out of CSS Grid is with coffee cup software's CSS Grid prototyping software. Yeah. So coffeecup software is their company that makes a lot of this kind of like a GUI in order to build websites. And they contacted me a couple of months ago and said, Hey, we're actually releasing a CSS Grid tool, which will allow you to build CSS Grid layouts in this kind of visual editor and then be able to, to use the visual editor to add columns, add rows, and mess with anything that CSS Grid does. And I said, Okay, well, I know a little bit about CSS Grid, I did an entire course on it. And I find it hard to believe that you can make a really nice visual tool, but I'm going to check it out. Because one thing that I've learned is that CSS Grid is very hard to look at just CSS. And so to visualize it, that's why I like to use the Firefox grid visualizer when I use CSS Grid, because you need to be able to see exactly what is going on, as you're authoring the stuff. So they came along, they launched the CSS Grid builder tool, and you can get it at CSS grid.cc. And I had a call with them I saw and I built a CSS grid layout. And then the the big thing came where it is, okay, let's, let's export this thing and see if it's any good. And let me tell you, the code is exactly as I would author it, I think that's called Turing complete, where when a tool outputs code that is, as an author as a regular human would write it, then it starts to look really good. So I was pretty impressed with it. It gives you a really good visual overview as to what your grid looks like you have full control over all the different pieces of the grid, how you justify how you align items, your columns, your rows, your named areas, whether they span from specific areas, and not so I check it out at CSS grid.cc. They also have a little CSS Grid guide on there that will help you get up and running with how CSS Grid works. So check it out at CSS grid.cc. Thanks so much to coffee cup software for sponsoring sick,

14
00:19:47,520 --> 00:23:11,070
sick, sick. All right, next question. What do you got for me? Next question. All right. Next question is as a computer science undergraduate at a university, what can I do in terms of programming that could benefit me greatly after graduation. This is from Mike, I like this question a lot. Because we often don't necessarily hear this sort of, it's sort of the the classic like I'm in school, and what can I do to improve my job chances after unlike the historic advice would be go get a free internship somewhere or whatever and, and work your butt off at a job and make those contacts and connections. But the web development industry is a little bit different in that regard, I mean, you can go and get an internship. And if you have the opportunity, definitely getting your hands dirty. And some real world code in some real project stuff is going to help. But if you if that's not an option, I think there's plenty of things in this sort of modern era that allow you to make the same sort of progress. For one, I mean, you could contribute to open source software, if you come out of college and you're looking for a job and your name is on the list. And you've you've contributed to all these different projects. And it's just going to show that you have the initiative to work on this sort of stuff. And you know that you are the type of person who can work without somebody telling you to do this or that. I also think there's a lot of room for making connections within the industry of maybe reaching out to companies or places that you might want to work. You know, I was always very inspired by certain companies and I would follow their stuff, and I would follow them on Twitter. And I would share their work. And I would talk about their work and stuff like that. I think making these connections and reaching out to people like that is a good idea. You can write blog posts, again, blog posts are a great way to boost up your resume, especially, I mean, it doesn't matter if anybody reads them. But writing a blog post is going to get you thinking differently, it's going to again, show that you have some initiative, and again, you're gonna want to make stuff mean, make a lot of code thrown in your GitHub, it doesn't have to be perfect. Just Just make stuff and show that you like working in code. And I think all of those things are gonna look really good when you're at a your first interview, and another candidate has just graduated and didn't do any of this stuff in here, you've, you know, contributed to open source and you've shown initiative like that. So I think those are all great things that you can do to, you know, increase your stock coming out of school. And that's exactly what I did is I didn't necessarily contribute to open source when I was in school, just because my skills were simply just not there yet. I was just way below where I could be. But I did spend time blogging about what I had learned. I did post up lots of examples. I hung out in chat rooms, and I helped people a lot. It's funny actually just hired someone to help me work on some of my course platform stuff. And the reason why I hired him is because he was helping me. I had some questions. And every time I had a question in the chat room, he will come up and help me and I was like, Damn, this guy's good. Like, he really knows this stuff, right? And like it just by putting yourself out there, whether that's blog posts, whether that's going to conferences and meeting people, whether that's joining in on the conversation on Twitter, contributing to open source, putting yourself out there and showing that you actually are excited about this industry and are actually putting in work. It's going to go a long way in terms of both increasing your skills as well as making yourself attractive to employers.

15
00:23:11,130 --> 00:23:12,240
Unknown: Yeah, love it.

16
00:23:12,330 --> 00:28:04,260
Scott Tolinski: Next question we have here is from Yannick is Hi, Guys, do you want to talk a bit about SEO? I understand react is not a good choice for when SEO matters, what would be a good JS framework to build a website for a local business. So there's a lot here, let's start to unpack this. SEO search engine optimization means that when you will search for something specific, you will find the website and traditionally react in all JavaScript frameworks are not a good idea for SEO because it's not server rendered. Meaning that if Google crawls your website in the past, and it's still kind of up in the air, whether or not it works now, Google would not actually run the JavaScript on your page, it would just it would just take the CSS and the HTML does on the page, render at that page really quickly and read all of the words that are on it. And then anything that gets rendered after the fact in JavaScript is kind of invisible to to Google bots. Now there is a whole lot of evidence that Google does does run JavaScript. Now there's a lot of people who have showed examples of running a react to just client side and it still renders out that said, what I bet my business on it No way, I don't think it's nearly as stable as having a server rendered HTML application. But that says, you can now easily render your react application. somebody the other day, asked me, hey, Wes, in which episode did you talk about X, Y, or Z. And all I had to do is just google syntax and the topic that they talked about. And the whole syntax website is built in react. It's all built in JavaScript, but it's server rendered, meaning that it gets rendered on the server, it spits out HTML so that when Google crawls it, it doesn't actually have to run any JavaScript to access So all of the show notes and everything that's on that page. So server rendering is not the easiest thing in the world, especially even like I use next j. s, there's a couple other frameworks for this is still not the easiest thing in the world. There's a lot of like little things that you have to talk about. I think we've done some shows in the past on this, but it's definitely worth worth doing it. So if I were building a website for a local business, I would probably go with next jass or something like a static site like Gatsby, or stick if it's just a simple example, I might just stick with a existing WordPress theme. That way, you know, WordPress has kind of tried and true for for SEO. Yeah. Any thoughts on that? Scott? Yeah. on the grounds of server side rendering, not always being easy. Yeah, I have. So like, the server side rendering for me is with Meteor and react, which isn't, isn't bad. But then you have to have graph QL. And then you have to figure out a way for graph qL is the data to come in and be server side rendered. And then you know, what I am totally hung up on code splitting, with server side rendering, using dynamic imports, my dynamic imports just don't server side render. And it's like one of those things that is just be been bashing my head against the keyboard for a couple months to try to make this happen. And I don't get anywhere with it. So I can totally understand server side rendering being difficult with these things. But again, there are services like you mentioned, like next that make it just super easy, or static site generators, like Gatsby that make it super easy. But if all of those things don't do it for you, there's also services like pre render pre render.io, that allows your your site to be fully crawled by Google as if it was just crawling static sites. But it doesn't actually require you to do anything. Pre render just sort of crawls your page as JavaScript and output the static version of it. That's just for search engines. So there are definitely other ways around this. If those things don't work for you. I like pre render, it's a pretty sweet service, they 19 billion pages. They have surfer engines cross there, there are big, big heavy hitter here. Definitely something that's really cool to use. But yeah, that's pretty much my thoughts. I don't I don't think it's too impossible to do server side rendering with JavaScript or with react. And I think it's getting any lean easier all the time. I don't I don't think there's any reason why you wouldn't pick react for SEO reasons. I just that that isn't the thing for me, I don't think, yeah, yeah, I don't, I don't think you really have to worry too much about that, given that you can put in the time. And maybe I should explain why it's such a problem. Because let's say you have a react application and like three levels deep, you have an AJAX request, how does your application know to wait for that Ajax request to fetch the data, and then to come back, and then to render to the page. And then to finally spit that out? There's this whole a synchronous nature to JavaScript, whereas a lot of server side only languages like PHP are very, they're very synchronous. They read top to bottom. So they only export the data at the end of the day.

17
00:28:04,590 --> 00:29:56,430
Wes Bos: Yeah, it's it's a, it's tough stuff. All right. So I've just stood up at my standing desk. So you know, things are getting serious here. Next, the next question we have coming in is from this is from Tom, this one, I think goes it kind of nicely along with the college student one in a certain kind of way. They say, soft skills question, how can I build my network when I'm a grumpy old man, and then in parentheses, by industry standards, anyways, I totally get that, who is tired by the end of the workday and would rather go home to dinner with the spouse, then go to a meetup event? Yeah, this one, this resonates with me as someone with a one year old, because I don't, you know, want to go to meetups all the time. And I don't want to work past five o'clock anymore. And I want to just do the nine to five thing check in check out. But I also want to make excellent things constantly improve network and do all that stuff. So this answer is in two parts. One part is that you need to make that sort of maybe a priority at some time in your work day. It doesn't have to be long, you can take like, you know, 1020 minutes out of your workday and do some digital marketing and not marketing, digital networking, right, where you're connecting with other people on chat groups or something like that. I think slack groups or spectrum channels are a great way to sort of meet other developers and prove that network there is a level of tut's slack room again, or a bunch of people hang out and talk about code. So like that kind of stuff is a great way that you can, you know, improve your network by meeting other developers who are also working on the stuff without having to like take time after work or something like that. I think there's just so much networking that you can be that you can do digitally. I mean, for instance, Wes and I did not meet in person.

18
00:29:57,480 --> 00:30:04,650
Unknown: We even somebody like tweeted the other day Would love to hang out with you. And Scott, I was like, that's funny, cuz I've never hung out with Scott before.

19
00:30:04,680 --> 00:31:33,510
Scott Tolinski: Yeah, we I know, people are most surprised when they hear that we have never met in person. We have only hung out online or in chat rooms or slack rooms or webcams or whatever. But you can do that much networking. I mean, we've networked to the point where we have a podcast for a year, and we've worked on projects. And we've done all sorts of cool stuff, right. But like, this all just happened because of digital networking, which is something you can certainly do via Twitter, or Slack, or GitHub or anything, just build those connections. And you don't have to take your whole day, you can take 510 minutes here and there, whatever, you know, take some time out and just say, Hey, I'm actually going to connect with some people that I either, you know, admire or like minded or whatever. And that way you can continue to grow your network and just work on it. Now, again, the second part of this is, is maybe pick one meetup a month, and just go to it. Because there isn't a nice thing about being in this, this natural energy of this room where people are learning things. And they're teaching things and whatever. And I don't have time, personally to go to a meetup every week. But I can make time to pick one meetup a month, I go to the react to Denver meetup. And I love going to that particular meetup. Even though most nights I would be like, I can't do this. You know, there's too much other stuff to do. But one on one a month is not a huge commitment. I don't think and I think it's definitely that that is kind of important to get out there. Yeah,

20
00:31:33,510 --> 00:32:46,230
Wes Bos: I totally agree. I, I'm a huge proponent of just working your nine to five especially like, now I've got kids, I don't really want to leave, I don't want to leave my wife with these are bratty kids that are put them to bed by herself and all that stuff. So I don't even like going to conferences all that much. And what happens every single time that I have a conference or a meet up before. I'm like, Oh, I don't want to go. And then I go and then I come back. And I'm like, Oh, that was amazing. Like, I feel like re energized. I'm all excited again. It's like going, Yeah, I'm all excited. It's true. You never want to go to the gym, then you actually go and you go into a meet some really cool people. You talk about some stuff and you learn a whole bunch of stuff, you get different people's opinions on stuff. So big fan of doing slack rooms and just kind of being online all day and kind of the watercooler conversation. But it's definitely worth once a month once every two months going out to some sort of meetup conference, and getting to know it. But I totally feel you on there. Where you I'm not as young as I used to be. I used to love to go to these things all the time, as many as I possibly could. And, and now I just rather like sit home and water my lawn and yeah, I drink a beer with my wife, you know? Yeah,

21
00:32:46,230 --> 00:35:20,280
Scott Tolinski: I'm right there with ya. All right, next one. This is a question for Wes. I'm glad I picked this one because it's for me, I have taken your react course and JavaScript 30 course how do you come up with such good designs and UI? So first of all, thank you. I'm not like I if you go back and listen to like our origin stories, I think way back, let me go real quick find the episode number seven is Scott's origin story. And episode eight is my origin story. And we sort of detail like how we got to where we are. And before I are kind of as I got into coding, I was actually spending a lot of more of my time in Photoshop, and designing stuff. So I do have a bit of a design background before I got heavy into coding. But I think really where my design started to get much better is when I was working the whole PSD to WordPress scene for a long time where I would work with designers, they would give me a Photoshop file, or I guess these days, it would be a sketch file or a figma file or something like that. And then I would try to convert that pixel for pixel to HTML and CSS. And that both makes you a really good developer, because you have to learn how to do all these different things in CSS. But it also forces you to pay attention to things that you might not have necessarily realized before things like letter spacing, and things like padding, and margin and specific colors and the way that fonts work together. And all of those a lot of like these like little things and that make a design good that you can pretty much just like have a list of these are 20 things that make a good design. And if I follow all of these 20 rules, then your stuff is going to look 80% of the way there and then there's there again, there's a whole creative, creative aspect to it. I always like to take something that is like new to CSS, like clip path or a bunch of patterns or multiple background patterns, or multiple background images. I like to use all of those things because I know what's new and cutting edge and CSS but I also know what's what's good and what looks good. So, really that's that's how I got good at it. I've been doing It for, like, what, 10 years now, I do feel like my stuff has gotten a lot better. And I do feel in the last like three or four years, I've sort of hit my stride in terms of having my own style. Previously, before that it was a lot of mimicking other people's style. And now I've sort of hit my stride with my own. Yeah,

22
00:35:20,309 --> 00:35:43,290
Unknown: I think at the end of the day, it all comes down to practice, I mean, the amount of time you've put into it, and you obviously you have good taste. And like you said, You're mimicking a lot of that good taste, and eventually, your taste, and your work combined to form this unique style and the actual actual skills. Definitely something I wish I put more time into, to be honest, I'm getting there. I'm getting there. But I'm not there.

23
00:35:43,319 --> 00:40:05,340
Scott Tolinski: Totally. I actually have one more more thing to add to that is a lot of my design stuff is also very simple. I feel like an area where I could get much better at design is when your application gets complicated. And you need to convey information and make good user experience based on a design. That's a whole nother level of designers. It doesn't just look good, but it is a joy to use this product. And that's where a lot of these top shelf developer starts to shine where they can make something enjoyable to use because of not how it looks but but how how you interact with the product. Yeah, that's kind of my my next step. Nice. You know what, there's one aspect of design and the specifically web design, and I've always been terrible at is body copy, like not like paragraphs and paragraphs of an article. But like, Hey, I just have a single paragraph. Like I get the line letter spacing, I get the vertical rhythm aspect of it, I get the font size, I just don't make it look good for some reason. It's like, it's like a curse. But yeah, okay, so Okay, we have one more, and then we're gonna take a break for another sponsor. This is Ryan wrote. And Ryan road asks, as more web moves to secure connections with progressive web apps, dot app, etc. Where can a noob learn the basics of HTTPS SSL certificates, services, like Let's Encrypt and how to deploy a secure website. And this is going to be a good resource, I think, in general for this kind of stuff. But I would follow Troy hunt, who created the site Have I been poned. But he's very, he's very security focused. And so his twitter feed ends up becoming like a great anytime a an excellent article about anything security comes up. It's it's basically on his Twitter feed, his blog is great. He does a lot of courses for Pluralsight. So I would recommend checking out some of his courses, like introduction to browser security headers, stuff like that. So he is a really good follow in a great person to check out their courses, because as far as security goes, he's definitely up there. Yeah, I think that's, that's who I follow as well, to get a lot of the stuff, I do see a lot of the little tips on Twitter and things that will come your way. One other thing I think of in terms of this HTTPS and SSL and like, I think that it's so bizarre to me that it's so hard still to do SSL properly, I know that there's less than than crypt and it's for free. But you still have to get into your server and assign the certificates and make sure that you set up a cron job to have them renew. And you have to understand like, how if you have an nginx, server in front of it, and all that stuff, and I think that this stuff is going to not be your problem pretty soon it already is if you use Netlify sites. Now, Meteor galaxy does it for hub. Yeah, a lot of these like services where you do pay a little bit extra per month for this, they will handle all of that SSL provisioning, all that stuff for you. And then you can also just use a CloudFlare, where if you, you use CloudFlare as a DNS provider. And what that means is that, like, let's say you buy a domain name@hover.com, usually what happens is that you go to hover and you point your name servers to your hosting company. And what you do instead is that you put your name servers to CloudFlare. And then CloudFlare, will appoint what's called a records towards your hosting company. And then CloudFlare will sort of sit in between your server and and your visitors and it will sort of proxy the traffic and there's a whole bunch of stuff that they do. They do DDoS mitigation, and they allow you to block certain countries, and they like to cache a bunch of files, and there's tons of stuff that they do and but probably the reason a lot of people use them is because they provide free HTTPS certificates. So if you can just turn this on, and that will will put an HTTPS certificate on yours. The only thing that is a gotcha I do use CloudFlare on all mine. But if you ever have to temporarily turn off CloudFlare it's called gray clouding it, then your HTTPS will break because if you turn it off, there's no certificate right? So I still do put a Let's Encrypt on all of my sites. And then I also use CloudFlare as a secondary level of security, and I use it for a couple other reasons.

24
00:40:05,400 --> 00:40:11,900
Unknown: Yeah. I don't know, though the SSL stuff like he said, it's still not as not as much fun as it should be. But it's getting there.

25
00:40:12,090 --> 00:41:07,290
Scott Tolinski: Yeah, I think like, pretty soon what's going to happen is that and this is already happening with things like caddy server, where your server will do will handle that for you, rather than you have to worry about like SSL certificates and signing them and provisioning them and all that you just do something useful. And like a caddy server, where it caddy is like a replacement for Apache or nginx. And it handles it for you. And I believe a future version of nginx will also do this, where it will just provision the certificate and handle it all for you. Because I just don't understand, like, why do we have to do this as developers? Like, shouldn't it just be? Yeah, handled? automatically? Yeah. Because like, also, like stuff is going to rot. Like if you leave a website for three years and don't touch it, like used to be able to go back to old websites, and you could view them from 15 years ago. And now if you leave a website for a year and you forget to renew the certificate, the thing is busted.

26
00:41:07,320 --> 00:41:24,270
Unknown: Yeah, yeah. I'm excited for that day where it's turnkey, super easy. 24. Seven. Okay, so think of other things that are turnkey, easy, 24. Seven, I think of fresh books, which is amazing cloud accounting software that Wes and I both use for our personal and business accounting. Let me just open up Yeah,

27
00:41:24,270 --> 00:41:26,960
I got one.

28
00:41:29,190 --> 00:43:00,690
Scott Tolinski: Beautiful segue, we actually got a little note from one of our sponsors that they really like how we just just put this punters in and segway the men and, and kind of talk through it rather than have a formal pre recorded thing. But so Freshbooks is going to allow you to track your hours, format, your estimates, work out your taxes, capture your expenses, Chase late payments, prepare invoices, submit proposals, all of that stuff, when you're a freelancer, that is all known as paperwork. And the good news about that is that fresh book has created a ridiculously easy cloud accounting software, for freelancers for small business owners, that will tackle all of those problems and solve all of those problems for you. So I really like fresh books I've been using, I think I've been using fresh books or something like 10 years or laying fresh books is a local company to where I live. And I have a lot of friends that work there. And I just have such a big fan of the company because if I need to send out an invoice, you need to get paid for one of the sponsorship spots on this podcast, you just jump in, you add the details to it, the new Freshbooks is even faster used to have to create a customer and then create an invoice but you can just create an invoice and create the customer at the exact same time. So I'm just so in love with Freshbooks for managing that the part of running a business that sucks I hate doing all the stuff in Freshbooks makes it super easy. So head to freshbooks.com forward slash syntax and enter syntax into the How did you hear about a section? Thanks so much to Freshbooks for sponsoring. Thank you. Alright, do you want to hit a couple more of these and then get into the sick pics are?

29
00:43:00,990 --> 00:43:02,010
Unknown: Yeah, yeah.

30
00:43:02,010 --> 00:47:31,770
Scott Tolinski: Okay. Yeah, one right here. Yeah. from Max, have you? Have you had experience working in big enterprises? Also ones that don't focus on tech primarily? If so, would you consider working for such companies just as fun as a smaller team, or even compared to freelancing? So I like this question. Because Scott and I, we're running our own business, we're small, we're lean, we're doing all kinds of stuff. Whereas I know a lot of you that work for this work, listen to this podcast, work for a huge companies that have thousands and thousands of employees. And there's many different departments that work on the website. And I often will hear, it must be nice that you can like be able to jump between all these technologies so quickly. Or it must be nice that you can just use SAS, like it took us three years to get less implemented. And then all sudden, it has changed. So can it be as fun? Absolutely, I think so. I think it really depends on on company culture and values in that and what I have have seen also, like, one A good example is gov.uk. So the government of all people in the UK, you would think the government is slow and stodgy and, and hard to work with. They are like one of the forerunners in creating good online experiences. And they have an amazing team that works on their websites and their design and, and all of the different properties that they have. And it seems to be like compared to I guess, working with online Canadian stuff is just a joy to use any of the UK government website. So that's, I think that's a really cool example. There's another one here in Canada, we have a really big telecom company called TELUS and they really needed to, I think maybe about four or five years ago, they needed to like revamp their entire online presence and they needed to like they need to just move really quickly outside of the the kind of the all of the stuff that a big company sort of dread Download. So they they essentially just created a another company that was inside of the company. And that allowed them to just work as quickly as they can. They had like permission from the high ups there to basically say, like, somebody told me that they have permission to tell anyone higher up to eff off, which is hilarious. That's awesome. Because like they, this is a technology company. And if you're being held back by your technology, then that's not a good, that's not a good place. And that's how big companies fail. Right? So I think it really depends on on who is in the company and company culture. And I think that's definitely something I can change. And I owe a lot of people are have a really nice team inside of a big company. And they really enjoy their their team. I mean, a lot of Mac conferences, you don't necessarily hear about them online, but they're doing really cool work internally. Yeah. Well, when I worked at I worked for a company that was at the time called team Detroit, I think it's called GTB, or something, I just changed the name, and I don't understand it. But they are Ford's main advertising agency, and they handle all of Ford's web work. So we were building prototypes for Ford. And I was a part of a team that was maybe like 40 people where we had some designers, some UX experts, some project managers of developers, and everyone is sort of working in this very like tight knit team to build these design prototypes of which Ford looked at and said, hey, these are too progressive for us. But the work was just so much fun. And the team was so energized by the work. So this was a big, big company, a big, big project. But again, like you said, the company culture and the team culture is really what made this project, not the fact that it's a big project with a lot of people on it, with the fact that we had a system for for how we did everything, we had a system for communicating and working together. And everyone was open minded and excited to be there. So because of that, it was definitely a fun project and exciting and all those good things that you don't, you don't think of when you think of this giant, monolithic company, right. So again, a company culture, how everyone is working together workflow and all that sort of stuff. It makes her breaks it because if you are sitting in a cubicle by yourself, pushing commits and not talking to anyone, and not having, like a good time, you know, that's got to be no fun on a giant old project. Right. Okay, so Oh, last one here. I thought we'd end it off with something kind of fun, something that we've talked a little bit about before. But what are programming podcasts? You guys listen to?

31
00:47:32,040 --> 00:47:56,670
Unknown: Yeah. Why don't you kick off tell us other than syntax? Of course. I don't listen to any programming podcasts. Oh, there's syntax, which is why want an answer this? Yeah, I actually I do listen to syntax. I listen to every episode after it releases. But I need to I like to listen to the podcast and see how you can get better and how you've explained things. I think it helps me become better at at doing this.

32
00:47:56,700 --> 00:49:15,210
Wes Bos: Yeah, I do, too. Now, I actually take that back. I I don't listen to any like, obsessively. But I do listen to what is this one right here, the graph qL radio, I listen to that there's not a ton of episodes. But graph qL radios great for just talking to people who are really using graph qL in actual production environments and how they're using it. I listened to a podcast called smashing security, which is not necessarily about technical stuff, but more or less about web security as a whole. It's not like here's how to do this or that. It's more like, here's some news that happened in sort of things surrounding privacy and web security. I also listen occasionally to a podcast called test talks. It's about testing. And I listen to that one. Whenever I feel like I'm have the energy to listen to a podcast about testing. Because, you know, some people can't even get the energy to do testing itself, let alone listen to a podcast about testing. But for the most part, yeah, no, no technical stuff. I guess Other than that, I listened to a lot of sports podcasts because it's sort of like mindless for me. I listen to a lot of hockey podcasts pretty much like any major hockey podcast that exists I'm listening to, which is hilarious, because West is the Canadian of the group.

33
00:49:17,400 --> 00:49:44,250
Unknown: Yeah, and other than that, it's sort of random stuff. I listened to a podcast called last podcast on the left, which is like sort of mccobb and dark stories. These guys are, it's this podcast is not for everyone. It's sort of like true crime and definitely a little rough, rough stuff in that podcast, but uh, it's, it's, you know, it's actually really hilarious. They have some stand up comedians and stuff on there. And I don't know, let's do a lot of random stuff, but not a ton of tech podcasts.

34
00:49:44,730 --> 00:50:54,990
Scott Tolinski: Yeah, me too. I think that's the reason why we started this podcast is that I didn't like a lot of the tech podcasts. I found them it kind of exhausting to listen to. I found them very dry and slow and poorly recorded. And there of course is Lots of exceptions to that. But as a big motivation for starting syntax was that there is nothing that is kind of like the water cooler. It's kind of a bit more fun. Hopefully, hopefully you find this podcast, a little bit more fun and entertaining and a little bit more applicable. And there's also a reason why we don't necessarily have interviews on this podcast as well as because I don't know sometimes you get a lot of these podcasts with interviews, and the person who are interviewing is is not totally comfortable. Within the sound quality is always terrible. They're talking from inside of a fishbowl or something like that. But that said, I do listen to a couple tech podcasts. Code pen radio is one of my favorites. And I've been listening to that one for years. And they go through it just everything behind running code pen, and they often talk about the different technical challenges behind running code pen and in different features and how it's built and how they work on teams and how they do partnerships. Big fan of that one.

35
00:50:55,170 --> 00:51:11,520
Unknown: I also listened to Chris coils, other podcasts shop talk show. I really liked that one as well. I've listened to that one for years. Every now and then listen to full stack radio from Adam wathan. That one's pretty good. He's a fellow Canadian jazz party is a pretty good one as well. I

36
00:51:11,520 --> 00:51:46,500
Wes Bos: don't listen to it all the time. But if I have some I haven't got a huge list. I need to do podcast bankruptcy because they're all just gonna come in late. Yeah, I just listened to more business podcasts and more interesting ones. Oh, under the radar. That's from Marco arment. He's an iOS developer, but I just find his take on programming in general and managing projects to be very refreshing. Tools Day is a really nice one. It's from Oona and Chris and they basically once a week they talk about different tools and different things related to programming. I

37
00:51:46,500 --> 00:52:20,010
Unknown: find that one very refreshing. I like that one. And other than that, that's about it. What's your favorite podcasts? Oh, favorite business podcasts a couple in the indie hackers one which I've been on myself. That's from courtland. He is working for stripe now. So it actually the podcast comes from stripe. But it's he asked really good questions and not like typical there's a lot of business podcasts out there that are very fluffy and, and very and motivational. Yeah. content from some other business podcast. And they're just yeah.

38
00:52:20,010 --> 00:52:42,990
Scott Tolinski: And they're all the people that are on it are just there to plug something. Whereas indie hackers is actually gets into otherwise in the house of business mixergy I haven't listened to that one. Ever since I stopped driving to Toronto, I haven't been listening to that one because it's a big podcast. But I like that one startups for the rest of us is from the founder of drip, as well as Mike,

39
00:52:42,990 --> 00:53:22,110
Unknown: I think it's Mike Tabor, who runs I forget the name of the business anyways, that's a good one for both business and solving technical hurdles. I always like hearing just how these different businesses solve problems that I don't necessarily run into like database sharding, and things like that. That's not something I've ever run into. But it's nice to know what is database sharding? And, and why would you ever run into these problems? And that's it for now. I'll post a list at some point of all the podcasts I'm subscribed to. There's a couple dozen in here. Yeah, I should keep like a, like an up to date list. It'd be nice if you could sync that out of pocket casts or something just which is just a straight up list.

40
00:53:22,680 --> 00:55:16,200
Wes Bos: Yeah. Oh, Jeffrey Wright way how's like a nice little podcast called the lyric cast snippet. And he's just got a really good view on life, I think. And he often will just take a specific thing like whether it's a social media addiction or mantras and programming, and he'll just like, be like, Hey, everyone calm down about this. It's not that big of a deal. And here's why. I think it nice, big fan of that one. It's it's nice and short to cool. I like I like all those, like lots of podcasts, if there are things that you really like it out there, podcasting, and we mentioned stuff that you find interesting business programming, otherwise, hit us up with what these podcasts are, especially if they're maybe not as mainstream of ones that we've probably seen and heard of 1000 times before. We'd love to hear what podcast you are listening to as well. Cool. So yeah, that is it for this potluck. Everything has been everything has been real tasty here. So I hope you enjoy dishes are done. Yeah, the dishes are done. The tablecloth has been packed up and ready to go. What kind of sick pick Do you have to take with you? At the end of dometic? Do I have a sick pick for you today? So a couple of weeks ago, a couple buddies of mine got together in the park, and they said we're gonna play spike ball. And I was like, that sounds dumb. What is that? And so what it is, it's like you get this little trampoline, like it's like a mini trampoline, and it has like a net in it and you get a ball and you have four people and one other person's on your team. So two on two, and it's kind of like volleyball where you serve the ball into the net and it bounces out and then the other team has the three hits like volleyball to hit it back into the net and back to your side. And then you have three hits that hit it back. And what you try to do is you try to like spike it so that they can't get to the ball on time or you try to hit it lightly. So it falls off and they have to die for it. And man, I

41
00:55:16,200 --> 00:55:37,170
Unknown: haven't had that much fun in so long. It was it was so cool. And there's another there's a kind of an I don't know if it's a knockoff version or whatever, but I ordered it from Amazon. It's called slammer. It seems to be about 50 bucks cheaper. So I ordered that up. And I'm really excited for the summer to be playing spike ball or slam with all my friends nice. I

42
00:55:37,170 --> 00:56:24,420
Wes Bos: actually so it's hilarious because I saw this, like my my parents love Shark Tank. I don't watch Shark Tank, but my parents love Shark Tank. So whenever they're in town, or we're at their house, we're watching Shark Tank, and yet, I just happened to catch the episode where this was on Shark Tank. And I remember thinking, Wow, that looks really fun. I bet people in Denver would love this thing. And it was like almost like two weeks later, I was walking in wash Park, which is one of the big parks here. And there was like three people like three separate games of this going on. I was just thinking, yep, that looks about right. You know, so it looks a lot of fun at first one you know when they say they're trying to invent a new game, you know that I think there's like a level of eye rolling that comes along with it. But it looks like a total blast, man. It looks like a lot of fun. Yeah, I

43
00:56:24,420 --> 00:56:37,620
Unknown: couldn't believe how much how much fun I was. It's definitely that kind of like, like beer league kind of game where you and your buddies go play slam Oh, in the park for a couple couple hours. And then you go slam Oh, a couple beers afterwards.

44
00:56:38,910 --> 00:59:31,860
Wes Bos: Slam Oh, nice. I love it. So my sick pick today is going to be a YouTube channel. And this is a channel that might be sort of odd for some people who don't know anything about dance. This is called stance stance is a YouTube channel that they publish pretty much every single major breakdancing competition, the like high high quality, high production video, and these guys started this out of nowhere, it was just like a bunch of dudes bringing their cameras to B boy battles of low, low sort of production. And I've just really grown the channel to a place where they are sort of the people to film a lot of this stuff. So this is like the record for a lot of these competitions. But some of the cool things that they really do is like the video like the very first video on their pages, monster moments at freestyle session 20th anniversary, where they put together these compilations of the craziest stuff from that competition. So even if you're not into watching a breakdancing competition, just put on one of these compilations, and proceed to have your mind blown because these people are the best in the world at what they do. So I love this channel. Anytime anything pops up. I'm watching it. And so if you're interested at all in dancer, human movement or anything like that, I check out the stance YouTube channel. I love to give some credit to these guys, because they have really put in the work on this thing. And it's awesome, wicked. Do what about shameless plugs, any shameless plugs today? Yeah, I released a an intermediate react course called level to react a couple weeks ago. And this course covers everything from render props to portals, to understanding and how to use those technologies. The context API, we do some real sweet animation in it, where we're doing the Tinder interface, dragging where you're doing with physics based animation, using a library called Rex spring, which gives you an absolute ton of configuration and ton of flexibility. So we go over how you can do things like interpolating rotation values from x dragging values, and I step it all up to make it really nice and easy. So that you can build some really fantastic, really modern interface stuff without having any prior knowledge ahead of time. So if you're interested in learning intermediate react concepts, how to level up tutorials.com forward slash store and purchase level to react or you can become a levelup pro subscriber and get access to everything on level up tutorials that can. But again, I'm going to just plug my courses in general, go to West boss comm forward slash courses if you want to learn anything about react, or ESX, or node or just get better at vanilla JavaScript. And pretty soon I'm going to have an advanced react course. And I'm going to be working on a beginner JavaScript course likely after that. I'm really excited about that. So check it out at Wes bos.com forward slash courses and learn something today. sick,

45
00:59:31,890 --> 00:59:32,480
Unknown: sick, sick, sick,

46
00:59:32,490 --> 01:00:13,620
Scott Tolinski: sick, sick. Alright, I think that's it. We'll see you next week. Thanks for tuning in. Yeah, and as always, check out this episode show notes for the link to the potluck question form so that you can submit your questions if you would like to hear them on the next potluck episode where we're going to be doing one of these a month. So because we get so many questions that we have to do one a month or else we're going to be totally backlogged forever. So, one a month, Pollak episodes head on over to the course notes, or the course notes, the what is the Episode Notes, show notes, show notes and get that form and let us know what kind of questions you have tech or business or soft or any of that kind of stuff. We'd love to hear him.

47
01:00:13,860 --> 01:00:21,180
Unknown: Yeah, yeah, we should do another business one again. So ask us your business questions. Yeah, we'll we'll do a business episode real quick. Hashtag business.

48
01:00:21,270 --> 01:00:22,140
Alright, peace,

49
01:00:22,170 --> 01:00:22,680
please.

50
01:00:24,570 --> 01:00:25,350
Head on over to syntax.fm

51
01:00:25,350 --> 01:00:34,290
for a full archive of all of our shows. And don't forget to subscribe in your podcast player or drop a review if you like this show.

